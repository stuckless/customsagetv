{"PlaylistAPI":{"methods":[{"args":[{"dataType":"sage.Playlist","varName":"Playlist"},{"dataType":"java.lang.Object","varName":"NewItem"}],"name":"AddToPlaylist","comment":"Adds the specified item to this Playlist. The item may be either an Airing, Album, MediaFile or another Playlist.\n\nParameters:\nPlaylist- the Playlist object to add the new item to\nNewItem- the new item to add to the Playlist; must be an Airing, Album, MediaFile or Playlist\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Playlist","varName":"Playlist"}],"name":"GetName","comment":"Gets the name of the specified Playlist\n\nParameters:\nPlaylist- the Playlist object\nReturns:\nthe name of the specified Playlist\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Playlist","varName":"Playlist"}],"name":"GetNumberOfPlaylistItems","comment":"Gets the number of items in the specified Playlist\n\nParameters:\nPlaylist- the Playlist object\nReturns:\nthe number of items in the specified Playlist\n\n\n\n","returnType":"int"},{"args":[{"dataType":"sage.Playlist","varName":"Playlist"},{"dataType":"int","varName":"Index"}],"name":"GetPlaylistItemAt","comment":"Gets the item in this Playlist at the specified index\n\nParameters:\nPlaylist- the Playlist object\nIndex- the 0-based index into the playlist to get the item from\nReturns:\nthe item at the specified index in the Playlist; this will be an Airing, Album, Playlist or null\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"sage.Playlist","varName":"Playlist"},{"dataType":"int","varName":"Index"}],"name":"GetPlaylistItemTypeAt","comment":"Gets the type of item in the Playlist at the specified index\n\nParameters:\nPlaylist- the Playlist object\nIndex- the 0-based index into the Playlist to get the item type for\nReturns:\nthe type of item at the specified index in the Playlist; one of \"Airing\", \"Album\", \"Playlist\" or \"\" (\"Airing\" is used for MediaFile items), \"MediaFile\" will be returned for temporary MediaFile objects that are not in the database\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Playlist","varName":"Playlist"}],"name":"GetPlaylistItems","comment":"Gets the list of items in the specified Playlist\n\nParameters:\nPlaylist- the Playlist object\nReturns:\na list of the items in the specified Playlist\n\n\n\n","returnType":"java.lang.Object[]"},{"args":[{"dataType":"sage.Playlist","varName":"Playlist"},{"dataType":"int","varName":"InsertIndex"},{"dataType":"java.lang.Object","varName":"NewItem"}],"name":"InsertIntoPlaylist","comment":"Inserts a new item into the specified Playlist at the specified position.\n\nParameters:\nPlaylist- the Playlist object to add the new item to\nInsertIndex- the 0-based index that the new item should be inserted at\nNewItem- the new item to insert into the Playlist; must be an Airing, Album, MediaFile or Playlist\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Playlist","varName":"Playlist"},{"dataType":"int","varName":"Index"}],"name":"MovePlaylistItemUp","comment":"Swaps the position of the item at the specified index in the Playlist with the item at the position (Index - 1)\n\nParameters:\nPlaylist- the Playlist object\nIndex- the position of the item to move up one in the playlist\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Playlist","varName":"Playlist"},{"dataType":"int","varName":"Index"}],"name":"MovePlaylistItemDown","comment":"Swaps the position of the item at the specified index in the Playlist with the item at the position (Index   1)\n\nParameters:\nPlaylist- the Playlist object\nIndex- the position of the item to move down one in the playlist\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Playlist","varName":"Playlist"},{"dataType":"java.lang.Object","varName":"Item"}],"name":"RemovePlaylistItem","comment":"Removes the specified item from the Playlist. If this item appears in the Playlist more than once, only the first occurrence will be removed.\n\nParameters:\nPlaylist- the Playlist object\nItem- the item to remove from the Playlist, must be an Airing, MediaFile, Album or Playlist\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Playlist","varName":"Playlist"},{"dataType":"int","varName":"ItemIndex"}],"name":"RemovePlaylistItemAt","comment":"Removes the specified item at the specified index from the Playlist.\n\nParameters:\nPlaylist- the Playlist object\nItemIndex- the index of the item to remove from the Playlist\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Playlist","varName":"Playlist"},{"dataType":"java.lang.String","varName":"Name"}],"name":"SetName","comment":"Sets the name for this Playlist\n\nParameters:\nPlaylist- the Playlist objecxt\nName- the name to set for this Plyalist\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.Object","varName":"Playlist"}],"name":"IsPlaylistObject","comment":"Returns true if the passed in argument is a Playlist object\n\nParameters:\nPlaylist- the object to test to see if it is a Playlist object\nReturns:\ntrue if the passed in argument is a Playlist object, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[],"name":"GetPlaylists","comment":"Gets a list of all of the Playlists in the database\n\nReturns:\na list of all of the Playlists in the database\n\n\n\n","returnType":"sage.Playlist[]"},{"args":[{"dataType":"sage.Playlist","varName":"Playlist"}],"name":"RemovePlaylist","comment":"Removes a specified Playlist from the databse completely. The files in the Playlist will NOT be removed.\n\nParameters:\nPlaylist- the Playlist object to remove\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Playlist","varName":"Playlist"}],"name":"DoesPlaylistHaveVideo","comment":"Returns true if the specified Playlist contains any video files, false otherwise\n\nParameters:\nPlaylist- the Playlist object\nReturns:\ntrue if the specified Playlist contains any video files, false otherwise\nSince:\n5.1\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"Name"}],"name":"AddPlaylist","comment":"Creates a new Playlist object\n\nParameters:\nName- the name for the new Playlist\n\n\n\n","returnType":"sage.Playlist"},{"args":[],"name":"GetNowPlayingList","comment":"Returns the 'Now Playing' playlist. This can be used as a local, client-specific playlist which\n songs can be added to and then played as a temporary set of songs. i.e. usually playlists are shared between\n all of the clients that are connected to a SageTV system, but this one is NOT shared\n\nReturns:\nthe Playlist object to use as the 'Now Playing' list\nSince:\n5.1\n\n\n\n","returnType":"sage.Playlist"},{"args":[{"dataType":"sage.Playlist","varName":"Playlist"},{"dataType":"java.lang.String","varName":"PropertyName"}],"name":"GetPlaylistProperty","comment":"Returns a property value for a specified Playlist. This must have been set using SetPlaylistProperty.\n Returns the empty string when the property is undefined.\n\nParameters:\nPlaylist- the Playlist object\nPropertyName- the name of the property\nReturns:\nthe property value for the specified Playlist, or the empty string if it is not defined\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Playlist","varName":"Playlist"},{"dataType":"java.lang.String","varName":"PropertyName"},{"dataType":"java.lang.String","varName":"PropertyValue"}],"name":"SetPlaylistProperty","comment":"Sets a property for this Playlist. This can be any name/value combination (but the name cannot be null). If the value is null;\n then the specified property will be removed from this Playlist. This only impacts the return values from GetPlaylistProperty and has no other side effects.\n\nParameters:\nPlaylist- the Playlist object\nPropertyName- the name of the property\nPropertyValue- the value of the property\nSince:\n7.0\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Playlist","varName":"Playlist"}],"name":"GetPlaylistProperties","comment":"Returns a java.util.Properties object that has all of the user-set properties for this Playlist in it.\n\nParameters:\nPlaylist- the Playlist object\nReturns:\na java.util.Properties object that has all of the user-set properties for this Playlist in it; this is a copy of the original one so it is safe to modify it\nSince:\n7.1\n\n\n\n","returnType":"java.util.Properties"}],"name":"PlaylistAPI"},"CaptureDeviceAPI":{"methods":[{"args":[],"name":"GetCaptureDevices","comment":"Returns all of the CaptureDevices in the system that SageTV can use\n\nReturns:\nthe names of all of the CaptureDevices in the system that SageTV can use\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDevice"}],"name":"GetCaptureDeviceInputs","comment":"Returns all of the CaptureDeviceInputs for a given CaptureDevice.\n\nParameters:\nCaptureDevice- the name of the CaptureDevice\nReturns:\nall of the CaptureDeviceInputs for the specified CaptureDevice.\n\n\n\n","returnType":"java.lang.String[]"},{"args":[],"name":"GetConfiguredCaptureDeviceInputs","comment":"Returns all of the CaptureDeviceInputs that are currently configured for use by SageTV.\n\nReturns:\nthe names of all of the CaptureDeviceInputs that are currently configured for use by SageTV.\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDevice"}],"name":"IsCaptureDeviceFunctioning","comment":"Returns whether or not a CaptureDevice is functioning (i.e. the device is offline)\n\nParameters:\nCaptureDevice- the name of the CaptureDevice\nReturns:\nfalse if a CaptureDevice is NOT functioning (i.e. the device is offline), otherwise true\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDevice"}],"name":"IsCaptureDeviceANetworkEncoder","comment":"Returns true if a CaptureDevice is a Network Encoder\n\nParameters:\nCaptureDevice- the name of the CaptureDevice\nReturns:\ntrue if the specified CaptureDevice is a Network Encoder\n\n\n\n","returnType":"boolean"},{"args":[],"name":"GetActiveCaptureDevices","comment":"Returns all of the CaptureDevices that are currently configured for use by SageTV\n\nReturns:\nall of the CaptureDevices that are currently configured for use by SageTV\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDevice"}],"name":"IsCaptureDeviceInUseByALiveClient","comment":"Returns true if the CaptureDevice is currently under control of a client who is (or was) watching live TV\n\nParameters:\nCaptureDevice- the name of the CaptureDevice\nReturns:\ntrue if the specified CaptureDevice is currently under control of a client who is watching live/delayed TV\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDevice"},{"dataType":"int","varName":"RFChannel"}],"name":"AddInputForRFChannel","comment":"Returns a CaptureDeviceInput that corresponds to using the tuner input on the CaptureDevice locked to a certain channel. \n For example, using the RF connection from your cable box to the capture card on channel 3 would required adding a new input this way.\n\nParameters:\nCaptureDevice- the name of the CaptureDevice to add the new input to\nRFChannel- the channel to tune to for this RF input\nReturns:\nthe name of the CaptureDeviceInput that was created which will act as an RF channel input\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"GetLastUsedCaptureDevice","comment":"Returns the last CaptureDevice that was accessed by SageTV.\n\nReturns:\nthe name of the last CaptureDevice that was accessed by SageTV.\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDevice"}],"name":"GetLastUsedCaptureDeviceInput","comment":"Returns the last CaptureDeviceInput that was used by SageTV on the given CaptureDevice\n\nParameters:\nCaptureDevice- the name of the CaptureDevice\nReturns:\nthe name of the last CaptureDeviceInput that was used by SageTV on the given CaptureDevice\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDevice"}],"name":"GetCaptureDeviceCurrentRecordFile","comment":"Returns the file that is currently being recorded by this capture device\n\nParameters:\nCaptureDevice- the name of the CaptureDevice\nReturns:\nthe file that is currently being recorded by the specified capture device\n\n\n\n","returnType":"sage.MediaFile"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDevice"}],"name":"GetCaptureDeviceQualities","comment":"Returns the recording qualities which are supported by this CaptureDevice\n\nParameters:\nCaptureDevice- the name of the CaptureDevice\nReturns:\nthe recording qualities which are supported by the specified CaptureDevice\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDevice"}],"name":"GetCaptureDeviceDefaultQuality","comment":"Returns the default recording qualities for this CaptureDevice.\n\nParameters:\nCaptureDevice- the name of the CaptureDevice\nReturns:\nthe default recording quality for the specified CaptureDevice; if there is no default quality set it will return the empty string\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDevice"},{"dataType":"java.lang.String","varName":"Quality"}],"name":"SetCaptureDeviceDefaultQuality","comment":"Sets the default recording quality for a CaptureDevice\n\nParameters:\nCaptureDevice- the name of the CaptureDevice\nQuality- the default quality setting to use for the specified capture device, use null or the empty string to clear the setting\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDevice"},{"dataType":"java.lang.String","varName":"AudioSource"}],"name":"SetCaptureDeviceAudioSource","comment":"Sets the audio capture source for a corresponding CaptureDevice\n\nParameters:\nCaptureDevice- the name of the CaptureDevice\nAudioSource- the name of the audio capture source, should be one of the values fromGetAudioCaptureSources()\n\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDevice"}],"name":"GetCaptureDeviceAudioSource","comment":"Gets the audio capture source for a corresponding CaptureDevice.\n\nParameters:\nCaptureDevice- the name of the CaptureDevice\nReturns:\nthe name of the audio capture source for the specified CaptureDevice; the empty string is returned if there is no separate audio capture source (i.e. multiplexed capture or video only capture)\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"GetAudioCaptureSources","comment":"Returns an array of all the audio capture sources in the system, used withSetCaptureDeviceAudioSource(CaptureDevice, AudioSource)\n\n\nReturns:\nan array of all the audio capture sources in the system\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDevice"}],"name":"IsCaptureDeviceHardwareEncoder","comment":"Returns true if the CaptureDevice is a hardware encoder\n\nParameters:\nCaptureDevice- the name of the CaptureDevice\nReturns:\ntrue if the specified CaptureDevice is a hardware encoder\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDevice"}],"name":"GetCaptureDeviceBroadcastStandard","comment":"Returns the name of the broadcast standard used for reception on this capture device.\n NOTE: The method 'GetCaptureDeviceInputBroadcastStandard' should be used instead since the broadcast standard can change per-input\n\nParameters:\nCaptureDevice- the name of the CaptureDevice\nReturns:\nthe name of the broadcast standard used for reception on this capture device (i.e. NTSC, ATSC, DVB-S, etc.)\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDevice"},{"dataType":"java.lang.String","varName":"DTVStandard"}],"name":"SetCaptureDeviceDTVStandard","comment":"Sets the TV standard to use for a capture device for devices that support multiple digital TV standards. The only current\n example of this is the Hauppauge HVR-4000 which support DVB-T, DVB-S and DVB-C.\n\nParameters:\nCaptureDevice- the name of the CaptureDevice\nDTVStandard- the DTV standard to use for this capture device, should be one of \"DVB-T\", \"DVB-S\" or \"DVB-C\"\nSince:\n7.0\n\n\n\n","returnType":"void"}],"name":"CaptureDeviceAPI"},"TVEditorialAPI":{"methods":[{"args":[],"name":"GetAllTVEditorials","comment":"Returns a list of all of the 'TV Editorials' which are stories about TV shows\n\nReturns:\na list of all of the 'TV Editorials'\nSince:\n5.1\n\n\n\n","returnType":"sage.TVEditorial[]"},{"args":[{"dataType":"sage.TVEditorial","varName":"TVEditorial"}],"name":"GetEditorialTitle","comment":"Returns the title for the specified TVEditorial\n\nParameters:\nTVEditorial- the TVEditorial object\nReturns:\nthe title for the specified TVEditorial\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.TVEditorial","varName":"TVEditorial"}],"name":"GetEditorialShow","comment":"Returns the Show for the specified TVEditorial\n\nParameters:\nTVEditorial- the TVEditorial object\nReturns:\nthe Show for the specified TVEditorial\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.TVEditorial","varName":"TVEditorial"}],"name":"GetEditorialText","comment":"Returns the text for the specified TVEditorial\n\nParameters:\nTVEditorial- the TVEditorial object\nReturns:\nthe text for the specified TVEditorial\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.TVEditorial","varName":"TVEditorial"}],"name":"GetEditorialAirDate","comment":"Returns a String representing the airing date for the content the editorial is about\n\nParameters:\nTVEditorial- the TVEditorial object\nReturns:\na String representing the airing date for the content the editorial is about\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.TVEditorial","varName":"TVEditorial"}],"name":"GetEditorialNetwork","comment":"Returns the network that the Show for this editorial is broadcast on\n\nParameters:\nTVEditorial- the TVEditorial object\nReturns:\nthe network that the Show for this editorial is broadcast on\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.TVEditorial","varName":"TVEditorial"}],"name":"HasEditorialImage","comment":"Returns true if the specified editorial has an image that corresponds to it\n\nParameters:\nTVEditorial- the TVEditorial object\nReturns:\ntrue if the specified editorial has an image that corresponds to it, false otherwise\nSince:\n5.1\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.TVEditorial","varName":"TVEditorial"}],"name":"GetEditorialImage","comment":"Returns the image that corresponds to this editorial if there is one\n\nParameters:\nTVEditorial- the TVEditorial object\nReturns:\nthe image that corresponds to this editorial if there is one\nSince:\n5.1\n\n\n\n","returnType":"sage.MetaImage"}],"name":"TVEditorialAPI"},"TranscodeAPI":{"methods":[{"args":[],"name":"GetTranscodeFormats","comment":"Gets the names of the different transcode formats\n\nReturns:\na list of the names of the different transcode formats\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"FormatName"}],"name":"GetTranscodeFormatDetails","comment":"Gets the format details for the specified format name\n\nParameters:\nFormatName- the name of the transcode format to get the parameter details for\nReturns:\nthe full detail string that describes the specified transcode format\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"FormatName"},{"dataType":"java.lang.String","varName":"FormatDetails"}],"name":"AddTranscodeFormat","comment":"Adds the specified transcode format to the list of available formats\n\nParameters:\nFormatName- the name of the new transcode format\nFormatDetails- the detailed property string for the new format\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"FormatName"}],"name":"RemoveTranscodeFormat","comment":"Removed the specified transcode format to the list of available formats\n\nParameters:\nFormatName- the name of the transcode format to remove\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.MediaFile","varName":"SourceMediaFile"},{"dataType":"java.lang.String","varName":"FormatName"},{"dataType":"java.io.File","varName":"DestinationFile"},{"dataType":"boolean","varName":"DeleteSourceAfterTranscode"}],"name":"AddTranscodeJob","comment":"Adds the specified job to the transcoder's queue. Returns a Job ID# for future reference of it.\n\nParameters:\nSourceMediaFile- the source file that is to be transcoded, if it consists of multiple segments, all segments will be transcoded\nFormatName- the name of the transcode format to use for this conversion\nDestinationFile- the target file path for the conversion or null if SageTV should automatically determine the filename of the target files, if a directory is given then SageTV auto-generates the filename in that directory\nDeleteSourceAfterTranscode- if true then the source media files are deleted when the transcoding is done, if false the source files are kept\nReturns:\nthe job ID number to reference this transcode job\nSince:\n5.1\n\n\n\n","returnType":"int"},{"args":[{"dataType":"sage.MediaFile","varName":"SourceMediaFile"},{"dataType":"java.lang.String","varName":"FormatName"},{"dataType":"java.io.File","varName":"DestinationFile"},{"dataType":"boolean","varName":"DeleteSourceAfterTranscode"},{"dataType":"long","varName":"ClipTimeStart"},{"dataType":"long","varName":"ClipDuration"}],"name":"AddTranscodeJob","comment":"Adds the specified job to the transcoder's queue. Returns a Job ID# for future reference of it. This allows specification of the\n start time and duration for the media which allows extracting a 'clip' from a file.\n\nParameters:\nSourceMediaFile- the source file that is to be transcoded, if it consists of multiple segments, all segments will be transcoded\nFormatName- the name of the transcode format to use for this conversion\nDestinationFile- the target file path for the conversion or null if SageTV should automatically determine the filename of the target files, if a directory is given then SageTV auto-generates the filename in that directory\nDeleteSourceAfterTranscode- if true then the source media files are deleted when the transcoding is done, if false the source files are kept\nClipTimeStart- specifies the time in the file in seconds that the clip starts at (this number is relative to the beginning of the actual file)\nClipDuration- specifies the duration of the clip in seconds to extract from the file (0 to convert until the end of the file)\nReturns:\nthe job ID number to reference this transcode job\nSince:\n5.1\n\n\n\n","returnType":"int"},{"args":[{"dataType":"int","varName":"JobID"}],"name":"GetTranscodeJobStatus","comment":"Gets the status of the specified transcoding job\n\nParameters:\nJobID- the Job ID of the transcoding job to get the status of\nReturns:\nthe status information for the specified transcoding job, will be one of: COMPLETED, TRANSCODING, WAITING TO START, or FAILED\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"int","varName":"JobID"}],"name":"CancelTranscodeJob","comment":"Cancels the specified transcoding ob\n\nParameters:\nJobID- the Job ID of the transcoding job to cancel\nReturns:\ntrue if the job exists and was cancelled, false otherwise\nSince:\n5.1\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"int","varName":"JobID"}],"name":"GetTranscodeJobSourceFile","comment":"Gets the source file of the specified transcoding job\n\nParameters:\nJobID- the Job ID of the transcoding job to get the source file for\nReturns:\nthe source file of the specified transcoding job\nSince:\n5.1\n\n\n\n","returnType":"sage.MediaFile"},{"args":[{"dataType":"int","varName":"JobID"}],"name":"GetTranscodeJobDestFile","comment":"Gets the destination file of the specified transcoding job\n\nParameters:\nJobID- the Job ID of the transcoding job to get the destination file for\nReturns:\nthe destination file of the specified transcoding job, or null if no destination file was specified\nSince:\n5.1\n\n\n\n","returnType":"java.io.File"},{"args":[{"dataType":"int","varName":"JobID"}],"name":"GetTranscodeJobShouldKeepOriginal","comment":"Returns whether or not the specified transcoding job retains the original source file\n\nParameters:\nJobID- the Job ID of the transcoding job to get the destination file for\nReturns:\ntrue if the specified transcoding job keeps its original file when done, false otherwise\nSince:\n5.1\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"int","varName":"JobID"}],"name":"GetTranscodeJobClipStart","comment":"Returns the clip start time for the specified transcode job\n\nParameters:\nJobID- the Job ID of the transcoding job to get the destination file for\nReturns:\nthe clip start time for the specified transcode job, 0 if the start time is unspecified\nSince:\n5.1\n\n\n\n","returnType":"long"},{"args":[{"dataType":"int","varName":"JobID"}],"name":"GetTranscodeJobClipDuration","comment":"Returns the clip duration for the specified transcode job\n\nParameters:\nJobID- the Job ID of the transcoding job to get the destination file for\nReturns:\nthe clip duration for the specified transcode job, 0 if the entire file will be trancoded\nSince:\n5.1\n\n\n\n","returnType":"long"},{"args":[{"dataType":"int","varName":"JobID"}],"name":"GetTranscodeJobFormat","comment":"Gets the target format of the specified transcoding job\n\nParameters:\nJobID- the Job ID of the transcoding job to get the target format file for\nReturns:\nthe target format of the specified transcoding job\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"ClearTranscodedJobs","comment":"Removes all of the completed transcode jobs from the transcoder queue\n\nSince:\n5.1\n\n\n\n","returnType":"void"},{"args":[],"name":"GetTranscodeJobs","comment":"Returns a list of the job IDs for all the current jobs in the transcode queue.\n\nReturns:\nthe list of job IDs for all the current jobs in the transcode queue\nSince:\n5.1\n\n\n\n","returnType":"java.lang.Integer[]"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"CanFileBeTranscoded","comment":"Returns true if the specified MediaFile can be transcoded, false otherwise. Transcoding may be restricted\n by certain formats and also by DRM.\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\ntrue if the specified MediaFile can be transcoded, false otherwise\nSince:\n5.1\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"int","varName":"JobID"}],"name":"GetTranscodeJobCompletePercent","comment":"Gets the percent complete (between 0 and 1 as a float) for a transcode job\n\nParameters:\nJobID- the Job ID of the transcoding job to get the percent complete of\nReturns:\nthe percent complete for the specified transcoding job\nSince:\n5.1\n\n\n\n","returnType":"float"}],"name":"TranscodeAPI"},"ShowAPI":{"methods":[{"args":[{"dataType":"sage.Show","varName":"Show"}],"name":"IsShowEPGDataUnique","comment":"If this is true, then two Airings that both represent this Show will contain the same content.\n If this is false then it means the EPG metadata for the content is 'generic' two different Airings\n each with this Show for its metadata may actually represent different content\n\nParameters:\nShow- the Show object\nReturns:\ntrue if all Airings of this Show represent the same content, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Show","varName":"Show"}],"name":"GetShowMisc","comment":"Returns the miscellaneous metadata for this Show. This includes things such as\n the star rating for a movie, the studio a movie was produced at, etc.\n\nParameters:\nShow- the Show object\nReturns:\nthe miscellaneous metadata for this Show\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Show","varName":"Show"}],"name":"GetShowCategory","comment":"Returns the category for the specified Show. For music files, this will be the genre.\n\nParameters:\nShow- the Show object\nReturns:\nthe category for the Show\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Show","varName":"Show"}],"name":"GetShowSubCategory","comment":"Returns the subcategory for the specified Show\n\nParameters:\nShow- the Show object\nReturns:\nthe subcategory for the Show\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Show","varName":"Show"}],"name":"GetShowCategoriesString","comment":"Returns a String of categories for the Show, separated by '/' if there are multiple levels of categories. For music files, this will be the genre.\n\nParameters:\nShow- the Show object\nReturns:\nthe categories for the Show\nSince:\n7.1\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Show","varName":"Show"}],"name":"GetShowCategoriesList","comment":"Returns a String array of categories for the Show. For music files, this will be the genre.\n\nParameters:\nShow- the Show object\nReturns:\nthe categories for the Show\nSince:\n7.1\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"sage.Show","varName":"Show"}],"name":"GetShowDescription","comment":"Returns the description for the specified Show\n\nParameters:\nShow- the Show object\nReturns:\nthe desccription for the Show\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Show","varName":"Show"}],"name":"GetShowEpisode","comment":"Returns the episode name for the specified Show. For music files, this will be the name of the song.\n\nParameters:\nShow- the Show object\nReturns:\nthe episode name for the specified Show. For music files, this will be the name of the song. For imported videos, this will be the title of the file\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Show","varName":"Show"}],"name":"GetShowExpandedRatings","comment":"Returns the epxanded ratings information for the specified Show. This includes thigs like\n Violence, Nudity, Adult Language, etc.\n\nParameters:\nShow- the Show object\nReturns:\nthe expanded ratings for the Show\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Show","varName":"Show"}],"name":"GetShowParentalRating","comment":"Deprecated. \n\nReturns the parental rating for this show. The parental rating field in Airing is used instead of this in the standard implementation.\n\nParameters:\nShow- the Show object\nReturns:\nthe parental rating info for this show\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Show","varName":"Show"}],"name":"GetShowRated","comment":"Returns the MPAA rating for the specified Show (only used for movies).\n\nParameters:\nShow- the Show object\nReturns:\nthe MPAA rating for this Show, will be one of: G, PG, R, PG-13, etc.\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Show","varName":"Show"}],"name":"GetShowDuration","comment":"Returns the duration of the specified Show. Most Shows do not contain duration information, with the exception\n of movies whose show duration indicates the runing time of the movie.\n\nParameters:\nShow- the Show object\nReturns:\nthe duration in milliseconds of the specified Show, 0 if it is not set\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.Show","varName":"Show"}],"name":"GetShowTitle","comment":"Returns the title of the specified Show. For music this will correspond to the Album name. For imported videos, For imported videos, this will be the title of the file with the relative import path as it's prefix.\n\nParameters:\nShow- the Show object\nReturns:\nthe title of the specified Show\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Show","varName":"Show"}],"name":"GetShowYear","comment":"Gets the year of the specified Show. This is usually only valid for movies.\n\nParameters:\nShow- the Show object\nReturns:\nthe year the specified Show was produced in\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Show","varName":"Show"}],"name":"GetShowExternalID","comment":"Gets the global unique ID which is used to identify Shows. This ID is common among all SageTV users.\n\nParameters:\nShow- the Show object\nReturns:\nthe global unique ID which represents this Show\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Show","varName":"Show"}],"name":"GetOriginalAiringDate","comment":"Gets the date that this Show was originally aired at.\n\nParameters:\nShow- the Show object\nReturns:\nthe date that this Show was originally aired at, same units as java.lang.System.currentTimeMillis()\n\n\n\n","returnType":"long"},{"args":[],"name":"GetRoleTypes","comment":"Gets a list of all of the valid roles that people can have in a Show\n\nReturns:\na list of all of the valid roles that people can have in a Show\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"sage.Show","varName":"Show"}],"name":"GetPeopleInShow","comment":"Gets a list of all of the people involved in this Show. The order of the returned list will\n correlate with the values returned fromGetRolesInShow\n.\n\nParameters:\nShow- the Show object\nReturns:\na list of all of the people involved in this Show as a comma separated list\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Show","varName":"Show"}],"name":"GetPeopleListInShow","comment":"Gets a list of all of the people involved in this Show. The order of the returned list will\n correlate with the values returned fromGetRolesInShow\n.\n\nParameters:\nShow- the Show object\nReturns:\na list of all of the people involved in this Show as a String array\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"sage.Show","varName":"Show"}],"name":"GetPeopleAndCharacterListInShow","comment":"Gets a list of all of the people involved in this Show and the character each of them plays if known. The order of the returned list will\n correlate with the values returned fromGetRolesInShow\n.\n\nParameters:\nShow- the Show object\nReturns:\na list of all of the people involved in this Show with the characters they play as a String array\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"sage.Show","varName":"Show"}],"name":"GetRolesInShow","comment":"Gets a list of the roles for each of the people in the specified Show. The order of the returned list will\n correlate with the values returned fromGetPeopleInShow\n\n\nParameters:\nShow- the Show object\nReturns:\na list of the roles for each of the people in the specified Show\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"sage.Show","varName":"Show"},{"dataType":"java.lang.String","varName":"Role"}],"name":"GetPeopleInShowInRole","comment":"Gets the people in the specified Show in the specified Role. Returned as a comma separated list.\n\nParameters:\nShow- the Show object\nRole- the role to get the people for\nReturns:\nthe people in the specified Show in the specified Role\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Show","varName":"Show"},{"dataType":"java.lang.String[]","varName":"RoleList"}],"name":"GetPeopleInShowInRoles","comment":"Gets the people in the specified Show in the specified Roles. Returned as a comma separated list.\n\nParameters:\nShow- the Show object\nRoleList- the roles to get the people for\nReturns:\nthe people in the specified Show in the specified Roles\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Show","varName":"Show"},{"dataType":"java.lang.String","varName":"Role"}],"name":"GetPeopleAndCharacterInShowInRole","comment":"Gets the people in the specified Show in the specified Role. Returned as a comma separated list.\n Each name will also append the character they play if known; using the localized format \"Actor as Character\".\n\nParameters:\nShow- the Show object\nRole- the role to get the people for\nReturns:\nthe people in the specified Show in the specified Role\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Show","varName":"Show"},{"dataType":"java.lang.String[]","varName":"RoleList"}],"name":"GetPeopleAndCharacterInShowInRoles","comment":"Gets the people in the specified Show in the specified Roles. Returned as a comma separated list.\n Each name will also append the character they play if known; using the localized format \"Actor as Character\".\n\nParameters:\nShow- the Show object\nRoleList- the roles to get the people for\nReturns:\nthe people in the specified Show in the specified Roles\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Show","varName":"Show"},{"dataType":"java.lang.String","varName":"Role"}],"name":"GetPeopleListInShowInRole","comment":"Gets the people in the specified Show in the specified Role. Returned as a String array.\n\nParameters:\nShow- the Show object\nRole- the role to get the people for\nReturns:\nthe people in the specified Show in the specified Role as a String array\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"sage.Show","varName":"Show"},{"dataType":"java.lang.String[]","varName":"RoleList"}],"name":"GetPeopleListInShowInRoles","comment":"Gets the people in the specified Show in the specified Roles. Returned as a String array.\n\nParameters:\nShow- the Show object\nRoleList- the roles to get the people for\nReturns:\nthe people in the specified Show in the specified Roles as a String array\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"sage.Show","varName":"Show"},{"dataType":"java.lang.String","varName":"Role"}],"name":"GetPeopleAndCharacterListInShowInRole","comment":"Gets the people in the specified Show in the specified Role. Returned as a String array.\n Each string will also indicate the character they play if known; using the localized format \"Actor as Character\".\n\nParameters:\nShow- the Show object\nRole- the role to get the people for\nReturns:\nthe people in the specified Show in the specified Role as a String array\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"sage.Show","varName":"Show"},{"dataType":"java.lang.String[]","varName":"RoleList"}],"name":"GetPeopleAndCharacterListInShowInRoles","comment":"Gets the people in the specified Show in the specified Roles. Returned as a String array.\n Each string will also indicate the character they play if known; using the localized format \"Actor as Character\".\n\nParameters:\nShow- the Show object\nRoleList- the roles to get the people for\nReturns:\nthe people in the specified Show in the specified Roles as a String array\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.Object","varName":"Show"}],"name":"IsShowObject","comment":"Returns true if the passed in argument is a Show object. No automatic type conversion\n will be done on the argument.\n\nParameters:\nShow- the object to test to see if its a Show\nReturns:\ntrue if the passed in argument is a Show object, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"IsShowFirstRun","comment":"Returns true if the specified Airing represents the first run of the Show content.\n\nParameters:\nAiring- the Airing object\nReturns:\ntrue if the specified Airing represents the first run of its Show content, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"IsShowReRun","comment":"Returns true if the specified Airing represents a rerun of the Show content.\n\nParameters:\nAiring- the Airing object\nReturns:\ntrue if the specified Airing represents a rerun of its Show content, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Show","varName":"Show"}],"name":"GetShowLanguage","comment":"Returns the language that the specified Show is in.\n\nParameters:\nShow- the Show object\nReturns:\nthe language that the specified Show is in\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"Title"},{"dataType":"boolean","varName":"IsFirstRun"},{"dataType":"java.lang.String","varName":"Episode"},{"dataType":"java.lang.String","varName":"Description"},{"dataType":"long","varName":"Duration"},{"dataType":"java.lang.String","varName":"Category"},{"dataType":"java.lang.String","varName":"SubCategory"},{"dataType":"java.lang.String[]","varName":"PeopleList"},{"dataType":"java.lang.String[]","varName":"RolesListForPeopleList"},{"dataType":"java.lang.String","varName":"Rated"},{"dataType":"java.lang.String[]","varName":"ExpandedRatingsList"},{"dataType":"java.lang.String","varName":"Year"},{"dataType":"java.lang.String","varName":"ParentalRating"},{"dataType":"java.lang.String[]","varName":"MiscList"},{"dataType":"java.lang.String","varName":"ExternalID"},{"dataType":"java.lang.String","varName":"Language"},{"dataType":"long","varName":"OriginalAirDate"}],"name":"AddShow","comment":"Adds a new Show to the database. Null or the empty string (\"\") can be passed in for any unneeded fields.\n\nParameters:\nTitle- the title of the Show (for music this should be album name)\nIsFirstRun- true if this Show is a first run, false otherwise (this parameter has no effect anymore since Airings determine first/rerun status)\nEpisode- the episode name for this Show (for music this should be the song title)\nDescription- the description of the Show\nDuration- the duration of the Show, not necessary and can be zero; this is only used for indicating differences between Airing duration and the actual content duration\nCategory- the category of the Show (should be genre for music)\nSubCategory- the subcategory of the Show\nPeopleList- a list of all of the people in the Show, the roles of the people should correspond to the RolesListForPeopleList argument\nRolesListForPeopleList- a list of the roles for the people in the Show, this should correspond to the PeopleList argument\nRated- the rating for the Show seeGetShowRated()\n\nExpandedRatingsList- the expanded ratings list for the show, seeGetShowExpandedRatings()\n\nYear- the year of the Show\nParentalRating- the parental rating for the Show (this is no longer used since Airing contains the parental rating)\nMiscList- miscellaneous metadata for the Show\nExternalID- the global ID which should be used to uniquely identify this Show\nLanguage- the language for the Show\nOriginalAirDate- the original airing date of the Show\nReturns:\nthe newly created Show object\n\n\n\n","returnType":"sage.Show"},{"args":[{"dataType":"java.lang.String","varName":"Title"},{"dataType":"boolean","varName":"IsFirstRun"},{"dataType":"java.lang.String","varName":"Episode"},{"dataType":"java.lang.String","varName":"Description"},{"dataType":"long","varName":"Duration"},{"dataType":"java.lang.String[]","varName":"Categories"},{"dataType":"java.lang.String[]","varName":"PeopleList"},{"dataType":"java.lang.String[]","varName":"RolesListForPeopleList"},{"dataType":"java.lang.String","varName":"Rated"},{"dataType":"java.lang.String[]","varName":"ExpandedRatingsList"},{"dataType":"java.lang.String","varName":"Year"},{"dataType":"java.lang.String","varName":"ParentalRating"},{"dataType":"java.lang.String[]","varName":"MiscList"},{"dataType":"java.lang.String","varName":"ExternalID"},{"dataType":"java.lang.String","varName":"Language"},{"dataType":"long","varName":"OriginalAirDate"},{"dataType":"int","varName":"SeasonNumber"},{"dataType":"int","varName":"EpisodeNumber"}],"name":"AddShow","comment":"Adds a new Show to the database. Null or the empty string (\"\") can be passed in for any unneeded fields.\n\nParameters:\nTitle- the title of the Show (for music this should be album name)\nIsFirstRun- true if this Show is a first run, false otherwise (this parameter has no effect anymore since Airings determine first/rerun status)\nEpisode- the episode name for this Show (for music this should be the song title)\nDescription- the description of the Show\nDuration- the duration of the Show, not necessary and can be zero; this is only used for indicating differences between Airing duration and the actual content duration\nCategories- an array of the categories of the Show (should be genre for music)\nPeopleList- a list of all of the people in the Show, the roles of the people should correspond to the RolesListForPeopleList argument\nRolesListForPeopleList- a list of the roles for the people in the Show, this should correspond to the PeopleList argument\nRated- the rating for the Show seeGetShowRated()\n\nExpandedRatingsList- the expanded ratings list for the show, seeGetShowExpandedRatings()\n\nYear- the year of the Show\nParentalRating- the parental rating for the Show (this is no longer used since Airing contains the parental rating)\nMiscList- miscellaneous metadata for the Show\nExternalID- the global ID which should be used to uniquely identify this Show\nLanguage- the language for the Show\nOriginalAirDate- the original airing date of the Show\nSeasonNumber- the season number of the Show\nEpisodeNumber- the episode number for the specific season for the Show\nReturns:\nthe newly created Show object\nSince:\n7.1\n\n\n\n","returnType":"sage.Show"},{"args":[{"dataType":"sage.Show","varName":"Show"},{"dataType":"long","varName":"StartingAfterTime"}],"name":"GetAiringsForShow","comment":"Returns a list of all of the Airings for the specified Show starting after the specified time.\n\nParameters:\nShow- the Show object\nStartingAfterTime- the time that all returned Airings should start after\nReturns:\na list of all of the Airings for the specified Show starting after the specified time\n\n\n\n","returnType":"sage.Airing[]"},{"args":[{"dataType":"java.lang.String","varName":"ExternalID"}],"name":"GetShowForExternalID","comment":"Gets a Show based on the global unique ID which is used to identify Shows. This ID is common among all SageTV users.\n This value can be obtained fromGetShowExternalID()\n\n\nParameters:\nExternalID- the external ID to find the corresponding Show for\nReturns:\nthe Show which corresponds to the specified externalID, or null if it isn't found in the database\n\n\n\n","returnType":"sage.Show"},{"args":[{"dataType":"sage.Show","varName":"Show"}],"name":"GetShowSeriesInfo","comment":"Gets the SeriesInfo object for a specified Show if that Show is for a television series and there\n is information on that series.\n\nParameters:\nShow- the Show object\nReturns:\nthe SeriesInfo for the specified Show, or null if the Show has no SeriesInfo\nSince:\n5.1\n\n\n\n","returnType":"sage.SeriesInfo"},{"args":[{"dataType":"sage.Show","varName":"Show"}],"name":"GetShowSeasonNumber","comment":"Returns the season number of the specified Show. For episodic content; sometimes a numeric value is given to the\n season. If that information exists, this will return it.\n\nParameters:\nShow- the Show object\nReturns:\nthe season number of the specified Show, 0 if it is not set\nSince:\n7.1\n\n\n\n","returnType":"int"},{"args":[{"dataType":"sage.Show","varName":"Show"}],"name":"GetShowEpisodeNumber","comment":"Returns the episode number of the specified Show. For episodic content; sometimes a numeric value is given to the\n episode in a season. If that information exists, this will return it.\n\nParameters:\nShow- the Show object\nReturns:\nthe episode number of the specified Show, 0 if it is not set\nSince:\n7.1\n\n\n\n","returnType":"int"},{"args":[{"dataType":"sage.Show","varName":"Show"},{"dataType":"java.lang.String","varName":"Type"},{"dataType":"int","varName":"Index"},{"dataType":"int","varName":"Fallback"}],"name":"GetShowImage","comment":"Returns an image specific to this Show. For the standard implementation, this will only return values for Movies (and not all movies have images).\n UseGetShowImageCount\nto determine what the valid values are for the Index parameter.\n In the future this will be expanded to support plugin image providers to extend what is returned.\n\nParameters:\nShow- the Show object\nType- the type of image, can be one of \"PhotoTall\", \"PhotoWide\", \"PhotoThumbTall\", \"PhotoThumbWide\", \"PosterTall\", \"PosterWide\", \"PosterThumbTall\" or \"PosterThumbWide\". In the future, there will be support to expand these types using image plugin providers.\nIndex- the 0-based index of the image to retrieve when multiple images exist for a given Type\nFallback- should be 3 if the returned image must match the requested parameters, 2 if a substitute image may be used that requires a similar type, 1 if a substitute image may be used that requires the same size, or 0 if any image type may be substituted (size is preferred over type)\nReturns:\na MetaImage corresponding to the requested image, or null if no image matching the requested parameters is found or an invalid Type is specified\nSince:\n7.1\n\n\n\n","returnType":"sage.MetaImage"},{"args":[{"dataType":"sage.Show","varName":"Show"},{"dataType":"java.lang.String","varName":"Type"}],"name":"GetShowImageCount","comment":"Returns a count of images specific to this Show. For the standard implementation, this will only return non-zero values for Movies (and not all movies have images).\n In the future this will be expanded to support plugin image providers to extend what is returned.\n\nParameters:\nShow- the Show object\nType- the type of image, can be one of \"PhotoTall\", \"PhotoWide\", \"PhotoThumbTall\", \"PhotoThumbWide\", \"PosterTall\", \"PosterWide\", \"PosterThumbTall\" or \"PosterThumbWide\". If this is null or the empty string, then it will return 1 if any images exist and zero if none exist. In the future, there will be support to expand these types using image plugin providers.\nReturns:\nthe number of images that match the requested type for the specified Show\nSince:\n7.1\n\n\n\n","returnType":"int"}],"name":"ShowAPI"},"Database":{"methods":[{"args":[{"dataType":"java.lang.Object","varName":"Data"},{"dataType":"java.lang.String","varName":"Method"},{"dataType":"boolean","varName":"MatchValue"}],"name":"FilterByBoolMethod","comment":"Filters data by a boolean method. Each element in the 'Data' has the 'Method' executed on it.\n If the result is the same as the 'MatchValue' parameter then that element will be in the\n returned data. For Maps & Collections this is done in place. For Arrays a new Array is created.\n\nParameters:\nData- the data that is to be filtered; this can be a java.util.Collection, java.util.Map or an Array. For Maps & Collections the filtering is done IN-PLACE.\nMethod- This is what is evaluated with an element as the only argument. This can be a list of methods to test against separated by the '|' character.\nMatchValue- the Method must return this value to be in the returned data\nReturns:\nThe elements that passed the filter. The type is the same type as the passed in Data.\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.lang.Object","varName":"Data"},{"dataType":"java.lang.String","varName":"Method"},{"dataType":"java.lang.Object","varName":"MatchValue"},{"dataType":"boolean","varName":"MatchedPasses"}],"name":"FilterByMethod","comment":"Filters data by a method. Each element in the 'Data' has the 'Method' executed on it.\n If the result is the same as the 'MatchValue' parameter then that element will be in the\n returned data if MatchedPasses is true. If MatchedPasses is false then non-matching elements will be in the returned data.\n For Maps & Collections this is done in place. For Arrays a new Array is created.\n\nParameters:\nData- the data that is to be filtered; this can be a java.util.Collection, java.util.Map or an Array. For Maps & Collections the filtering is done IN-PLACE. For Maps the keys are used for the filtering.\nMethod- This is what is evaluated with an element as the only argument. This can be a list of methods to test against separated by the '|' character. There is also a special 'UserCategories' option which will check the ManualRecord, Favorite and MediaFile \"UserCategory\" property as well as the Show Category & SubCategory for any matches against a comma-delimited list in the MatchValue parameter.\nMatchValue- the value to test the return value of Method against\nMatchedPasses- if true then matches are included in the return data, if false then everything that doesn't match is returned\nReturns:\nThe elements that passed the filter. The type is the same type as the passed in Data.\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.lang.Object","varName":"Data"},{"dataType":"java.lang.String","varName":"Method"},{"dataType":"java.util.regex.Pattern","varName":"RegexPattern"},{"dataType":"boolean","varName":"MatchedPasses"},{"dataType":"boolean","varName":"CompleteMatch"}],"name":"FilterByMethodRegex","comment":"Filters data by a method. Each element in the 'Data' has the 'Method' executed on it.\n The result is then converted to a String and RegexPattern is applied to it.\n If the regular expression matches the String value and MatchedPasses is true, then the element\n will be in the returned data. If MatchedPasses is false then non-matching elements will be in the returned data.\n For Maps & Collections this is done in place. For Arrays a new Array is created. \n NOTE: If you pass more than 5 arguments to this function then the extra arguments will\n be passed along to the Method that should be executed.\n\nParameters:\nData- the data that is to be filtered; this can be a java.util.Collection, java.util.Map or an Array. For Maps & Collections the filtering is done IN-PLACE.\nMethod- This is what is evaluated with an element as the only argument (and additional arguments if passed in).\nRegexPattern- The compiled regular expression used for matching (if it's not compiled, then it will be converted to a compiled regular expression)\nMatchedPasses- if true then matches are included in the return data, if false then everything that doesn't match is returned\nCompleteMatch- if true then the entire string must match the regular expression, if false then the regular expression only needs to match a substring of it\nReturns:\nThe elements that passed the filter. The type is the same type as the passed in Data.\nSince:\n5.1\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.lang.Object","varName":"Data"},{"dataType":"java.lang.String","varName":"Method"},{"dataType":"java.lang.Comparable","varName":"LowerBoundInclusive"},{"dataType":"java.lang.Comparable","varName":"UpperBoundExclusive"},{"dataType":"boolean","varName":"KeepWithinBounds"}],"name":"FilterByRange","comment":"Filters data by a comparable range. Each element in the 'Data' has the 'Method' executed on it.\n If KeepWithinBounds is true, then results that are within the specified range are included in the returned data; otherwise\n if KeepWithinBounds is false then results that are outside of the specified range are included in the returned data.\n For Maps & Collections this is done in place. For Arrays a new Array is created.\n\nParameters:\nData- the data that is to be filtered; this can be a java.util.Collection, java.util.Map or an Array. For Maps & Collections the filtering is done IN-PLACE.\nMethod- This is what is evaluated with an element as the only argument\nLowerBoundInclusive- a java.lang.Comparable which specifies the INCLUSIVE lower bound for the range\nUpperBoundExclusive- a java.lang.Comparable which specified the EXCLUSIVE upper bound for the range\nKeepWithinBounds- if true then values within the range are returned, if false then values outside the range are returned\nReturns:\nThe elements that passed the filter. The type is the same type as the passed in Data.\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.lang.Object","varName":"Data"},{"dataType":"java.lang.String","varName":"Method"}],"name":"GroupByMethod","comment":"Grouping method for data lists/maps. This will return a Map that uses a key->value mapping to group the data. \n The order of the grouping is stable, which means the order of the elements within a subgroup will be the same \n order as in the pased in data. Use the GetSubgroup method to get the corresponding value for a key. \n The key for each data element is determined by calling the specified 'Method' with that data element as the sole parameter.\n Each value in the map will be a java.util.Vector that contains the elements in the group.\n There is a special Method called \"Categories\" which will allow items to fall into possibly more than one group. This will\n group by Category and also by SubCategory all at the same level (if SubCategory is not defined, then it will not be used for an alternate grouping).\n \"Categories\" grouping will also break up any category names that have comma or semicolon delimited lists and put the item into each of those.\n\nParameters:\nData- the data to perform the grouping on, must be a java.util.Collection, java.util.Map or an Array\nMethod- the name of the Method to execute on each element to retrieve the key used for grouping, see the note above regarding \"Categories\" as a special option\nReturns:\na java.util.Map keyed with the values obtained from executing Method on the Data and with values that are Vectors of elements who's keys match\n\n\n\n","returnType":"java.util.Map"},{"args":[{"dataType":"java.lang.Object","varName":"Data"},{"dataType":"java.lang.String","varName":"Method"}],"name":"GroupByArrayMethod","comment":"Grouping method for data lists/maps. This will return a Map that uses a key->value mapping to group the data. \n The order of the grouping is stable, which means the order of the elements within a subgroup will be the same \n order as in the pased in data. Use the GetSubgroup method to get the corresponding value for a key. \n The keys for each data element is determined by calling the specified 'Method' with that data element as the sole parameter.\n The Method should return an array or list, each element of which will be a key that the data element will be grouped by.\n Each value in the map will be a java.util.Vector that contains the elements in the group.\n NOTE: If you pass more than 2 arguments to this function then the extra arguments will\n be passed along to the Method that should be executed.\n\nParameters:\nData- the data to perform the grouping on, must be a java.util.Collection, java.util.Map or an Array\nMethod- the name of the Method to execute on each element to retrieve the keys used for grouping\nReturns:\na java.util.Map keyed with the values obtained from executing Method on the Data and with values that are Vectors of elements who's keys match\nSince:\n5.1\n\n\n\n","returnType":"java.util.Map"},{"args":[{"dataType":"java.lang.Object","varName":"Data"},{"dataType":"boolean","varName":"Descending"},{"dataType":"java.lang.Object","varName":"SortTechnique"}],"name":"Sort","comment":"Sorts a list of data according to the specified sorting technique. The order of the sort can be reversed using\n the Descending parameter. If you use a method name for the SortTechnique, then the data will be sorted by the natural\n ordering of the values returned from that mehod call. If that data type does not implement java.lang.Comparable then they\n will be converted to Strings and those Strings will be compared. NOTE: If you pass more than 3 arguments to this function then the extra arguments will\n be passed along to the SortTechnique if it refers to a Method that should be executed.\n\nParameters:\nData- the data to sort, this must be a java.util.Collection, a java.util.Map, or an array; for Collections all the elements must be the same Class\nDescending- if true then the data will be sorted in descending order, if false then the order will be reversed\nSortTechnique- the technique to sort the data by; this can be a java.util.Comparator \n         which then explicitly controls the sort, or it can be one of the named sorting techniques of: \n         Intelligent, ChannelNumber, CaseInsensitive, FavoritePriority, Natural or a method name. If null is passed then the elements \"natural\" sorting is used.\nReturns:\nthe sorted data, for passed in Maps this'll be a sorted Map; for Collections or arrays this will be an Object[] array\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.lang.Object","varName":"Data"},{"dataType":"boolean","varName":"Descending"},{"dataType":"java.lang.String","varName":"SortByMethod"}],"name":"SortLexical","comment":"Sorts a list of data based on the result of calling the \"SortByMethod\" on each item and using toString on the return value of that method. \n The order of the sort can be reversed using the Descending parameter. There are many cases where this will return the same thing as a call toSort()\nSortLexical should be used when sorting text if possible, as it uses more advanced language-specific sorting techniques to determine a proper order.\n This sort is performed case-insensitive.\n NOTE: If you pass more than 3 arguments to this function then the extra arguments will be passed along to the SortByMethod.\n\nParameters:\nData- the data to sort, this must be a java.util.Collection, a java.util.Map, or an array; for Collections all the elements must be the same Class\nDescending- if true then the data will be sorted in descending order, if false then the order will be reversed\nSortByMethod- the method to call on each data item to get the value it should be sorted by, if this is null then the data elements are converted to Strings directly and then compared\nReturns:\nthe sorted data, for passed in Maps this'll be a sorted Map; for Collections or arrays this will be an Object[] array\nSince:\n5.1\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"sage.Channel","varName":"Channel"},{"dataType":"long","varName":"StartTime"},{"dataType":"long","varName":"EndTime"},{"dataType":"boolean","varName":"MustStartDuringTime"}],"name":"GetAiringsOnChannelAtTime","comment":"Returns all of the Airing objects in the database that are on the specified channel during the specified time span.\n\nParameters:\nChannel- the Channel that the Airings need to be one\nStartTime- the start of the time window to search for Airings in\nEndTime- the end of the time window to search for Airings in\nMustStartDuringTime- if true, then only Airings that start during the time window will be returned, if false\n         then any Airing that overlaps with the time window will be returned\nReturns:\nthe Airings on the specified channel within the specified time window\n\n\n\n","returnType":"sage.Airing[]"},{"args":[{"dataType":"long","varName":"StartTime"},{"dataType":"long","varName":"EndTime"},{"dataType":"boolean","varName":"MustStartDuringTime"}],"name":"GetAiringsOnViewableChannelsAtTime","comment":"Returns all of the Airing objects in the database on all of the channels that are viewable during the specified time span.\n\nParameters:\nStartTime- the start of the time window to search for Airings in\nEndTime- the end of the time window to search for Airings in\nMustStartDuringTime- if true, then only Airings that start during the time window will be returned, if false\n         then any Airing that overlaps with the time window will be returned\nReturns:\nthe Airings on all the viewable channels within the specified time window\n\n\n\n","returnType":"sage.Airing[]"},{"args":[{"dataType":"java.lang.String","varName":"Person"}],"name":"GetAllNonMusicWithPerson","comment":"Deprecated. \n\nReturns all Airings in the database that refer to content that is NOT a music file and includes the specified person\n in the list of people involved (i.e. actors, directors, producers, etc.)\n\nParameters:\nPerson- the name of the person to search for matching content on\nReturns:\nan array of Airing objects that reference content that includes the specified person, music is not returned\n\n\n\n","returnType":"sage.Airing[]"},{"args":[{"dataType":"java.lang.String","varName":"Title"}],"name":"GetAllNonMusicWithTitle","comment":"Deprecated. \n\nReturns all Airings in the database that refer to content that is NOT a music file and has the specified title.\n\nParameters:\nTitle- the title of the content must match this exactly\nReturns:\nan array of Airing objects that reference content with the specified title, music is not returned\n\n\n\n","returnType":"sage.Airing[]"},{"args":[{"dataType":"java.lang.String","varName":"SearchString"}],"name":"SearchByPerson","comment":"Returns all Airings in the database that refer to content that is NOT a music file and includes the specified person\n in the list of people involved (i.e. actors, directors, producers, etc.)\n This is the same asGetAllNonMusicWithPerson()\n\n\nParameters:\nSearchString- the name of the person to search for matching content on\nReturns:\nan array of Airing objects that reference content that includes the specified person, music is not returned\n\n\n\n","returnType":"sage.Airing[]"},{"args":[{"dataType":"java.lang.String","varName":"SearchString"},{"dataType":"java.lang.String","varName":"MediaMask"}],"name":"SearchByPerson","comment":"Returns all Airings in the database that refer to content that includes the specified person\n in the list of people involved (i.e. actors, directors, producers, etc.). The content must also match\n one of the media types specified in the MediaMask\n\nParameters:\nSearchString- the name of the person to search for matching content on\nMediaMask- string specifying what content types to search (i.e. \"TM\" for TV & Music, 'T'=TV, 'M'=Music, 'V'=Video, 'D'=DVD, 'P'=Pictures, 'B'=BluRay)\nReturns:\nan array of Airing objects that reference content that includes the specified person and matches the media mask\nSince:\n5.1\n\n\n\n","returnType":"sage.Airing[]"},{"args":[{"dataType":"java.lang.String","varName":"SearchString"}],"name":"SearchByText","comment":"Searches the descriptions and episode names of all of the content in the database for the\n specified search string. This search is case insensitive.\n\nParameters:\nSearchString- the string to search for\nReturns:\nan array of Airings who's content has the specified search string in its description or episode name\n\n\n\n","returnType":"sage.Airing[]"},{"args":[{"dataType":"java.lang.String","varName":"SearchString"},{"dataType":"java.lang.String","varName":"MediaMask"}],"name":"SearchByText","comment":"Searches the descriptions and episode names of all of the content in the database for the\n specified search string. This search is case insensitive. The content must also match\n one of the media types specified in the MediaMask\n\nParameters:\nSearchString- the string to search for\nMediaMask- string specifying what content types to search (i.e. \"TM\" for TV & Music, 'T'=TV, 'M'=Music, 'V'=Video, 'D'=DVD, 'P'=Pictures, 'B'=BluRay)\nReturns:\nan array of Airings who's content has the specified search string in its description or episode name and matches the media mask\nSince:\n5.1\n\n\n\n","returnType":"sage.Airing[]"},{"args":[{"dataType":"java.lang.String","varName":"SearchString"}],"name":"SearchByTitle","comment":"Returns all Airings in the database that refer to content that is NOT a music file and has the specified title.\n This is the same asGetAllNonMusicWithTitle()\n\n\nParameters:\nSearchString- the title of the content must match this exactly\nReturns:\nan array of Airing objects that reference content with the specified title, music is not returned\n\n\n\n","returnType":"sage.Airing[]"},{"args":[{"dataType":"java.lang.String","varName":"SearchString"},{"dataType":"java.lang.String","varName":"MediaMask"}],"name":"SearchByTitle","comment":"Returns all Airings in the database that refer to content that has the specified title. The content must also match\n one of the media types specified in the MediaMask\n\nParameters:\nSearchString- the title of the content must match this exactly\nMediaMask- string specifying what content types to search (i.e. \"TM\" for TV & Music, 'T'=TV, 'M'=Music, 'V'=Video, 'D'=DVD, 'P'=Pictures, 'B'=BluRay)\nReturns:\nan array of Airing objects that reference content with the specified title and matches the media mask\nSince:\n5.1\n\n\n\n","returnType":"sage.Airing[]"},{"args":[{"dataType":"java.lang.String","varName":"SearchString"}],"name":"SearchForPeople","comment":"Returns a list of all of the people in the database that include the search string in their name.\n This search is case insensitive.\n\nParameters:\nSearchString- the string to search on\nReturns:\nan array of Strings which represent all of the people in the database that matched the search\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"SearchString"},{"dataType":"java.lang.String","varName":"MediaMask"}],"name":"SearchForPeople","comment":"Returns a list of all of the people in the database that include the search string in their name.\n This search is case insensitive. The content it references must also match one of the media types specified in the MediaMask.\n\nParameters:\nSearchString- the string to search on\nMediaMask- string specifying what content types to search (i.e. \"TM\" for TV & Music, 'T'=TV, 'M'=Music, 'V'=Video, 'D'=DVD, 'P'=Pictures, 'B'=BluRay)\nReturns:\nan array of Strings which represent all of the people in the database that matched the search that also have content that matches the MediaMask\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"SearchString"}],"name":"SearchForTitles","comment":"Returns a list of all of the titles in the database that include the search string in them.\n This search is case insensitive.\n\nParameters:\nSearchString- the string to search on\nReturns:\nan array of Strings which represent all of the titles in the database that matched the search\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"SearchString"},{"dataType":"java.lang.String","varName":"MediaMask"}],"name":"SearchForTitles","comment":"Returns a list of all of the titles in the database that include the search string in them.\n This search is case insensitive. The content it references must also match one of the media types specified in the MediaMask.\n\nParameters:\nSearchString- the string to search on\nMediaMask- string specifying what content types to search (i.e. \"TM\" for TV & Music, 'T'=TV, 'M'=Music, 'V'=Video, 'D'=DVD, 'P'=Pictures, 'B'=BluRay)\nReturns:\nan array of Strings which represent all of the titles in the database that matched the search that also have content that matches the MediaMask\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.util.regex.Pattern","varName":"RegexPattern"}],"name":"SearchForPeopleRegex","comment":"Returns a list of all of the people in the database that match the passed in regular expression.\n\nParameters:\nRegexPattern- The compiled regular expression used for matching (if it's not compiled, then it will be converted to a compiled regular expression)\nReturns:\nan array of Strings which represent all of the people in the database that matched the search\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.util.regex.Pattern","varName":"RegexPattern"},{"dataType":"java.lang.String","varName":"MediaMask"}],"name":"SearchForPeopleRegex","comment":"Returns a list of all of the people in the database that match the passed in regular expression.\n The content it references must also match one of the media types specified in the MediaMask.\n\nParameters:\nRegexPattern- The compiled regular expression used for matching (if it's not compiled, then it will be converted to a compiled regular expression)\nMediaMask- string specifying what content types to search (i.e. \"TM\" for TV & Music, 'T'=TV, 'M'=Music, 'V'=Video, 'D'=DVD, 'P'=Pictures, 'B'=BluRay)\nReturns:\nan array of Strings which represent all of the people in the database that matched the search that also have content that matches the MediaMask\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.util.regex.Pattern","varName":"RegexPattern"}],"name":"SearchForTitlesRegex","comment":"Returns a list of all of the titles in the database that match the passed in regular expression.\n\nParameters:\nRegexPattern- The compiled regular expression used for matching (if it's not compiled, then it will be converted to a compiled regular expression)\nReturns:\nan array of Strings which represent all of the titles in the database that matched the search\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.util.regex.Pattern","varName":"RegexPattern"},{"dataType":"java.lang.String","varName":"MediaMask"}],"name":"SearchForTitlesRegex","comment":"Returns a list of all of the titles in the database that match the passed in regular expression.\n The content it references must also match one of the media types specified in the MediaMask.\n\nParameters:\nRegexPattern- The compiled regular expression used for matching (if it's not compiled, then it will be converted to a compiled regular expression)\nMediaMask- string specifying what content types to search (i.e. \"TM\" for TV & Music, 'T'=TV, 'M'=Music, 'V'=Video, 'D'=DVD, 'P'=Pictures, 'B'=BluRay)\nReturns:\nan array of Strings which represent all of the titles in the database that matched the search that also have content that matches the MediaMask\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.Object","varName":"DataSet1"},{"dataType":"java.lang.Object","varName":"DataSet2"}],"name":"DataUnion","comment":"Creates a Union of one or more sets of data. This method can have zero or more arguments.\n The ordering of the elements is stable. Any element that is in any data set that is passed in will\n be included in the returned set. Any duplicate items will be removed.\n If the arguments are a java.util.Collection, java.util.Map or an array then each element in them will\n be processed in the Union. If the argument is any other type then the argument itself will be processed in the Union.\n\nParameters:\nDataSet1- one of the data sets to include in the union\nDataSet2- another one of the data sets to include in the union\nReturns:\na java.util.Vector which is a union of all of the elements in the passed in arguments\n\n\n\n","returnType":"java.util.Vector"},{"args":[{"dataType":"java.lang.Object","varName":"DataSet1"},{"dataType":"java.lang.Object","varName":"DataSet2"}],"name":"DataIntersection","comment":"Creates an intersection of two sets of data.\n The ordering of the elements is stable. Any element that is in both of the data sets that are passed in will\n be included in the returned set. \n If the arguments are a java.util.Collection or an array then each element in them will\n be processed in the intersection. If the argument is any other type then the argument itself will be processed in the intersection.\n\nParameters:\nDataSet1- one of the data sets to include in the intersection\nDataSet2- the other data set to include in the intersection\nReturns:\na java.util.Vector which is an intersection of all of the elements in the passed in arguments\n\n\n\n","returnType":"java.util.Vector"},{"args":[{"dataType":"java.lang.String","varName":"SearchString"},{"dataType":"boolean","varName":"CaseSensitive"},{"dataType":"boolean","varName":"Titles"},{"dataType":"boolean","varName":"Episode"},{"dataType":"boolean","varName":"Description"},{"dataType":"boolean","varName":"People"},{"dataType":"boolean","varName":"Category"},{"dataType":"boolean","varName":"Rated"},{"dataType":"boolean","varName":"ExtendedRatings"},{"dataType":"boolean","varName":"Year"},{"dataType":"boolean","varName":"Misc"}],"name":"SearchSelectedFields","comment":"Searches the specified fields of all the Airings in the database for the specified search string.\n\nParameters:\nSearchString- the string to search with\nCaseSensitive- if true then the search is case senstive, if false then it's case insensitive\nTitles- if true then the title fields will be searched, if false then they will not be\nEpisode- if true then the episode fields will be searched, if false then they will be not be\nDescription- if true then the description fields will be searched, if false then they will not be\nPeople- if true then the people fields will be searched, if false then they will not be\nCategory- if true then the category fields will be searched, if false then they will not be\nRated- if true then the rated fields will be searched, if false then they will not be\nExtendedRatings- if true then the extended ratings fields will be searched, if false then they will not be\nYear- if true then the year fields will be searched, if false then they will not be\nMisc- if true then the miscellaneous fields will be searched, if false then they will not be\nReturns:\nan array of Airings which matches the search criteria\n\n\n\n","returnType":"java.util.Vector"},{"args":[{"dataType":"java.lang.String","varName":"SearchString"},{"dataType":"boolean","varName":"CaseSensitive"},{"dataType":"boolean","varName":"Titles"},{"dataType":"boolean","varName":"Episode"},{"dataType":"boolean","varName":"Description"},{"dataType":"boolean","varName":"People"},{"dataType":"boolean","varName":"Category"},{"dataType":"boolean","varName":"Rated"},{"dataType":"boolean","varName":"ExtendedRatings"},{"dataType":"boolean","varName":"Year"},{"dataType":"boolean","varName":"Misc"},{"dataType":"java.lang.String","varName":"MediaMask"}],"name":"SearchSelectedFields","comment":"Searches the specified fields of all the Airings in the database for the specified search string. \n The content it references must also match one of the media types specified in the MediaMask.\n\nParameters:\nSearchString- the string to search with\nCaseSensitive- if true then the search is case senstive, if false then it's case insensitive\nTitles- if true then the title fields will be searched, if false then they will not be\nEpisode- if true then the episode fields will be searched, if false then they will be not be\nDescription- if true then the description fields will be searched, if false then they will not be\nPeople- if true then the people fields will be searched, if false then they will not be\nCategory- if true then the category fields will be searched, if false then they will not be\nRated- if true then the rated fields will be searched, if false then they will not be\nExtendedRatings- if true then the extended ratings fields will be searched, if false then they will not be\nYear- if true then the year fields will be searched, if false then they will not be\nMisc- if true then the miscellaneous fields will be searched, if false then they will not be\nMediaMask- string specifying what content types to search (i.e. \"TM\" for TV & Music, 'T'=TV, 'M'=Music, 'V'=Video, 'D'=DVD, 'P'=Pictures, 'B'=BluRay)\nReturns:\nan array of Airings which matches the search criteria\nSince:\n5.1\n\n\n\n","returnType":"java.util.Vector"},{"args":[{"dataType":"java.lang.String","varName":"SearchString"},{"dataType":"boolean","varName":"CaseSensitive"},{"dataType":"boolean","varName":"Titles"},{"dataType":"boolean","varName":"Episode"},{"dataType":"boolean","varName":"Description"},{"dataType":"boolean","varName":"People"},{"dataType":"boolean","varName":"Category"},{"dataType":"boolean","varName":"Rated"},{"dataType":"boolean","varName":"ExtendedRatings"},{"dataType":"boolean","varName":"Year"},{"dataType":"boolean","varName":"Misc"}],"name":"SearchSelectedExactFields","comment":"Searches the specified fields of all the Airings in the database for the specified search string. This requires\n that the SearchString matches the specified field's value exactly. UnlikeSearchSelectedFields\nwhich only requires that the SearchString exist within the field's value somewhere (i.e. a substring)\n\nParameters:\nSearchString- the string to search with\nCaseSensitive- if true then the search is case senstive, if false then it's case insensitive\nTitles- if true then the title fields will be searched, if false then they will not be\nEpisode- if true then the episode fields will be searched, if false then they will be not be\nDescription- if true then the description fields will be searched, if false then they will not be\nPeople- if true then the people fields will be searched, if false then they will not be\nCategory- if true then the category fields will be searched, if false then they will not be\nRated- if true then the rated fields will be searched, if false then they will not be\nExtendedRatings- if true then the extended ratings fields will be searched, if false then they will not be\nYear- if true then the year fields will be searched, if false then they will not be\nMisc- if true then the miscellaneous fields will be searched, if false then they will not be\nReturns:\nan array of Airings which matches the search criteria\nSince:\n4.1\n\n\n\n","returnType":"java.util.Vector"},{"args":[{"dataType":"java.lang.String","varName":"SearchString"},{"dataType":"boolean","varName":"CaseSensitive"},{"dataType":"boolean","varName":"Titles"},{"dataType":"boolean","varName":"Episode"},{"dataType":"boolean","varName":"Description"},{"dataType":"boolean","varName":"People"},{"dataType":"boolean","varName":"Category"},{"dataType":"boolean","varName":"Rated"},{"dataType":"boolean","varName":"ExtendedRatings"},{"dataType":"boolean","varName":"Year"},{"dataType":"boolean","varName":"Misc"},{"dataType":"java.lang.String","varName":"MediaMask"}],"name":"SearchSelectedExactFields","comment":"Searches the specified fields of all the Airings in the database for the specified search string. This requires\n that the SearchString matches the specified field's value exactly. UnlikeSearchSelectedFields\nwhich only requires that the SearchString exist within the field's value somewhere (i.e. a substring)\n The content it references must also match one of the media types specified in the MediaMask.\n\nParameters:\nSearchString- the string to search with\nCaseSensitive- if true then the search is case senstive, if false then it's case insensitive\nTitles- if true then the title fields will be searched, if false then they will not be\nEpisode- if true then the episode fields will be searched, if false then they will be not be\nDescription- if true then the description fields will be searched, if false then they will not be\nPeople- if true then the people fields will be searched, if false then they will not be\nCategory- if true then the category fields will be searched, if false then they will not be\nRated- if true then the rated fields will be searched, if false then they will not be\nExtendedRatings- if true then the extended ratings fields will be searched, if false then they will not be\nYear- if true then the year fields will be searched, if false then they will not be\nMisc- if true then the miscellaneous fields will be searched, if false then they will not be\nMediaMask- string specifying what content types to search (i.e. \"TM\" for TV & Music, 'T'=TV, 'M'=Music, 'V'=Video, 'D'=DVD, 'P'=Pictures, 'B'=BluRay)\nReturns:\nan array of Airings which matches the search criteria\nSince:\n5.1\n\n\n\n","returnType":"java.util.Vector"},{"args":[{"dataType":"java.util.regex.Pattern","varName":"RegexPattern"},{"dataType":"boolean","varName":"Titles"},{"dataType":"boolean","varName":"Episode"},{"dataType":"boolean","varName":"Description"},{"dataType":"boolean","varName":"People"},{"dataType":"boolean","varName":"Category"},{"dataType":"boolean","varName":"Rated"},{"dataType":"boolean","varName":"ExtendedRatings"},{"dataType":"boolean","varName":"Year"},{"dataType":"boolean","varName":"Misc"}],"name":"SearchSelectedFieldsRegex","comment":"Searches the specified fields of all the Airings in the database and tries to match them against\n the passed in regular expression.\n\nParameters:\nRegexPattern- The compiled regular expression used for matching (if it's not compiled, then it will be converted to a compiled regular expression)\nTitles- if true then the title fields will be searched, if false then they will not be\nEpisode- if true then the episode fields will be searched, if false then they will be not be\nDescription- if true then the description fields will be searched, if false then they will not be\nPeople- if true then the people fields will be searched, if false then they will not be\nCategory- if true then the category fields will be searched, if false then they will not be\nRated- if true then the rated fields will be searched, if false then they will not be\nExtendedRatings- if true then the extended ratings fields will be searched, if false then they will not be\nYear- if true then the year fields will be searched, if false then they will not be\nMisc- if true then the miscellaneous fields will be searched, if false then they will not be\nReturns:\nan array of Airings which matches the search criteria\nSince:\n5.1\n\n\n\n","returnType":"java.util.Vector"},{"args":[{"dataType":"java.util.regex.Pattern","varName":"RegexPattern"},{"dataType":"boolean","varName":"Titles"},{"dataType":"boolean","varName":"Episode"},{"dataType":"boolean","varName":"Description"},{"dataType":"boolean","varName":"People"},{"dataType":"boolean","varName":"Category"},{"dataType":"boolean","varName":"Rated"},{"dataType":"boolean","varName":"ExtendedRatings"},{"dataType":"boolean","varName":"Year"},{"dataType":"boolean","varName":"Misc"},{"dataType":"java.lang.String","varName":"MediaMask"}],"name":"SearchSelectedFieldsRegex","comment":"Searches the specified fields of all the Airings in the database and tries to match them against\n the passed in regular expression.\n The content it references must also match one of the media types specified in the MediaMask.\n\nParameters:\nRegexPattern- The compiled regular expression used for matching (if it's not compiled, then it will be converted to a compiled regular expression)\nTitles- if true then the title fields will be searched, if false then they will not be\nEpisode- if true then the episode fields will be searched, if false then they will be not be\nDescription- if true then the description fields will be searched, if false then they will not be\nPeople- if true then the people fields will be searched, if false then they will not be\nCategory- if true then the category fields will be searched, if false then they will not be\nRated- if true then the rated fields will be searched, if false then they will not be\nExtendedRatings- if true then the extended ratings fields will be searched, if false then they will not be\nYear- if true then the year fields will be searched, if false then they will not be\nMisc- if true then the miscellaneous fields will be searched, if false then they will not be\nMediaMask- string specifying what content types to search (i.e. \"TM\" for TV & Music, 'T'=TV, 'M'=Music, 'V'=Video, 'D'=DVD, 'P'=Pictures, 'B'=BluRay)\nReturns:\nan array of Airings which matches the search criteria\nSince:\n5.1\n\n\n\n","returnType":"java.util.Vector"},{"args":[{"dataType":"java.lang.String","varName":"Lineup"}],"name":"GetChannelsOnLineup","comment":"Returns all of the Channel objects in the database that are on the specified Lineup.\n\nParameters:\nLineup- the name of the EPG lineup to get the channels for\nReturns:\nan array of Channel objects that are on the specified Lineup\n\n\n\n","returnType":"sage.Channel[]"},{"args":[],"name":"GetAllTitles","comment":"Gets all of the titles that are in the database.\n\nReturns:\na list of all of the titles that are in the database\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"MediaMask"}],"name":"GetAllTitles","comment":"Gets all of the titles that are in the database.\n The content it references must also match one of the media types specified in the MediaMask.\n\nParameters:\nMediaMask- string specifying what content types to search (i.e. \"TM\" for TV & Music, 'T'=TV, 'M'=Music, 'V'=Video, 'D'=DVD, 'P'=Pictures, 'B'=BluRay)\nReturns:\na list of all of the titles that are in the database that also have content that matches the MediaMask\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String[]"},{"args":[],"name":"GetAllPeople","comment":"Gets all of the people that are in the database.\n\nReturns:\na list of all of the names of people in the database\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"MediaMask"}],"name":"GetAllPeople","comment":"Gets all of the people that are in the database.\n The content it references must also match one of the media types specified in the MediaMask.\n\nParameters:\nMediaMask- string specifying what content types to search (i.e. \"TM\" for TV & Music, 'T'=TV, 'M'=Music, 'V'=Video, 'D'=DVD, 'P'=Pictures, 'B'=BluRay)\nReturns:\na list of all of the names of people in the database that also have content that matches the MediaMask\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String[]"},{"args":[],"name":"GetAllCategories","comment":"Gets all of the categories that are in the database.\n\nReturns:\nall of the names of categories that are in the database\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"MediaMask"}],"name":"GetAllCategories","comment":"Gets all of the categories that are in the database.\n The content it references must also match one of the media types specified in the MediaMask.\n\nParameters:\nMediaMask- string specifying what content types to search (i.e. \"TM\" for TV & Music, 'T'=TV, 'M'=Music, 'V'=Video, 'D'=DVD, 'P'=Pictures, 'B'=BluRay)\nReturns:\nall of the names of categories that are in the database that also have content that matches the MediaMask\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String[]"},{"args":[],"name":"GetAllGroupingCategories","comment":"Gets all of the categories that are in the database. This is different than GetAllCategories because this one will break apart\n any comma or semicolon delimited category lists into multiple different categories. i.e. if you have \"Comedy; Horror\" as a category\n this API call will break it up into Comedy and Horror as two separate categories. This call will also coalesce any case-sensitive differences in category names.\n\nReturns:\nall of the names of categories that are in the database with multi-categories broken apart\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"MediaMask"}],"name":"GetAllGroupingCategories","comment":"Gets all of the categories that are in the database.\n The content it references must also match one of the media types specified in the MediaMask.\n This is different than GetAllCategories because this one will break apart\n any comma or semicolon delimited category lists into multiple different categories. i.e. if you have \"Comedy; Horror\" as a category\n this API call will break it up into Comedy and Horror as two separate categories. This call will also coalesce any case-sensitive differences in category names.\n\nParameters:\nMediaMask- string specifying what content types to search (i.e. \"TM\" for TV & Music, 'T'=TV, 'M'=Music, 'V'=Video, 'D'=DVD, 'P'=Pictures, 'B'=BluRay)\nReturns:\nall of the names of categories that are in the database that also have content that matches the MediaMask with multi-categories broken apart\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"MediaMask"}],"name":"GetDatabaseLastModifiedTime","comment":"Returns the last modification time for objects that match anything in the specified MediaMask. This is useful\n for knowing when to clear caches that are used to optimize UI rendering.\n\nParameters:\nMediaMask- string specifying what content types  (i.e. \"TM\" for TV & Music, 'T'=TV, 'M'=Music, 'V'=Video, 'D'=DVD, 'P'=Pictures, 'B'=BluRay)\nReturns:\nthe last modification time of anything in the DB that matches anything in the specified MediaMask\nSince:\n5.1\n\n\n\n","returnType":"long"},{"args":[{"dataType":"java.lang.Object","varName":"MediaData"},{"dataType":"java.lang.String","varName":"ImportPrefix"},{"dataType":"boolean","varName":"IncludeFiles"},{"dataType":"boolean","varName":"IncludeFolders"},{"dataType":"boolean","varName":"GroupFolders"}],"name":"GetFilesWithImportPrefix","comment":"Returns a list of java.io.File objects w/ the specified MediaMask whos import prefix matches that of the argument\n\nParameters:\nMediaData- can either by a MediaMask string specifying what content types  ('M'=Music, 'V'=Video, 'D'=DVD, 'P'=Pictures, 'B'=BluRay) or it can be an array/collection of the specific MediaFile objects to analyze\nImportPrefix- a string specifying a subpath that must match the start of the import files path relative to its import root\nIncludeFiles- if true, then MediaFile objects with a complete prefix match will be returned\nIncludeFolders- if true, then MediaFile objects with a partial prefix match will be returned\nGroupFolders- if true, then MediaFile objects with partial prefixes that match will be grouped by their next path section; extract the 'null' keyed value to get the list of the files\nReturns:\na Vector or Map of java.io.File objects w/ the specified MediaMask whos import prefix matches that of the argument; a Map will be returned if GroupFolders is set to true\nSince:\n6.4\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.lang.Object","varName":"MediaData"},{"dataType":"java.lang.String","varName":"ImportPrefix"},{"dataType":"boolean","varName":"IncludeFiles"},{"dataType":"boolean","varName":"IncludeFolders"},{"dataType":"boolean","varName":"GroupFolders"}],"name":"GetMediaFilesWithImportPrefix","comment":"Returns a list or map of MediaFile objects w/ the specified MediaMask whos import prefix matches that of the argument\n\nParameters:\nMediaData- can either by a MediaMask string specifying what content types  ('M'=Music, 'V'=Video, 'D'=DVD, 'P'=Pictures, 'B'=BluRay) or it can be an array/collection of the specific MediaFile objects to analyze\nImportPrefix- a string specifying a subpath that must match the start of the import files path relative to its import root\nIncludeFiles- if true, then MediaFile objects with a complete prefix match will be returned\nIncludeFolders- if true, then MediaFile objects with a partial prefix match will be returned\nGroupFolders- if true, then MediaFile objects with partial prefixes that match will be grouped by their next path section; extract the 'null' keyed value to get the list of the files\nReturns:\na Vector or Map of MediaFile objects w/ the specified MediaMask whos import prefix matches that of the argument; a Map will be returned if GroupFolders is set to true\nSince:\n6.4\n\n\n\n","returnType":"java.lang.Object"},{"args":[],"name":"IsDatabaseMemoryMaxed","comment":"Returns true if the database has maxed out its memory usage and cannot add more content\n\nReturns:\ntrue if the database has maxed out its memory usage and cannot add more content\nSince:\n6.5\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"Text"}],"name":"StripLeadingArticles","comment":"Strips any leading 'a, an or the' prefixes from the passed in string and returns the resulting string.\n If the property \"ui/ignore_the_when_sorting\" is set to false, this method will do nothing. The articles stripped\n by this method can be defined with the property \"ui/prefixes_to_ignore_on_sort\".\n\nParameters:\nText- the string to strip the leading articles from\nReturns:\nthe String after the leading articles have been stripped from the past in string\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"}],"name":"Database"},"CaptureDeviceInputAPI":{"methods":[{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"}],"name":"GetInfraredTuningPlugin","comment":"Gets the name of the tuning plugin used for this CaptureDeviceInput\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nReturns:\nthe name of the tuning plugin currently used for the specified CaptureDeviceInput\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"}],"name":"GetInfraredTuningPluginPortNumber","comment":"Gets the port number used by the tuning plugin for this CaptureDeviceInput\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nReturns:\nthe port number of the tuning plugin currently used for the specified CaptureDeviceInput\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"},{"dataType":"java.lang.String","varName":"PluginName"},{"dataType":"int","varName":"PluginPortNumber"}],"name":"SetInfraredTuningPluginAndPort","comment":"Sets the name and port number for the tuning plugin for a CaptureDeviceInput\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nPluginName- the name of the tuning plugin to use on the specified CaptureDeviceInput. This should be a value fromGetInfraredTuningPlugins()\nUse the emptry string \"\" to set the CaptureDeviceInput to not use a plugin\nPluginPortNumber- the port number to configure the specified tuning plugin to use on the specified CaptureDeviceInput. Use 0 for the USB port.\nReturns:\ntrue if the plugin was setup (if it requires hardware this validates the hardware is connected)\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"},{"dataType":"java.lang.String","varName":"ChannelNumber"}],"name":"AutoTuneChannelTest","comment":"Tunes the CaptureDeviceInput to the specified physical channel and indicates whether or not a signal is present. This call should only\n be used if the CaptureDeviceInput is already under live control (i.e.WatchLive()\norLockTuner()\nwas called on it) or\n if the input has not been configured for use yet. Otherwise this call may interfere with what is currently being recorded.\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nChannelNumber- the channel string to tune to\nReturns:\ntrue if the hardware detected a signal on the specified channel\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"},{"dataType":"java.lang.String","varName":"ChannelNumber"}],"name":"AutoScanChannelInfo","comment":"Tunes the CaptureDeviceInput to the specified physical channel and returns a list of the available channels. This call should only\n be used if the CaptureDeviceInput is already under live control (i.e.WatchLive()\norLockTuner()\nwas called on it) or\n if the input has not been configured for use yet. Otherwise this call may interfere with what is currently being recorded.\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nChannelNumber- the channel string to tune to\nReturns:\na string describing the subchannels found scanning this channel, if no channels were found an empty or null string will be returned\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"}],"name":"GetInputMinimumChannelNumber","comment":"Returns the minimum channel number that this CaptureDeviceInput can tune to\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nReturns:\nthe minimum channel number for the specified CaptureDeviceInput\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"}],"name":"GetInputMaximumChannelNumber","comment":"Returns the maximum channel number that this CaptureDeviceInput can tune to\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nReturns:\nthe maximum channel number for the specified CaptureDeviceInput\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"},{"dataType":"int","varName":"Value"}],"name":"SetCaptureBrightness","comment":"Sets the brightness for capture on this CaptureDeviceInput. This only affects analog capture devices\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nValue- the new value to set the brightness to, in the inclusive range 0-255. Use -1 to set it to the default.\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"},{"dataType":"int","varName":"Value"}],"name":"SetCaptureSaturation","comment":"Sets the saturation for capture on this CaptureDeviceInput. This only affects analog capture devices\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nValue- the new value to set the saturation to, in the inclusive range 0-255. Use -1 to set it to the default.\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"},{"dataType":"int","varName":"Value"}],"name":"SetCaptureHue","comment":"Sets the hue for capture on this CaptureDeviceInput. This only affects analog capture devices.\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nValue- the new value to set the hue to, in the inclusive range 0-255. Use -1 to set it to the default.\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"},{"dataType":"int","varName":"Value"}],"name":"SetCaptureContrast","comment":"Sets the contrast for capture on this CaptureDeviceInput. This only affects analog capture devices.\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nValue- the new value to set the contrast to, in the inclusive range 0-255. Use -1 to set it to the default.\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"},{"dataType":"int","varName":"Value"}],"name":"SetCaptureSharpness","comment":"Sets the sharpness for capture on this CaptureDeviceInput. This only affects analog capture devices.\n NOTE: On Linux this currently sets the audio capture volume level\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nValue- the new value to set the sharpness to, in the inclusive range 0-255. Use -1 to set it to the default.\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"}],"name":"GetCaptureBrightness","comment":"Gets the brightness level for this CaptureDeviceInput. This is only valid for analog capture devices.\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nReturns:\nthe brightness level for the specified CaptureDeviceInput in the inclusive range 0-255\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"}],"name":"GetCaptureSaturation","comment":"Gets the saturation level for this CaptureDeviceInput. This is only valid for analog capture devices.\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nReturns:\nthe saturation level for the specified CaptureDeviceInput in the inclusive range 0-255\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"}],"name":"GetCaptureHue","comment":"Gets the hue level for this CaptureDeviceInput. This is only valid for analog capture devices.\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nReturns:\nthe hue level for the specified CaptureDeviceInput in the inclusive range 0-255\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"}],"name":"GetCaptureContrast","comment":"Gets the contrast level for this CaptureDeviceInput. This is only valid for analog capture devices.\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nReturns:\nthe contrast level for the specified CaptureDeviceInput in the inclusive range 0-255\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"}],"name":"GetCaptureSharpness","comment":"Gets the sharpness level for this CaptureDeviceInput. This is only valid for analog capture devices.\n NOTE: On Linux this gets the audio volume level\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nReturns:\nthe sharpness level for the specified CaptureDeviceInput in the inclusive range 0-255\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"},{"dataType":"java.lang.String","varName":"ExternalDeviceName"}],"name":"SetInfraredTunerRemoteName","comment":"Sets the name of the device that is passed to the IR Tuner plugin for tuning control. Corresponds to a .ir file for current IR transmitters\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nExternalDeviceName- the name of the external device the IR tuning plugin is supposed to control This value should be obtained from a call to (@link Configuration#GetRemotesForInfraredTuningPlugin GetRemotesForInfraredTuningPlugin()}\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"}],"name":"GetInfraredTunerRemoteName","comment":"Returns the name of the device that is passed to the IR Tuner plugin for tuning control. Corresponds to a .ir file for current IR transmitters.\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nReturns:\nthe name of the external device codes used for the tuner plugin on the specified CaptureDeviceInput\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"},{"dataType":"boolean","varName":"Value"}],"name":"SetRFSignalIsCableTV","comment":"Sets whether or not this CaptureDeviceInput tunes for Antenna or Cable if it's a TV Tuner input\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nValue- true if this input is connected to a Cable source, false if it uses Broadcast/Over-the-Air (OTA)\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"}],"name":"IsRFSignalCableTV","comment":"Returns whether or not this CaptureDeviceInput tunes for Antenna or Cable if it's a TV Tuner input\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nReturns:\ntrue if this input is connected to a Cable source, false if it uses Broadcast/Over-the-Air (OTA)\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"}],"name":"IsExternallyTunedRFInput","comment":"Returns true if this input was created usingAddInputForRFChannel()\nmethod call\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nReturns:\ntrue if this input was created usingAddInputForRFChannel()\nmethod call\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"}],"name":"GetConstantRFChannelInput","comment":"Returns the RF channel number that is used to receive the source signal. This is set usingAddInputForRFChannel()\n\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nReturns:\nthe RF channel number used to receive the source signal on the specified CaptureDeviceInput\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"}],"name":"IsCaptureDeviceInputAudioVideo","comment":"Returns whether or not this CaptureDeviceInput captures both audio and video\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nReturns:\ntrue if this input captures both audio and video, false if it just captures video\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"}],"name":"GetPhysicalInputType","comment":"Returns the type of input this is, such as: S-Video, Composite, TV Tuner, etc.\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nReturns:\nthe type of physical connector used for the specified CaptureDeviceInput\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"}],"name":"GetCaptureDeviceInputName","comment":"Returns the name of this CaptureDeviceInput connection without the CaptureDevice name prefixing it. This is not the\n same as the 'name' of the CaptureDeviceInput used as the parameter. The String that uniquely identifies a CaptureDeviceInput\n must always have the CaptureDevice's name included in it. Only use this return value for display purposes; do not use\n it for anything else.\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nReturns:\nthe name of the specified CaptureDeviceInput connection without the CaptureDevice name prefixing it\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"},{"dataType":"java.lang.String","varName":"Lineup"}],"name":"ConfigureInputForEPGDataLineup","comment":"Configures this CaptureDeviceInput to use the specified EPG Lineup.\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput to set the lineup on\nLineup- the name of the Lineup to configure this CaptureDeviceInput for. This name should be obtained from a call to the EPG server\nReturns:\ntrue if the Lineup was successfully configured for the specified CaptureDeviceInput\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"}],"name":"ConfigureInputWithoutEPGData","comment":"Configures this CaptureDeviceInput to not use an EPG data source. It will instead create a generic lineup with numeric channels that\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput to use\nReturns:\ntrue (the call will always succeed)\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"}],"name":"ReleaseCaptureDeviceInput","comment":"Releases this CaptureDeviceInput from its currently configured lineup. It will no longer be considered \"configured\" or \"active\". \n If its lineup is no longer is in use, it will be cleaned up on the next EPG maintenance cycle.\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput to use\n\n\n\n","returnType":"void"},{"args":[],"name":"GetCaptureDeviceInputBeingViewed","comment":"Returns the CaptureDeviceInput that is recording the MediaFile that is currently loaded by the MediaPlayer\n\nReturns:\nthe CaptureDeviceInput that is recording the MediaFile that is currently loaded by the MediaPlayer\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"GetCaptureDeviceInputRecordingMediaFile","comment":"Returns the CaptureDeviceInput that is recording the specified MediaFile\n\nParameters:\nMediaFile- the MediaFile who's recording CaptureDeviceInput should be returned\nReturns:\nthe CaptureDeviceInput that is recording the specified MediaFile; null if that file is not being recorded currently\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"}],"name":"GetLineupForCaptureDeviceInput","comment":"Returns the name of the lineup that this CaptureDeviceInput is configured to use\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput to use\nReturns:\nthe name of the lineups that is configured for use on the specified CaptureDeviceInput; returns null if the input is not configured\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"}],"name":"GetCaptureDeviceForInput","comment":"Returns the CaptureDevice for this CaptureDeviceInput\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput to use\nReturns:\nthe name of the CaptureDevice for the specified CaptureDeviceInput\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"}],"name":"GetSignalStrength","comment":"Returns the current signal strength for this CaptureDeviceInput. This is only valid for Digital TV inputs.\n The returned value will be between 0 and 100 inclusive. 0 is no signal and 100 is maximum signal strength.\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput to use\nReturns:\nthe current signal strength on the specified CaptureDeviceInput\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"}],"name":"GetCaptureDeviceInputBroadcastStandard","comment":"Returns the name of the broadcast standard used for reception on this capture device input (can be different per-input)\n\nParameters:\nCaptureDeviceInput- the name of the CaptureDeviceInput\nReturns:\nthe name of the broadcast standard used for reception on this capture device input (i.e. NTSC, ATSC, DVB-S, etc.)\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"}],"name":"CaptureDeviceInputAPI"},"PluginAPI":{"methods":[{"args":[],"name":"GetSageTVPluginRegistry","comment":"Returns an object which implements the sage.SageTVPluginRegistry interface. Can be used to subscribe/unsubscribe\n to SageTVEvents.\n\nReturns:\nan object which implements the sage.SageTVPluginRegistry interface\nSince:\n7.0\n\n\n\n","returnType":"sage.SageTVPluginRegistry"},{"args":[],"name":"GetAllAvailablePlugins","comment":"Returns an array of Plugin objects which represent all the plugins available in the plugin repository.\n\nReturns:\nan array of Plugin objects which represent all the plugins available in the plugin repository\nSince:\n7.0\n\n\n\n","returnType":"sage.Plugin[]"},{"args":[],"name":"GetInstalledPlugins","comment":"Returns an array of Plugin objects which represent all the plugins that have been installed on this SageTV system (enabled or disabled).\n If using a non-localhost SageTVClient; this will return the plugins that are installed on the server.\n\nReturns:\nan array of Plugin objects which represent all the plugins that have been installed on this SageTV system (enabled or disabled)\nSince:\n7.0\n\n\n\n","returnType":"sage.Plugin[]"},{"args":[],"name":"GetInstalledClientPlugins","comment":"Returns an array of Plugin objects which represent all the plugins that have been installed on the local client (enabled or disabled).\n This is only needed when dealing with SageTVClient applications that are connected to a non-localhost server.\n\nReturns:\nan array of Plugin objects which represent all the plugins that have been installed on the local client (enabled or disabled)\nSince:\n7.0\n\n\n\n","returnType":"sage.Plugin[]"},{"args":[{"dataType":"java.lang.Object","varName":"Plugin"}],"name":"GetAllPluginVersions","comment":"Returns an array of Plugin objects which represent all of the versions available of the specified plugin in the repository\n\nParameters:\nPlugin- the Plugin object to check, this can either be a Plugin object or a String representing a Plugin ID\nReturns:\nan array of Plugin objects which represent all of the versions available of the specified plugin in the repository\nSince:\n7.0\n\n\n\n","returnType":"sage.Plugin[]"},{"args":[{"dataType":"java.lang.String","varName":"PluginID"}],"name":"GetAvailablePluginForID","comment":"Returns the plugin in the repository for the specified plugin ID\n\nParameters:\nPluginID- the plugin identifier\nReturns:\nthe plugin in the repository for the specified plugin ID\nSince:\n7.0\n\n\n\n","returnType":"sage.Plugin"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"IsPluginInstalled","comment":"Returns true if the specified plugin has already been installed\n\nParameters:\nPlugin- the Plugin object to check\nReturns:\ntrue if the specified plugin has already been installed\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"IsClientPluginInstalled","comment":"Returns true if the specified plugin has already been installed into the locally running SageTVClient\n\nParameters:\nPlugin- the Plugin object to check\nReturns:\ntrue if the specified plugin has already been installed into the locally running SageTVClient\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"IsPluginInstalledSameVersion","comment":"Returns true if the specified plugin has already been installed and is the same version as this one\n\nParameters:\nPlugin- the Plugin object to check\nReturns:\ntrue if the specified plugin has already been installed and is the same version as this one\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"IsClientPluginInstalledSameVersion","comment":"Returns true if the specified plugin has already been installed into the locally running SageTVClient and is the same version as this one\n\nParameters:\nPlugin- the Plugin object to check\nReturns:\ntrue if the specified plugin has already been installed into the locally running SageTVClient and is the same version as this one\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"IsPluginEnabled","comment":"Returns true if the specified plugin has already been installed and is enabled. This will also\n return true if the specified plugin does not support being enabled/disabled.\n\nParameters:\nPlugin- the Plugin object to check, this should be from a call to GetInstalledPlugins or GetInstalledClientPlugins\nReturns:\ntrue if the specified plugin has already been installed and is enabled or it doesn't support being disabled, false otherwise\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"IsPluginFailed","comment":"Returns true if the specified plugin has already been installed and is enabled; but the loading of it has failed.\n\nParameters:\nPlugin- the Plugin object to check, this should be from a call to GetInstalledPlugins or GetInstalledClientPlugins\nReturns:\ntrue if the specified plugin has already been installed and is enabled and the loading of it failed, false otherwise\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"IsPluginDesktopOnly","comment":"Returns true if the specified plugin is only supported in desktop environments (i.e. not on a headless server, placeshifter or extender)\n\nParameters:\nPlugin- the Plugin object to check\nReturns:\ntrue if the specified plugin is only supported in desktop environments, false otherwise\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"IsPluginBeta","comment":"Returns true if the specified plugin is tagged as a 'beta' version.\n\nParameters:\nPlugin- the Plugin object to check\nReturns:\ntrue if the specified plugin is tagged as a 'beta' version, false otherwise\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[],"name":"RefreshAvailablePlugins","comment":"Refreshes the plugin repository list by contacting the server to ensure it is up to date (this is done automatically\n on a regular basis)\n\nSince:\n7.0\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"CanPluginBeDisabled","comment":"Returns whether the specified plugin can be enabled/disabled. Only 'Standard' type plugins w/ an implementation class and STVIs can be enabled/disabled.\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\ntrue if the specified plugin can be enabled/disabled, false otherwise\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"GetPluginName","comment":"Gets the displayable name of the specified Plugin object\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\nthe displayable name of the specified Plugin object\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"GetPluginIdentifier","comment":"Gets the unique identifier of the specified Plugin object\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\nthe unique identifier of the specified Plugin object\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"GetPluginAuthor","comment":"Gets the author of the specified Plugin object\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\nthe author of the specified Plugin object\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"GetPluginReleaseNotes","comment":"Gets the release notes attached to this specific version of the specified Plugin object\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\nthe release notes attached to this specific version of the specified Plugin object\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"GetPluginModificationDate","comment":"Gets the last modification date of the specified Plugin object\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\nthe last modification date of the specified Plugin object\nSince:\n7.0\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"GetPluginCreationDate","comment":"Gets the creation date of the specified Plugin object\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\nthe creation date of the specified Plugin object\nSince:\n7.0\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"GetPluginInstallDate","comment":"Gets the date the specified Plugin object was installed\n\nParameters:\nPlugin- the specified Plugin object (must be an 'installed' Plugin object and not a 'repository' one)\nReturns:\nthe date the specified Plugin object was installed\nSince:\n7.0\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"GetPluginDescription","comment":"Gets the description of the specified Plugin object\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\nthe description of the specified Plugin object\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"GetPluginVersion","comment":"Gets the version of the specified Plugin object\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\nthe version of the specified Plugin object\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"GetPluginResourcePath","comment":"Gets the relative path to resources used by the specified Plugin object\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\nthe relative path to resources used by the specified Plugin object\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"GetPluginScreenshots","comment":"Returns an array of URLs to screenshots for the specified plugin object\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\nan array of URLs to screenshots for the specified plugin object\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"GetPluginDemoVideos","comment":"Returns an array of URLs to demo videos for the specified plugin object\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\nan array of URLs to demo videos for the specified plugin object\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"GetPluginWebsites","comment":"Returns an array of URLs to websites for the specified plugin object\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\nan array of URLs to websites for the specified plugin object\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"GetPluginType","comment":"Returns the type of the specified plugin object. This wil be one of \"Standard\", \"Theme\", \"STV\",\n \"STVI\", \"Library\" or \"Images\". The empty string will be returned if an invalid argument is supplied.\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\nthe type of the specified plugin object\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"GetPluginDependencies","comment":"Returns an array of Strings which specifies the dependencies of this plugin. These strings\n will be descriptive and indicate the type of dependency (i.e. STV, Plugin, OS or Desktop) and\n the specifics of that dependency.\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\nan array of Strings which specifies the dependencies of this plugin\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.Object","varName":"Plugin"}],"name":"IsPluginObject","comment":"Returns true if the specified object is a Plugin object\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\ntrue if the specified object is a Plugin object, false otherwise\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"DisablePlugin","comment":"Disables the specified Plugin if it can be disabled. Some plugins, like Themes and STVs are disabled by simply selecting\n an alternate Theme or STV, so those do not have the ability to be 'disabled' in the sense that this API call refers to.\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\ntrue if disabling the plugin succeeded; if it fails its because there's another plugin dependent on it\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"EnablePlugin","comment":"Enables the specified Plugin if it can be enabled/disabled.\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\ntrue if it was successfully enabled, false otherwise; this will also return true even if the plugin does not have the ability to be enabled/disabled\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"GetPluginIncompatabilityReason","comment":"Returns the reason why the specified Plugin object is incompatible and cannot be installed. This can be due to\n operating system, desktop, STV, STV Version or plugin dependency version conflicts.\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\na String describing the reason why the specified Plugin cannot be installed\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"GetClientPluginIncompatabilityReason","comment":"Returns the reason why the specified Plugin object is incompatible and cannot be installed. This can be due to\n operating system, desktop, STV, STV Version or plugin dependency version conflicts. This version of the API\n call relates to installation on non-localhost connected SageTVClients.\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\na String describing the reason why the specified Plugin cannot be installed\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"IsPluginCompatible","comment":"Returns whether or not the specified Plugin object is compatible and can be installed. This can be due to\n operating system, desktop, STV, STV Version or plugin dependency version conflicts.\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\ntrue if the specified Plugin object is compatible and can be installed, false otherwise\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"IsClientPluginCompatible","comment":"Returns whether or not the specified Plugin object is compatible and can be installed. This can be due to\n operating system, desktop, STV, STV Version or plugin dependency version conflicts. This version of the API\n call relates to installation on non-localhost connected SageTVClients.\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\ntrue if the specified Plugin object is compatible and can be installed, false otherwise\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"InstallPlugin","comment":"Installs or upgrades the specified Plugin. If there's a failure in doing so\n or a restart of SageTV is required after installing the plugin; the return value will indicate that.\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\na String describing the install result; this will be \"OK\" if it was successful, \"RESTART\" if it was successful but a restart of SageTV is required or \"FAILED - XXX\" if a failure occurred with XXX describing the reason why\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"InstallClientPlugin","comment":"Installs or upgrades the specified Plugin. If there's a failure in doing so\n or a restart of SageTV is required after installing the plugin; the return value will indicate that.\n This version of the API call relates to installation on non-localhost connected SageTVClients.\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\na String describing the install result; this will be \"OK\" if it was successful, \"RESTART\" if it was successful but a restart of SageTV is required or \"FAILED - XXX\" if a failure occurred with XXX describing the reason why\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"UninstallPlugin","comment":"Uninstalls the specified Plugin. If there's a failure in doing so\n or a restart of SageTV is required after installing the plugin; the return value will indicate that.\n Failure will also occur if other plugins are dependent on this plugin.\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\na String describing the install result; this will be \"OK\" if it was successful, \"RESTART\" if it was successful but a restart of SageTV is required or \"FAILED - XXX\" if a failure occurred with XXX describing the reason why\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"GetPluginProgress","comment":"Returns a progress based status message regarding any current plugin installation. There is no progress messages\n for plugin uninstalls since they should happen relatively quickly.\n\nReturns:\na String describing the current progress of plugin installation, or an empty string if its not currently in progress\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"GetClientPluginProgress","comment":"Returns a progress based status message regarding any current plugin installation. This is for non-localhost connected\n SageTVClients regarding client plugin installation. There is no progress messages\n for plugin uninstalls since they should happen relatively quickly.\n\nReturns:\na String describing the current progress of plugin installation, or an empty string if its not currently in progress\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"AreClientPluginsSupported","comment":"Returns true if this instance of SageTV supports installation of client plugins. This is true for SageTVClient applications\n that are not running on the same machine as the SageTV server itself. If they are running on the same machine; then their \n installations will be shared.\n\nReturns:\ntrue if this instance of SageTV supports installation of client plugins, false otherwise\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"GetPluginConfigSettings","comment":"Returns a list of the setting names for the specified Plugin object. These are not suitable for\n display; but should be used as the 'SettingName' for any of the plugin setting operations.\n Only enabled plugins can be configured.\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\na String[] of the setting names for the specified Plugin object, a zero-length array will be returned if this Plugin has no configuration settings\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"},{"dataType":"java.lang.String","varName":"SettingName"}],"name":"GetPluginConfigValue","comment":"Gets the current value for the specified configuration setting for the specified Plugin object. \n Only enabled plugins can be configured.\n\nParameters:\nPlugin- the specified Plugin object\nSettingName- the name of the plugin configuration setting\nReturns:\na String which represents the current value of the specified setting\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"},{"dataType":"java.lang.String","varName":"SettingName"}],"name":"GetPluginConfigValues","comment":"Gets the current values for the specified configuration setting for the specified Plugin object.\n This should be used for plugin settings of type \"Multichoice\".\n Only enabled plugins can be configured.\n\nParameters:\nPlugin- the specified Plugin object\nSettingName- the name of the plugin configuration setting\nReturns:\na String[] which represents the current values of the specified setting\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"},{"dataType":"java.lang.String","varName":"SettingName"}],"name":"GetPluginConfigType","comment":"Gets the setting type for the specified configuration setting for the specified Plugin object.\n The possible values are \"Boolean\", \"Integer\", \"Text\", \"Choice\", \"Multichoice\", \"File\", \"Directory\", \"Button\" or \"Password\".\n Only enabled plugins can be configured.\n\nParameters:\nPlugin- the specified Plugin object\nSettingName- the name of the plugin configuration setting\nReturns:\na String which represents the type of the specified setting, the empty string will be returned if the call is invalid\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"},{"dataType":"java.lang.String","varName":"SettingName"},{"dataType":"java.lang.String","varName":"SettingValue"}],"name":"SetPluginConfigValue","comment":"Sets the value for the specified configuration setting for the specified Plugin object.\n Only enabled plugins can be configured.\n\nParameters:\nPlugin- the specified Plugin object\nSettingName- the name of the plugin configuration setting\nSettingValue- the value to set the configuration setting to\nReturns:\nnull on success, or if an exception occurred while setting the value, a string representation of the exception will be returned\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"},{"dataType":"java.lang.String","varName":"SettingName"},{"dataType":"java.lang.String[]","varName":"SettingValues"}],"name":"SetPluginConfigValues","comment":"Sets the values for the specified configuration setting for the specified Plugin object.\n This should be used for plugin settings of type \"Multichoice\".\n Only enabled plugins can be configured.\n\nParameters:\nPlugin- the specified Plugin object\nSettingName- the name of the plugin configuration setting\nSettingValues- the values to set the configuration setting to\nReturns:\nnull on success, or if an exception occurred while setting the value, a string representation of the exception will be returned\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"},{"dataType":"java.lang.String","varName":"SettingName"}],"name":"GetPluginConfigOptions","comment":"Gets all the options available for the specified configuration setting for the specified Plugin object.\n This should be used for plugin settings of type \"Multichoice\" or \"Choice\". These are the different choices\n that the user will select from. Only enabled plugins can be configured.\n\nParameters:\nPlugin- the specified Plugin object\nSettingName- the name of the plugin configuration setting\nReturns:\na String[] which represents all of the choice options for the specified setting\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"},{"dataType":"java.lang.String","varName":"SettingName"}],"name":"GetPluginConfigHelpText","comment":"Gets the help text to describe the specified configuration setting for the specified Plugin object. \n Only enabled plugins can be configured.\n\nParameters:\nPlugin- the specified Plugin object\nSettingName- the name of the plugin configuration setting\nReturns:\na String which is help text to further describe the specified setting\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"},{"dataType":"java.lang.String","varName":"SettingName"}],"name":"GetPluginConfigLabel","comment":"Gets the label to describe the specified configuration setting for the specified Plugin object. \n This should be used for UI display when presenting this setting to the user instead of the SettingName.\n Only enabled plugins can be configured.\n\nParameters:\nPlugin- the specified Plugin object\nSettingName- the name of the plugin configuration setting\nReturns:\na String which is a label to describe the specified setting in the UI\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"ResetPluginConfiguration","comment":"Resets the configuration for the specified plugin. If this is called on a disabled plugin, then next time it\n is enabled the configuration will be reset.\n\nParameters:\nPlugin- the specified Plugin object\nSince:\n7.0\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"IsPluginConfigurable","comment":"Returns true if the specified plugin can be configured when enabled. If it is disabled, it can still have its configuration reset.\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\ntrue if the specified plugin can be configured when enabled; if it is disabled, it can still have its configuration reset\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Plugin","varName":"Plugin"}],"name":"GetPluginImplementation","comment":"Returns the actual object that implements the sage.SageTVPlugin interface for the specified Plugin. This will only be valid\n if the Plugin has an actual implementation and is being called on a plugin that is valid in this context (i.e. you can't call it on a \n server plugin in the client JVM). DO NOT use this object to start/stop or perform other behaviors that are normally done by the\n SageTV core on that object.\n\nParameters:\nPlugin- the specified Plugin object\nReturns:\nthe actual plugin implementation object for the specified plugin, or null if it can't be obtained or doesn't exist\nSince:\n7.0\n\n\n\n","returnType":"sage.SageTVPlugin"},{"args":[],"name":"IsPluginStartupComplete","comment":"Returns true once all of the core plugins that are enabled have completed their startup process. This can be useful because\n plugins are loaded asynchronously with the UI and sometimes a UI needs to wait for their startup process to be completed before it loads.\n For client instances; this will return true once client and server plugin startup has completed.\n\nReturns:\ntrue once all of the core plugins that are enabled have completed their startup process, false otherwise\nSince:\n7.0\n\n\n\n","returnType":"boolean"}],"name":"PluginAPI"},"Configuration":{"methods":[{"args":[],"name":"SaveProperties","comment":"Saves the Sage.properties file to disk\n\n\n\n\n","returnType":"void"},{"args":[],"name":"GetLibraryImportPaths","comment":"Returns all of the library import paths that are currently configured for all media types\n\nReturns:\nthe library import paths that are currently configured for all media types\n\n\n\n","returnType":"java.io.File[]"},{"args":[],"name":"GetPictureLibraryImportPaths","comment":"Returns the library import paths that are currently configured for picture files\n\nReturns:\nthe library import paths that are currently configured for picture files\n\n\n\n","returnType":"java.io.File[]"},{"args":[],"name":"GetMusicLibraryImportPaths","comment":"Returns the library import paths that are currently configured for music files\n\nReturns:\nthe library import paths that are currently configured for music files\n\n\n\n","returnType":"java.io.File[]"},{"args":[],"name":"GetVideoLibraryImportPaths","comment":"Returns the library import paths that are currently configured for video files\n\nReturns:\nthe library import paths that are currently configured for video files\n\n\n\n","returnType":"java.io.File[]"},{"args":[],"name":"IsMajorMinorDTVChannelTuningEnabled","comment":"Deprecated. \n\nReturns true if the legacy major/minor channel tuning is enabled. Do not use anymore\n\nReturns:\ntrue if the legacy major/minor channel tuning is enabled\n\n\n\n","returnType":"boolean"},{"args":[],"name":"GetAutodialForInternet","comment":"Returns true if SageTV should attempt to autodial before accessing the Internet\n\nReturns:\ntrue if SageTV should attempt to autodial before accessing the Internet\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"boolean","varName":"Autodial"}],"name":"SetAutodialForInternet","comment":"Sets whether or not SageTV should autodial before accessing the Internet\n\nParameters:\nAutodial- true if SageTV should autodial before accessing the Internet\n\n\n\n","returnType":"void"},{"args":[],"name":"IsProvideoPentium4FixEnabled","comment":"Deprecated. \n\nReturns true if the Provideo 256 Pentium 4 fix is enabled\n\nReturns:\ntrue if the Provideo 256 Pentium 4 fix is enabled\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"boolean","varName":"Enabled"}],"name":"SetProvideoPentium4FixEnabled","comment":"Deprecated. \n\nSets whether or not the Provideo 256 Pentium 4 fix should be enabled\n\nParameters:\nEnabled- true if the Provideo 256 Pentium 4 fix should be enabled\n\n\n\n","returnType":"void"},{"args":[],"name":"GetInfraredTuningPlugins","comment":"Gets the list of infrared tuning plugins that are available for use with SageTV\n\nReturns:\nthe list of infrared tuning plugins that are available for use with SageTV\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"PluginName"},{"dataType":"int","varName":"PluginPortNumber"}],"name":"GetRemotesForInfraredTuningPlugin","comment":"Gets the names of the 'Remote Controls' which correspond to external devices that can be controlled with the specified plugin\n\nParameters:\nPluginName- the name of the infrared tuning plugin to get the remotes for\nPluginPortNumber- the port number of the tuning plugin, 0 if there is no port for it\nReturns:\nthe names of the 'Remotes' which correspond to external devices that can be controlled by the specified plugin on the specified port\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"PluginName"},{"dataType":"int","varName":"PluginPortNumber"},{"dataType":"java.lang.String","varName":"RemoteName"}],"name":"AddRemoteForInfraredTuningPlugin","comment":"Creates a new 'Remote Control' with the specified name for the specified plugin. Depending upon the plugin, this may require\n the user to perform some interaction before it returns.\n\nParameters:\nPluginName- the name of the infrared tuning plugin\nPluginPortNumber- the port number of the tuning plugin, 0 if there is no port for it\nRemoteName- the name to use for the newly created 'Remote Control'\nReturns:\nthe RemoteName parameter will be returned if a new 'Remote Control' is created, null will be returned if one already exists with that name\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"PluginName"},{"dataType":"int","varName":"PluginPortNumber"},{"dataType":"java.lang.String","varName":"RemoteName"},{"dataType":"java.lang.String","varName":"CommandName"}],"name":"LearnCommandForInfraredTuningPlugin","comment":"Informs an infrared tuning plugin that it should go into the learn mode to learn a new command. This call will return after the user has\n given the hardware the appropriate input it is looking for.\n\nParameters:\nPluginName- the name of the infrared tuning plugin\nPluginPortNumber- the port number of the tuning plugin, 0 if there is no port for it\nRemoteName- the name of the 'Remote Control' that the command is being learned from\nCommandName- the name of the command being sent from the remote control\nReturns:\ntrue if the command was successfully learned, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"PluginName"},{"dataType":"int","varName":"PluginPortNumber"},{"dataType":"java.lang.String","varName":"RemoteName"},{"dataType":"java.lang.String","varName":"OldCommandName"},{"dataType":"java.lang.String","varName":"NewCommandName"}],"name":"RenameCommandForInfraredTuningPlugin","comment":"Renames a command for a remote control on an infrared tuning plugin\n\nParameters:\nPluginName- the name of the infrared tuning plugin\nPluginPortNumber- the port number of the tuning plugin, 0 if there is no port for it\nRemoteName- the name of the 'Remote Control' that the command is from\nOldCommandName- the current name of the command\nNewCommandName- the new name to rename this command to\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"PluginName"},{"dataType":"int","varName":"PluginPortNumber"},{"dataType":"java.lang.String","varName":"RemoteName"}],"name":"RemoveRemoteForInfraredTuningPlugin","comment":"Removes a 'Remote Control' from an infrared tuning plugin. This will also delete all commands learned by that 'Remote Control'.\n\nParameters:\nPluginName- the name of the infrared tuning plugin\nPluginPortNumber- the port number of the tuning plugin, 0 if there is no port for it\nRemoteName- the name of the 'Remote Control' to remove\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"PluginName"},{"dataType":"int","varName":"PluginPortNumber"},{"dataType":"java.lang.String","varName":"RemoteName"},{"dataType":"java.lang.String","varName":"CommandName"}],"name":"RemoveCommandForInfraredTuningPlugin","comment":"Removes a command from a 'Remote Control' for an infrared tuning plugin. If the command had a learned code, that code will be lost.\n\nParameters:\nPluginName- the name of the infrared tuning plugin\nPluginPortNumber- the port number of the tuning plugin, 0 if there is no port for it\nRemoteName- the name of the 'Remote Control'\nCommandName- the name of the command to remove\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"PluginName"},{"dataType":"int","varName":"PluginPortNumber"},{"dataType":"java.lang.String","varName":"RemoteName"},{"dataType":"int","varName":"NumberOfDigits"}],"name":"SetMaxChannelDigitsForInfraredTuningPlugin","comment":"Sets the maximum number of digits that are needed to tune a channel on the device that corresponds to the specified 'Remote Control'.\n For example, if you always need to push 3 numeric keys before the device would tune a channel (i.e. channels are from 1-999) then you\n would specify 3 here.\n\nParameters:\nPluginName- the name of the infrared tuning plugin\nPluginPortNumber- the port number of the tuning plugin, 0 if there is no port for it\nRemoteName- the name of the 'Remote Control'\nNumberOfDigits- the maximum number of digits needed to tune a channel using the specified remote on this plugin\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"PluginName"},{"dataType":"int","varName":"PluginPortNumber"},{"dataType":"java.lang.String","varName":"RemoteName"}],"name":"GetMaxChannelDigitsForInfraredTuningPlugin","comment":"Gets the maximum number of digits that are needed to tune a channel on the device that corresponds to the specified 'Remote Control'.\n For example, if you always need to push 3 numeric keys before the device would tune a channel (i.e. channels are from 1-999) then this\n should be 3.\n\nParameters:\nPluginName- the name of the infrared tuning plugin\nPluginPortNumber- the port number of the tuning plugin, 0 if there is no port for it\nRemoteName- the name of the 'Remote Control'\nReturns:\nthe maximum number of digits needed to tune a channel using the specified remote on this plugin\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.String","varName":"PluginName"},{"dataType":"int","varName":"PluginPortNumber"},{"dataType":"java.lang.String","varName":"RemoteName"},{"dataType":"int","varName":"MsecDelay"}],"name":"SetButtonDelayForInfraredTuningPlugin","comment":"Sets the minimum delay in milliseconds that is required between sending consecutive commands using the specified 'Remote Control'.\n\nParameters:\nPluginName- the name of the infrared tuning plugin\nPluginPortNumber- the port number of the tuning plugin, 0 if there is no port for it\nRemoteName- the name of the 'Remote Control'\nMsecDelay- the minimum required delay between commands in milliseconds\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"PluginName"},{"dataType":"int","varName":"PluginPortNumber"},{"dataType":"java.lang.String","varName":"RemoteName"}],"name":"GetButtonDelayForInfraredTuningPlugin","comment":"Gets the minimum delay in milliseconds that is required between sending consecutive commands using the specified 'Remote Control'.\n\nParameters:\nPluginName- the name of the infrared tuning plugin\nPluginPortNumber- the port number of the tuning plugin, 0 if there is no port for it\nRemoteName- the name of the 'Remote Control'\nReturns:\nthe minimum required delay between commands in milliseconds\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.String","varName":"PluginName"},{"dataType":"int","varName":"PluginPortNumber"},{"dataType":"java.lang.String","varName":"RemoteName"},{"dataType":"int","varName":"MsecDelay"}],"name":"SetSequenceDelayForInfraredTuningPlugin","comment":"Sets the minimum delay in milliseconds that is required between the completion of a sequence of commands that represent a channel change\n and the start of a new sequence of commands that represent a channel change\n\nParameters:\nPluginName- the name of the infrared tuning plugin\nPluginPortNumber- the port number of the tuning plugin, 0 if there is no port for it\nRemoteName- the name of the 'Remote Control'\nMsecDelay- the minimum delay in milliseconds between finishing one channel change sequence and starting another when using the specified 'Remote Control'\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.String","varName":"PluginName"},{"dataType":"int","varName":"PluginPortNumber"},{"dataType":"java.lang.String","varName":"RemoteName"}],"name":"GetSequenceDelayForInfraredTuningPlugin","comment":"Gets the minimum delay in milliseconds that is required between the completion of a sequence of commands that represent a channel change\n and the start of a new sequence of commands that represent a channel change\n\nParameters:\nPluginName- the name of the infrared tuning plugin\nPluginPortNumber- the port number of the tuning plugin, 0 if there is no port for it\nRemoteName- the name of the 'Remote Control'\nReturns:\nthe minimum delay in milliseconds between finishing one channel change sequence and starting another when using the specified 'Remote Control'\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.String","varName":"PluginName"},{"dataType":"int","varName":"PluginPortNumber"},{"dataType":"java.lang.String","varName":"RemoteName"},{"dataType":"java.lang.String","varName":"Command"}],"name":"SetConfirmCommandForInfraredTuningPlugin","comment":"Sets the command that is to be sent as the last command to complete a channel change sequence. This is for devices that require an\n 'Enter' or other type of confirmation key to be pressed after the numeric channel codes are sent.\n\nParameters:\nPluginName- the name of the infrared tuning plugin\nPluginPortNumber- the port number of the tuning plugin, 0 if there is no port for it\nRemoteName- the name of the 'Remote Control'\nCommand- the name of the command from this 'Remote Control' to use to confirm a channel change\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"PluginName"},{"dataType":"int","varName":"PluginPortNumber"},{"dataType":"java.lang.String","varName":"RemoteName"},{"dataType":"java.lang.String","varName":"Command"}],"name":"SetPrefixCommandForInfraredTuningPlugin","comment":"Sets the command that is to be sent before a channel change sequence is started. This is for devices that require a\n 'Power On' or 'Cancel' type of function to ensure the device is a responsive state.\n\nParameters:\nPluginName- the name of the infrared tuning plugin\nPluginPortNumber- the port number of the tuning plugin, 0 if there is no port for it\nRemoteName- the name of the 'Remote Control'\nCommand- the name of the command from this 'Remote Control' to use to prefix a channel change\nSince:\n6.2\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"PluginName"},{"dataType":"int","varName":"PluginPortNumber"},{"dataType":"java.lang.String","varName":"RemoteName"}],"name":"GetConfirmCommandForInfraredTuningPlugin","comment":"Gets the command that is to be sent as the last command to complete a channel change sequence. This is for devices that require an\n 'Enter' or other type of confirmation key to be pressed after the numeric channel codes are sent.\n\nParameters:\nPluginName- the name of the infrared tuning plugin\nPluginPortNumber- the port number of the tuning plugin, 0 if there is no port for it\nRemoteName- the name of the 'Remote Control'\nReturns:\nthe name of the command from this 'Remote Control' to use to confirm a channel change\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"PluginName"},{"dataType":"int","varName":"PluginPortNumber"},{"dataType":"java.lang.String","varName":"RemoteName"}],"name":"GetPrefixCommandForInfraredTuningPlugin","comment":"Gets the command that is to be sent before a channel change sequence is started. This is for devices that require a\n 'Power On' or 'Cancel' type of function to ensure the device is a responsive state.\n\nParameters:\nPluginName- the name of the infrared tuning plugin\nPluginPortNumber- the port number of the tuning plugin, 0 if there is no port for it\nRemoteName- the name of the 'Remote Control'\nReturns:\nthe name of the command from this 'Remote Control' to use to prefix a channel change\nSince:\n6.2\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"PluginName"},{"dataType":"int","varName":"PluginPortNumber"},{"dataType":"java.lang.String","varName":"RemoteName"}],"name":"GetCarrierFrequencyForInfraredTuningPlugin","comment":"Gets the carrier frequency detected by this plugin for the specified remote\n\nParameters:\nPluginName- the name of the infrared tuning plugin\nPluginPortNumber- the port number of the tuning plugin, 0 if there is no port for it\nRemoteName- the name of the 'Remote Control'\nReturns:\nthe carrier frequency of the specified 'Remote Control', or zero if the plugin doesn't have that information\n\n\n\n","returnType":"long"},{"args":[{"dataType":"java.lang.String","varName":"PluginName"},{"dataType":"int","varName":"PluginPortNumber"},{"dataType":"java.lang.String","varName":"RemoteName"}],"name":"GetBitTimeForInfraredTuningPlugin","comment":"Gets the 'bit time' detected by this plugin for the specified remote\n\nParameters:\nPluginName- the name of the infrared tuning plugin\nPluginPortNumber- the port number of the tuning plugin, 0 if there is no port for it\nRemoteName- the name of the 'Remote Control'\nReturns:\nthe 'bit time' of the specified 'Remote Control', or zero if the plugin doesn't have that information\n\n\n\n","returnType":"long"},{"args":[{"dataType":"java.lang.String","varName":"PluginName"},{"dataType":"int","varName":"PluginPortNumber"},{"dataType":"java.lang.String","varName":"RemoteName"}],"name":"GetCommandsForInfraredTuningPlugin","comment":"Gets the list of commands for the specified 'Remote Control' for the specified plugin\n\nParameters:\nPluginName- the name of the infrared tuning plugin\nPluginPortNumber- the port number of the tuning plugin, 0 if there is no port for it\nRemoteName- the name of the 'Remote Control'\nReturns:\nthe list of commands for the specified 'Remote Control' for the specified plugin\n\n\n\n","returnType":"java.util.Vector"},{"args":[{"dataType":"java.lang.String","varName":"PropertyName"}],"name":"GetSubpropertiesThatAreBranches","comment":"Returns the list of properties underneath the specified property that themselves contain further subproperties.\n For example, if the following were the properties:\n animal/pig=0\n animal/fish/salmon=1\n animal/fish/trout=2\n animal/reptile/green/alligator=4\n \n and this call was made with \"animal\" as the argument, then the returned values would be \"fish\" and \"reptile\"\n\nParameters:\nPropertyName- the root property to check for subproperty branches under\nReturns:\nthe list of properties underneath the specified property that themselves contain further subproperties.\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"PropertyName"}],"name":"GetSubpropertiesThatAreLeaves","comment":"Returns the list of properties underneath the specified property that do not contain further subproperties.\n For example, if the following were the properties:\n animal/pig=0\n animal/fish/salmon=1\n animal/fish/trout=2\n animal/reptile/green/alligator=4\n \n and this call was made with \"animal\" as the argument, then the returned values would only be \"pig\"\n\nParameters:\nPropertyName- the root property to check for subproperty leaves under\nReturns:\nthe list of properties underneath the specified property that do not contain further subproperties\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"PropertyName"}],"name":"GetServerSubpropertiesThatAreBranches","comment":"Returns the list of properties underneath the specified property that themselves contain further subproperties.\n For example, if the following were the properties:\n animal/pig=0\n animal/fish/salmon=1\n animal/fish/trout=2\n animal/reptile/green/alligator=4\n \n and this call was made with \"animal\" as the argument, then the returned values would be \"fish\" and \"reptile\"\n If this is called from a client instance then it will use the properties on the server system for this call.\n\nParameters:\nPropertyName- the root property to check for subproperty branches under\nReturns:\nthe list of properties underneath the specified property that themselves contain further subproperties.\nSince:\n6.1\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"PropertyName"}],"name":"GetServerSubpropertiesThatAreLeaves","comment":"Returns the list of properties underneath the specified property that do not contain further subproperties.\n For example, if the following were the properties:\n animal/pig=0\n animal/fish/salmon=1\n animal/fish/trout=2\n animal/reptile/green/alligator=4\n \n and this call was made with \"animal\" as the argument, then the returned values would only be \"pig\"\n If this is called from a client instance then it will use the properties on the server system for this call.\n\nParameters:\nPropertyName- the root property to check for subproperty leaves under\nReturns:\nthe list of properties underneath the specified property that do not contain further subproperties\nSince:\n6.1\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"PropertyName"},{"dataType":"java.lang.String","varName":"DefaultValue"}],"name":"GetProperty","comment":"Gets the property with the specified name. If the property is not set yet, it will be set to the DefaultValue\n that is passed in unless that value is null\n\nParameters:\nPropertyName- the name of the property to retrieve\nDefaultValue- the default value to set the property to if it does not exist, null if it should not be set\nReturns:\nthe value of the specified property, or the DefaultValue if the property was not set prior to this call\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"PropertyName"},{"dataType":"java.lang.String","varName":"PropertyValue"}],"name":"SetProperty","comment":"Sets the property with the specified name to the specified value.\n\nParameters:\nPropertyName- the name of the property to set\nPropertyValue- the value to set the property to\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"PropertyName"},{"dataType":"java.lang.String","varName":"DefaultValue"}],"name":"GetServerProperty","comment":"Gets the property with the specified name. If the property is not set yet, it will be set to the DefaultValue\n that is passed in unless that value is null. If this is called from a client instance then it will use the\n properties on the server system for this call.\n\nParameters:\nPropertyName- the name of the property to retrieve\nDefaultValue- the default value to set the property to if it does not exist, null if it should not be set\nReturns:\nthe value of the specified property, or the DefaultValue if the property was not set prior to this call\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"PropertyName"},{"dataType":"java.lang.String","varName":"PropertyValue"}],"name":"SetServerProperty","comment":"Sets the property with the specified name to the specified value. If this is called from a client instance then it will use the\n properties on the server system for this call and the change will be made on the server system.\n\nParameters:\nPropertyName- the name of the property to set\nPropertyValue- the value to set the property to\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"PropertyName"}],"name":"RemoveProperty","comment":"Removes the specified property from the property map\n\nParameters:\nPropertyName- the name of the property to remove\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"PropertyName"}],"name":"RemovePropertyAndChildren","comment":"Removes the specified property and any subproperties that start with the same prefix\n\nParameters:\nPropertyName- the name of the property that should be removed along with all of its subproperties\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"PropertyName"}],"name":"RemoveServerProperty","comment":"Removes the specified property from the property map. If this is called from a client instance then it will use the\n properties on the server system for this call and the change will be made on the server system.\n\nParameters:\nPropertyName- the name of the property to remove\nSince:\n6.1\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"PropertyName"}],"name":"RemoveServerPropertyAndChildren","comment":"Removes the specified property and any subproperties that start with the same prefix. \n If this is called from a client instance then it will use the\n properties on the server system for this call and the change will be made on the server system.\n\nParameters:\nPropertyName- the name of the property that should be removed along with all of its subproperties\nSince:\n6.1\n\n\n\n","returnType":"void"},{"args":[],"name":"GetDefaultRecordingQuality","comment":"Gets the name of the default quality that is used to record television.\n\nReturns:\nthe name of the default quality that is used to record television\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"IsIntelligentRecordingDisabled","comment":"Returns true if the 'Intelligent Recording' feature of SageTV is disabled. The default is disabled.\n\nReturns:\ntrue if the 'Intelligent Recording' feature of SageTV is disabled, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"NewPath"}],"name":"AddLibraryImportPath","comment":"Adds a new file path to the list of paths that SageTV checks for library import files. This path will\n be used to search for music, video and picture files.\n\nParameters:\nNewPath- the file path to add to the list of library import paths\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"NewPath"}],"name":"AddPictureLibraryImportPath","comment":"Adds a new file path to the list of paths that SageTV checks for library import files. This path will\n be used to search for picture files only.\n\nParameters:\nNewPath- the file path to add to the list of library import paths for picture files\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"NewPath"}],"name":"AddMusicLibraryImportPath","comment":"Adds a new file path to the list of paths that SageTV checks for library import files. This path will\n be used to search for music files only.\n\nParameters:\nNewPath- the file path to add to the list of library import paths for music files\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"NewPath"}],"name":"AddVideoLibraryImportPath","comment":"Adds a new file path to the list of paths that SageTV checks for library import files. This path will\n be used to search for video files only.\n\nParameters:\nNewPath- the file path to add to the list of library import paths for video files\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.io.File","varName":"RemovePath"}],"name":"RemoveLibraryImportPath","comment":"Removes a path from the list of library import paths. This will affect all import types.\n\nParameters:\nRemovePath- the path to remove from the list of library import paths\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.io.File","varName":"RemovePath"}],"name":"RemovePictureLibraryImportPath","comment":"Removes a path from the list of library import paths for pictures\n\nParameters:\nRemovePath- the path to remove from the list of library import paths for pictures\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.io.File","varName":"RemovePath"}],"name":"RemoveMusicLibraryImportPath","comment":"Removes a path from the list of library import paths for music\n\nParameters:\nRemovePath- the path to remove from the list of library import paths for music\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.io.File","varName":"RemovePath"}],"name":"RemoveVideoLibraryImportPath","comment":"Removes a path from the list of library import paths for videos\n\nParameters:\nRemovePath- the path to remove from the list of library import paths for videos\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"Quality"}],"name":"SetDefaultRecordingQuality","comment":"Sets the default quality that is used to record television\n\nParameters:\nQuality- the name of the quality setting to use to record television by default\n\n\n\n","returnType":"void"},{"args":[{"dataType":"boolean","varName":"Disabled"}],"name":"SetIntelligentRecordingDisabled","comment":"Sets whether or not 'Intelligent Recording' should be disabled.\n\nParameters:\nDisabled- should be true to disable 'Intelligent Recording', false to enable it\n\n\n\n","returnType":"void"},{"args":[{"dataType":"boolean","varName":"Enabled"}],"name":"SetMajorMinorDTVChannelTuningEnabled","comment":"Deprecated. \n\nSets whether or not SageTV should use legacy major-minor DTV channels. Not recommend for use anymore.\n\nParameters:\nEnabled- true if SageTV should use legacy major-minor DTV channel tuning\n\n\n\n","returnType":"void"},{"args":[],"name":"IsScreenSaverOnSleepEnabled","comment":"Returns true if SageTV will go to its screen saver when it is put to sleep. If SageTV is not in full screen mode\n then it will go to the system tray regardless of this setting.\n\nReturns:\ntrue if SageTV will go to its screen saver when put to sleep, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"boolean","varName":"Enabled"}],"name":"SetScreenSaverOnSleepEnabled","comment":"Sets whether or not SageTV should go to its screen saver when put to sleep. If SageTV is not in full screen mode\n then it will go to the system tray regardless of this setting.\n\nParameters:\nEnabled- true if SageTV should go to the screen saver when put to sleep, false otherwise\n\n\n\n","returnType":"void"},{"args":[],"name":"IsSyncSystemClockWithServerEnabled","comment":"Returns true if SageTV should synchronize the system clock with the server. For SageTV Client this\n will synchronize with its SageTV Server. For a SageTV system, this will synchronize with the EPG data server.\n\nReturns:\ntrue if SageTV should synchronize the system clock with the server\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"boolean","varName":"Enabled"}],"name":"SetSyncSystemClockWithServerEnabled","comment":"Sets if SageTV should synchronize the system clock with the server. For SageTV Client this\n will synchronize with its SageTV Server. For a SageTV system, this will synchronize with the EPG data server.\n\nParameters:\nEnabled- true if SageTV should synchronize the system clock with the server\n\n\n\n","returnType":"void"},{"args":[],"name":"GetAspectRatioMode","comment":"Returns the localized name of the aspect ratio mode currently in use.\n\nReturns:\nthe localized name of the aspect ratio mode currently in use\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"AspectRatioMode"}],"name":"SetAspectRatioMode","comment":"Sets the aspect ratio mode that should currently be used.\n\nParameters:\nAspectRatioMode- the localized name of the aspect ratio mode that should currently be used\n\n\n\n","returnType":"void"},{"args":[],"name":"GetAspectRatioModes","comment":"Gets the list of localized names for the aspect ratio modes\n\nReturns:\nthe list of localized names for the aspect ratio modes\n\n\n\n","returnType":"java.lang.String[]"},{"args":[],"name":"GetDisplayAspectRatio","comment":"Returns the display aspect ratio that is set for the current display device being used\n\nReturns:\nthe display aspect ratio that is set for the current display device being used\nSince:\n5.1\n\n\n\n","returnType":"float"},{"args":[{"dataType":"float","varName":"DisplayAspectRatio"}],"name":"SetDisplayAspectRatio","comment":"Sets the aspect ratio of the current display device\n\nParameters:\nDisplayAspectRatio- the aspect ratio of the current display device\nSince:\n5.1\n\n\n\n","returnType":"void"},{"args":[],"name":"IsParentalControlEnabled","comment":"Returns true if parental controls are enabled on the system\n\nReturns:\ntrue if parental controls are enabled on the system\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"boolean","varName":"Enabled"}],"name":"SetParentalControlEnabled","comment":"Sets whether or not parental controls are enabled for the system\n\nParameters:\nEnabled- true if parental controls should be enabled, false otherwise\n\n\n\n","returnType":"void"},{"args":[],"name":"IsMutedOnAlternateSpeedPlayback","comment":"Returns true if SageTV should mute the volume when media is played back at speeds besides x1\n\nReturns:\ntrue if SageTV should mute the volume when media is played back at speeds besides x1, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"boolean","varName":"Enabled"}],"name":"SetMuteOnAlternateSpeedPlayback","comment":"Sets whether or not SageTV should mute the sound when media is played back at a speed other than x1\n\nParameters:\nEnabled- true if SageTV should mute the sound when media is played at a speed other x1, false otherwise\n\n\n\n","returnType":"void"},{"args":[],"name":"HasParentalLockCode","comment":"Returns true if a parental lock code has been configured\n\nReturns:\ntrue if a parental lock code has been configured, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[],"name":"GetRatingsUnderParentalLock","comment":"Gets the list of content ratings that are under parental lock. When any content that has ratings that match anything\n in the restricted list is requested for playback; the parental lock code must be entered before playback will begin.\n\nReturns:\nthe list of content ratings that are under parental lock\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"Rating"}],"name":"IsRatingUnderParentalLock","comment":"Returns true if the specified rating is in the list that is under parental control\n\nReturns:\ntrue if the specified rating is in the list that is under parental control, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[],"name":"GetVideoBackgroundColor","comment":"Returns the color that should be used for the video background. This is only shown when the video's aspect ratio doesn't match the area that it's playing back in.\n\nReturns:\nthe color that should be used for the video background\n\n\n\n","returnType":"java.awt.Color"},{"args":[{"dataType":"java.awt.Color","varName":"Color"}],"name":"SetVideoBackgroundColor","comment":"Sets the color that should be used for the video background. This is only shown when the video's aspect ratio doesn't match the area that it's playing back in.\n\nParameters:\nColor- the color that should be used for the video background\n\n\n\n","returnType":"void"},{"args":[],"name":"GetVideoOrbitingDuration","comment":"Gets the video orbiting duration in milliseconds. This is used to shift the video left-to-right very slowly over time. It\n is used on widescreen displays to prevent screen burn when watching 4:3 content.\n\nReturns:\nthe video orbiting duration in milliseconds\n\n\n\n","returnType":"long"},{"args":[{"dataType":"long","varName":"Duration"}],"name":"SetVideoOrbitingDuration","comment":"Sets the video orbiting duration in milliseconds. This is used to shift the video left-to-right very slowly over time. It\n is used on widescreen displays to prevent screen burn when watching 4:3 content.\n\nParameters:\nDuration- the video orbiting duration in milliseconds\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"AspectRatioMode"}],"name":"GetVideoZoomX","comment":"Gets the horizontal scale factor for the video for the specified aspect ratio mode.\n\nParameters:\nAspectRatioMode- the localized name of the aspect ratio mode\nReturns:\nthe horizontal scale factor for the video for the specified aspect ratio mode\n\n\n\n","returnType":"float"},{"args":[{"dataType":"java.lang.String","varName":"AspectRatioMode"},{"dataType":"float","varName":"ScaleFactor"}],"name":"SetVideoZoomX","comment":"Sets the horizontal scale factor for the video for the specified aspect ratio mode.\n\nParameters:\nAspectRatioMode- the localized name of the aspect ratio mode\nScaleFactor- the horizontal scale factor for the video for the specified aspect ratio mode\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"AspectRatioMode"}],"name":"GetVideoZoomY","comment":"Gets the vertical scale factor for the video for the specified aspect ratio mode.\n\nParameters:\nAspectRatioMode- the localized name of the aspect ratio mode\nReturns:\nthe vertical scale factor for the video for the specified aspect ratio mode\n\n\n\n","returnType":"float"},{"args":[{"dataType":"java.lang.String","varName":"AspectRatioMode"},{"dataType":"float","varName":"ScaleFactor"}],"name":"SetVideoZoomY","comment":"Sets the vertical scale factor for the video for the specified aspect ratio mode.\n\nParameters:\nAspectRatioMode- the localized name of the aspect ratio mode\nScaleFactor- the vertical scale factor for the video for the specified aspect ratio mode\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"AspectRatioMode"}],"name":"GetVideoOffsetX","comment":"Gets of the offset in pixels that should be applied horizontally to the video. Positive numbers move it to the right.\n\nParameters:\nAspectRatioMode- the localized name of the aspect ratio mode\nReturns:\nthe offset in pixels that should be applied horizontally to the video\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.String","varName":"AspectRatioMode"},{"dataType":"int","varName":"PixelOffset"}],"name":"SetVideoOffsetX","comment":"Sets of the offset in pixels that should be applied horizontally to the video. Positive numbers move it to the right.\n\nParameters:\nAspectRatioMode- the localized name of the aspect ratio mode\nPixelOffset- the offset in pixels that should be applied horizontally to the video\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"AspectRatioMode"}],"name":"GetVideoOffsetY","comment":"Gets of the offset in pixels that should be applied vertically to the video. Positive numbers move it down.\n\nParameters:\nAspectRatioMode- the localized name of the aspect ratio mode\nReturns:\nthe offset in pixels that should be applied vertically to the video\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.String","varName":"AspectRatioMode"},{"dataType":"int","varName":"PixelOffset"}],"name":"SetVideoOffsetY","comment":"Sets of the offset in pixels that should be applied vertically to the video. Positive numbers move it down.\n\nParameters:\nAspectRatioMode- the localized name of the aspect ratio mode\nPixelOffset- the offset in pixels that should be applied vertically to the video\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"ParentalLockCode"}],"name":"SetParentalLockCode","comment":"Sets the code that is to be used in order to unlock the parental controls.\n\nParameters:\nParentalLockCode- the new value to set the parental lock code to\n\n\n\n","returnType":"void"},{"args":[],"name":"GetRecordingQualities","comment":"Returns a list of the different recording quality names available in the system\n\nReturns:\na list of the different recording quality names available in the system\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"Quality"}],"name":"GetRecordingQualityBitrate","comment":"Gets the estimated overall bitrate for a given recording quality. The returned value is in Megabits per second.\n\nParameters:\nQuality- the name of the recording quality\nReturns:\nthe estimated overall bitrate for the specified recording quality in Megabits per second\n\n\n\n","returnType":"long"},{"args":[{"dataType":"java.lang.String","varName":"Quality"}],"name":"GetRecordingQualityFormat","comment":"Gets the format for a given recording quality. Returns values like \"MPEG-2 PS\", \"DivX\", etc.\n\nParameters:\nQuality- the name of the recording quality\nReturns:\nthe format for the specified recording quality\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"GetVideoDirectories","comment":"Gets the list of directories that SageTV is configured to record television to\n\nReturns:\nthe list of directories that SageTV is configured to record television to\n\n\n\n","returnType":"java.io.File[]"},{"args":[{"dataType":"java.io.File","varName":"Directory"}],"name":"GetDiskspaceRuleForVideoDirectory","comment":"Returns the diskspace rule that SageTV should use when managing the disk space in a given directory.\n The names for the rules are localized versions of the strings \"Use Only\", \"Use All\" and \"Leave Free\"\n\nParameters:\nDirectory- the video directory to get the diskspace rule for\nReturns:\nthe diskspace rule for the specified video directory\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.io.File","varName":"Directory"}],"name":"GetDiskspaceSizeForVideoDirectory","comment":"Returns the size (in bytes) that should be applied to the specified directory for its configured diskspace rule\n\nParameters:\nDirectory- the video directory to get the size for that applies to its rule\nReturns:\nthe size (in bytes) that should be applied to the specified directory for its configured diskspace rule\n\n\n\n","returnType":"long"},{"args":[{"dataType":"java.io.File","varName":"Directory"}],"name":"RemoveVideoDirectory","comment":"Removes a directory from SageTV's list of directories that it can record television to. If you delete all of the directories;\n SageTV will be unable to record television. This does NOT delete the directory or any of its files from disk. They will still be fully\n accessible in SageTV.\n\nParameters:\nDirectory- the directory that SageTV should no longer record television content to\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"Directory"},{"dataType":"java.lang.String","varName":"Rule"},{"dataType":"long","varName":"Size"}],"name":"AddVideoDirectory","comment":"Adds a new directory to SageTV's list of directories that it can record video to. Also specifies what rule & size to use\n when managing the diskspace for this directory.\n\nParameters:\nDirectory- the directory to add as a video directory\nRule- the diskspace rule to use for this directory seeGetVideoDiskspaceRules()\n\nSize- the size to use for the specified diskspace rule and directory\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.io.File","varName":"OldDirectory"},{"dataType":"java.io.File","varName":"NewDirectory"},{"dataType":"java.lang.String","varName":"NewRule"},{"dataType":"long","varName":"NewSize"}],"name":"ChangeVideoDirectory","comment":"Changes the location of a given video directory, or modifies the diskspace rule or diskspace rule size for a video directory.\n\nParameters:\nOldDirectory- the currently configured path for the video directory that is to have its path or rules modified\nNewDirectory- the new file path to use for the video directory (this can be the same as OldDirectory)\nNewRule- the diskspace rule to use for this video directory, seeGetVideoDiskspaceRules()\n\nNewSize- the size to use for this diskspace rule\n\n\n\n","returnType":"void"},{"args":[],"name":"GetVideoDiskspaceRules","comment":"Returns the list of valid diskspace rules. Will be localized versions of the strings \"Use All\", \"Use Only\" and \"Leave Free\"\n\nReturns:\nthe list of valid diskspace rules\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"SageCommand"}],"name":"GetIRCodesLinkedToSageCommand","comment":"Returns the infrared codes that are linked to the given SageTV Command. When one of these IR codes is received; that will cause the\n specified SageTV Command to get executed.\n\nParameters:\nSageCommand- the SageTV Command for which the IR codes should be retrieved\nReturns:\nthe infrared codes that are linked to the specified SageTV Command\n\n\n\n","returnType":"long[]"},{"args":[{"dataType":"java.lang.String","varName":"SageCommand"}],"name":"GetKeystrokesLinkedToSageCommand","comment":"Returns the keystroke names that are linked to the given SageTV Command. When one of these keystrokes is received; that will cause the\n specified SageTV Command to get executed.\n\nParameters:\nSageCommand- the SageTV Command for which the keystrokes should be retrieved\nReturns:\nthe keystrokes that are linked to the specified SageTV Command\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"long","varName":"IRCode"}],"name":"GetNameForIRCode","comment":"Gets the name that is associated with an IR code. This has no functional purpose and is purely for display purposes.\n\nParameters:\nIRCode- the IRCode to get the associated name for, seeSetNameForIRCode()\n\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"long","varName":"IRCode"}],"name":"GetSageCommandLinkedToIRCode","comment":"Returns the SageTV Command that is linked to the specified infrared code.\n\nParameters:\nIRCode- the infrared code\nReturns:\nthe SageTV Command that is linked to the specified infrared code\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"Keystroke"}],"name":"GetSageCommandLinkedToKeystroke","comment":"Returns the SageTV Command that is linked to the specified keystroke.\n\nParameters:\nKeystroke- the name of the keystroke\nReturns:\nthe SageTV Command that is linked to the specified keystroke\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"long","varName":"IRCode"},{"dataType":"java.lang.String","varName":"Name"}],"name":"SetNameForIRCode","comment":"Sets the name for a given IR code. This has no functional purpose, and is purely for display purposes.\n\nParameters:\nIRCode- the infrared code to attach a name to\nName- the name to attach to the specified infrared code\n\n\n\n","returnType":"void"},{"args":[{"dataType":"long","varName":"IRCode"},{"dataType":"java.lang.String","varName":"SageCommand"}],"name":"LinkIRCodeToSageCommand","comment":"Links an infrared code to a SageTV Command. The specified SageTV Command will then be executed whenever the specified IRCode is received.\n\nParameters:\nIRCode- the infrared code to link to the SageTV Command\nSageCommand- the SageTVCommand to link the infrared code to\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"Keystroke"},{"dataType":"java.lang.String","varName":"SageCommand"}],"name":"LinkKeystrokeToSageCommand","comment":"Links a keystroke to a SageTV Command. The specified SageTV Command will then be executed whenever the specified keystroke is received.\n\nParameters:\nKeystroke- the name of the keystroke to link to the SageTV Command\nSageCommand- the SageTVCommand to link the keystroke to\n\n\n\n","returnType":"void"},{"args":[{"dataType":"long","varName":"IRCode"}],"name":"UnlinkIRCodeFromSageCommands","comment":"Unlinks an infrared code from any SageTV commands it is linked to\n\nParameters:\nIRCode- the infrared code to unlink from any SageTV Commands that it is linked with\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"Keystroke"}],"name":"UnlinkKeystrokeFromSageCommands","comment":"Unlinks a keystroke from any SageTV commands it is linked to\n\nParameters:\nKeystroke- the keystroke to unlink from any SageTV Commands that it is linked with\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"Rating"},{"dataType":"boolean","varName":"Restricted"}],"name":"SetRatingUnderParentalControl","comment":"Sets whether or not a given rating should be restricted under parental control\n\nParameters:\nRating- the name of the rating\nRestricted- true if the specified Rating should be restricted by parental control, false otherwise\n\n\n\n","returnType":"void"},{"args":[],"name":"GetInfraredReceiverPort","comment":"Gets the name of the port that the infrared receiver is connected to.\n\nReturns:\nthe name of the port that the infrared receiver is connected to; will be a value like: \"COM1\", \"COM2\" or \"USB\"\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"Port"}],"name":"SetInfraredReceiverPort","comment":"Sets the name of the port that the infrared receiver is connected to.\n\nParameters:\nPort- the name of the port that the infrared receiver is connected to; should be a value like: \"COM1\", \"COM2\" or \"USB\"\n\n\n\n","returnType":"boolean"},{"args":[],"name":"GetInactivityTimeout","comment":"Gets the inactivity timeout in milliseconds. The hook InactivityTimeout() will be called whenever the system experiences inactivity\n for this amount of time.\n\nReturns:\nthe inactivity timeout in milliseconds\n\n\n\n","returnType":"int"},{"args":[{"dataType":"int","varName":"Timeout"}],"name":"SetInactivityTimeout","comment":"Sets the inactivity timeout in milliseconds. The hook InactivityTimeout() will be called whenever the system experiences inactivity\n for this amount of time.\n\nParameters:\nTimeout- the inactivity timeout in milliseconds\n\n\n\n","returnType":"void"},{"args":[],"name":"GetScreenSaverTimeout","comment":"Gets the screen saver timeout in milliseconds. The \"Screen Saver\" menu will be launched after this period of user inactivity if the \n program is in full screen mode.\n\nReturns:\nthe screen saver timeout in milliseconds\n\n\n\n","returnType":"int"},{"args":[{"dataType":"int","varName":"Timeout"}],"name":"SetScreenSaverTimeout","comment":"Sets the screen saver timeout in milliseconds. The \"Screen Saver\" menu will be launched after this period of user inactivity if the \n program is in full screen mode.\n\nParameters:\nTimeout- the screen saver timeout in milliseconds\n\n\n\n","returnType":"void"},{"args":[],"name":"IsSageTVServerEnabled","comment":"Returns true if the SageTV server is enabled. This allows SageTV Clients to connect.\n\nReturns:\ntrue if the SageTV server is enabled, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"boolean","varName":"Enabled"}],"name":"SetSageTVServerEnabled","comment":"Sets whether or not the SageTV server should be enabled. This call will take effect immediately (i.e. the server can\n be started/stopped on demand)\n\nParameters:\nEnabled- true if the SageTV server should be enabled, false otherwise\n\n\n\n","returnType":"void"},{"args":[],"name":"IsAcceleratedDrawingEnabled","comment":"Returns true if 3D acceleration is enabled for the rendering engine. This uses DirectX9-3D on Windows and OpenGL on Linux.\n\nReturns:\ntrue if 3D acceleration is enabled for the rendering engine\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"boolean","varName":"Enabled"}],"name":"SetAcceleratedDrawingEnabled","comment":"Specifies whether or not 3D acceleration should be enabled for the rendering engine. This uses DirectX9 on Windows and OpenGL on Linux.\n This call takes effect immediately.\n\nParameters:\nEnabled- true if 3D acceleration should be enabled, false otherwise.\n\n\n\n","returnType":"boolean"},{"args":[],"name":"GetOverscanOffsetX","comment":"Returns the horizontal offset in pixels that should be applied to the UI to account for overscan. This moves the UI to fit on a TV screen in the\n case where it goes off the edges of the screen due to what is known as 'Overscan'.\n\nReturns:\nthe horizontal offset in pixles that should be applied to the UI to account for overscan, positive values move it to the right\n\n\n\n","returnType":"int"},{"args":[],"name":"GetOverscanOffsetY","comment":"Returns the vertical offset in pixels that should be applied to the UI to account for overscan. This moves the UI to fit on a TV screen in the\n case where it goes off the edges of the screen due to what is known as 'Overscan'.\n\nReturns:\nthe vertical offset in pixles that should be applied to the UI to account for overscan, positive values move it down\n\n\n\n","returnType":"int"},{"args":[],"name":"GetOverscanScaleWidth","comment":"Returns the horizontal scale factor that should be applied to the UI to account for overscan. This shrinks the UI to fit on a TV screen in the\n case where it goes off the edges of the screen due to what is known as 'Overscan'.\n\nReturns:\nthe horizontal scale factor that should be applied to the UI to account for overscan\n\n\n\n","returnType":"float"},{"args":[],"name":"GetOverscanScaleHeight","comment":"Returns the vertical scale factor that should be applied to the UI to account for overscan. This shrinks the UI to fit on a TV screen in the\n case where it goes off the edges of the screen due to what is known as 'Overscan'.\n\nReturns:\nthe vertical scale factor that should be applied to the UI to account for overscan\n\n\n\n","returnType":"float"},{"args":[{"dataType":"int","varName":"Amount"}],"name":"SetOverscanOffsetX","comment":"Sets the horizontal offset in pixels that should be applied to the UI to account for overscan. This moves the UI to fit on a TV screen in the\n case where it goes off the edges of the screen due to what is known as 'Overscan'.\n\nParameters:\nAmount- the horizontal offset in pixles that should be applied to the UI to account for overscan, positive values move it to the right\n\n\n\n","returnType":"void"},{"args":[{"dataType":"int","varName":"Amount"}],"name":"SetOverscanOffsetY","comment":"Sets the vertical offset in pixels that should be applied to the UI to account for overscan. This moves the UI to fit on a TV screen in the\n case where it goes off the edges of the screen due to what is known as 'Overscan'.\n\nParameters:\nAmount- the vertical offset in pixles that should be applied to the UI to account for overscan, positive values move it down\n\n\n\n","returnType":"void"},{"args":[{"dataType":"float","varName":"Amount"}],"name":"SetOverscanScaleWidth","comment":"Sets the horizontal scale factor that should be applied to the UI to account for overscan. This shrinks the UI to fit on a TV screen in the\n case where it goes off the edges of the screen due to what is known as 'Overscan'.\n\nParameters:\nAmount- the horizontal scale factor that should be applied to the UI to account for overscan\n\n\n\n","returnType":"void"},{"args":[{"dataType":"float","varName":"Amount"}],"name":"SetOverscanScaleHeight","comment":"Sets the vertical scale factor that should be applied to the UI to account for overscan. This shrinks the UI to fit on a TV screen in the\n case where it goes off the edges of the screen due to what is known as 'Overscan'.\n\nParameters:\nAmount- the vertical scale factor that should be applied to the UI to account for overscan\n\n\n\n","returnType":"void"},{"args":[],"name":"GetOverscanInsetLeft","comment":"Returns a floating point value which specifies the percent of the UI that is taken up by overscan on the left side.\n Equivalent to (GetOverscanOffsetX() * 1.0 / (GetFullUIWidth() * GetOverscanScaleWidth()))\n\nReturns:\na floating point value which specifies the percent of the UI that is taken up by overscan on the left side\nSince:\n7.0\n\n\n\n","returnType":"float"},{"args":[],"name":"GetOverscanInsetRight","comment":"Returns a floating point value which specifies the percent of the UI that is taken up by overscan on the right side.\n Equivalent to (1.0 - (GetOverscanOffsetX() * 1.0 / GetFullUIWidth()) - GetOverscanScaleWidth())/GetOverscanScaleWidth()\n\nReturns:\na floating point value which specifies the percent of the UI that is taken up by overscan on the right side\nSince:\n7.0\n\n\n\n","returnType":"float"},{"args":[],"name":"GetOverscanInsetTop","comment":"Returns a floating point value which specifies the percent of the UI that is taken up by overscan on the top\n Equivalent to (GetOverscanOffsetY() * 1.0 / (GetFullUIHeight() * GetOverscanScaleHeight())))\n\nReturns:\na floating point value which specifies the percent of the UI that is taken up by overscan on the top\nSince:\n7.0\n\n\n\n","returnType":"float"},{"args":[],"name":"GetOverscanInsetBottom","comment":"Returns a floating point value which specifies the percent of the UI that is taken up by overscan on the bottom\n Equivalent to (1.0 - (GetOverscanOffsetY() * 1.0 / GetFullUIHeight()) - GetOverscanScaleHeight())/GetOverscanScaleHeight()\n\nReturns:\na floating point value which specifies the percent of the UI that is taken up by overscan on the bottom\nSince:\n7.0\n\n\n\n","returnType":"float"},{"args":[],"name":"GetOverscanInsets","comment":"Returns a length 4 array of floating point values which specifies the percent of the UI that is taken up by overscan on the 4 sides.\n The order is top, left, bottom, right in the returned array. Each value comes from GetOverscanInsetTop/Left/Bottom/Right() API calls.\n\nReturns:\na length 4 array of floating point values which specifies the percent of the UI that is taken up by overscan on the 4 sides\nSince:\n7.0\n\n\n\n","returnType":"java.lang.Float[]"},{"args":[],"name":"GetAvailableCountries","comment":"Gets the names of the countries that can be used in theSetCountry()\ncall.\n\nReturns:\nthe possible names for country selection\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"Country"}],"name":"SetCountry","comment":"Sets the country that the user is in. This is used for determining the frequencies used for tuning television signals.\n\nParameters:\nCountry- the name of the country the user is in, should be a value fromGetAvailableCountries()\n\nReturns:\nthe passed in Country variable\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"GetCountry","comment":"Gets the country that SageTV is configured for. This is used for determining the frequencies used for tuning television signals.\n\nReturns:\nthe name of the country that SageTV is configured for\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"Format"}],"name":"SetAnalogVideoFormat","comment":"Sets the analog video format that should be used for capture and playback. Valid values are \"NTSC\" or \"PAL\"\n\nParameters:\nFormat- the analog video format that should be used for capture and playback; valid values are \"NTSC\" or \"PAL\"\n\n\n\n","returnType":"void"},{"args":[],"name":"GetAnalogVideoFormat","comment":"Gets the analog video format that should be used for capture and playback. Valid values are \"NTSC\" or \"PAL\"\n\nReturns:\nthe analog video format that should be used for capture and playback\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"GetUILanguage","comment":"Gets the language that the user interface should be displayed in.\n\nReturns:\nthe language that the user interface should be displayed in\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"Language"}],"name":"SetUILanguage","comment":"Sets the language that the user interface should be displayed in. This takes effect immediately.\n Use theGetAvailableUILanguages()\ncall to get the options for this.\n\nParameters:\nLanguage- the language that the user interface should be displayed in\n\n\n\n","returnType":"void"},{"args":[],"name":"GetAvailableUILanguages","comment":"Gets the list of languages that are available to be used for the user interface.\n\nReturns:\nthe list of languages that are available to be used for the user interface\n\n\n\n","returnType":"java.lang.String[]"},{"args":[],"name":"GetSubpicAudioLanguageOptions","comment":"Gets the list of languages that are available to be used as presets for Audio tracks or Subpicture.\n\nReturns:\nthe list of languages that are available to be used as presets for Audio tracks or Subpicture.\n\n\n\n","returnType":"java.lang.String[]"},{"args":[],"name":"GetDefaultAudioLanguage","comment":"Gets the name of the preferred default language when selecting which audio stream to playback.\n\nReturns:\nthe name of the preferred default language when selecting which audio stream to playback\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"Language"}],"name":"SetDefaultAudioLanguage","comment":"Sets the name of the preferred default language when selecting which audio stream to playback. The values for this should be\n obtained from GetSubpicAudioLanguageOptions.\n\nParameters:\nLanguage- the name of the preferred default language when selecting which audio stream to playback\n\n\n\n","returnType":"void"},{"args":[],"name":"GetDefaultSubpicLanguage","comment":"Gets the name of the preferred default language when selecting which subpicture stream to playback. This\n will be the empty string if subtitles are preferred to be off by default.\n\nReturns:\nthe name of the preferred default language when selecting which subpicture stream to playback or the empty string for no subtitles\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"Language"}],"name":"SetDefaultSubpicLanguage","comment":"Sets the name of the preferred default language when selecting which subpicture stream to playback. The values for this should be\n obtained from GetSubpicAudioLanguageOptions, the value of null or the empty string is also allowed to indicate no subtitle track should be selected by default.\n\nParameters:\nLanguage- the name of the preferred default language when selecting which subpicture stream to playback, null or the empty string can be used to prefer no subtitles\n\n\n\n","returnType":"void"},{"args":[],"name":"GetTimeZone","comment":"Gets the name of the time zone that the application is currently configured to use\n\nReturns:\nthe name of the time zone that the application is currently configured to use\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"TimeZone"}],"name":"SetTimeZone","comment":"Sets the name of the time zone that the application should use. This takes effect immediately.\n\nParameters:\nTimeZone- the name of the time zone to use, seeGetAllTimeZones()\n\n\n\n\n","returnType":"void"},{"args":[],"name":"GetAllTimeZones","comment":"Gets the list of all of the valid time zone names\n\nReturns:\nthe list of all of the valid time zone names\n\n\n\n","returnType":"java.util.Vector"},{"args":[],"name":"GetDVBTRegions","comment":"Gets the names of the regions for the configured country which are used for dividing it up into\n different areas for DVB-T reception. Returns a zero-length list if there are no sub-regions within the country.\n Use the results from this in a call toSetDVBTRegion(DVBTRegion)\n\n\nReturns:\nthe region names in the country to use for DVBT reception differentiation\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"DVBTRegion"}],"name":"SetDVBTRegion","comment":"Sets the the region within the current country that the user is in.\n\nParameters:\nDVBTRegion- the name of the region the user is in, should be a value fromGetDVBTRegions()\n\nSince:\n5.1\n\n\n\n","returnType":"void"},{"args":[],"name":"GetDVBTRegion","comment":"Gets the the region within the current country that the user is in for DVB-T tuning purposes. \n Must have been set with a call toSetDVBTRegion(DVBTRegion)\n\n\nReturns:\nthe name of the region the user is in\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"GetDVBCRegions","comment":"Gets the names of the DVB-C providers for the configured country which are used for dividing it up into\n different areas for DVB-C reception. Returns a zero-length list if there are one or no providers in this country.\n Use the results from this in a call toSetDVBCRegion(DVBCRegion)\n\n\nReturns:\nthe provider names in the country to use for DVBC reception differentiation\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"DVBCRegion"}],"name":"SetDVBCRegion","comment":"Sets the the provider within the current country that the user has for DVBC reception.\n\nParameters:\nDVBCRegion- the name of the provider the user has, should be a value fromGetDVBCRegions()\n\nSince:\n5.1\n\n\n\n","returnType":"void"},{"args":[],"name":"GetDVBCRegion","comment":"Gets the the provider within the current country that the user has for DVB-C tuning purposes. \n Must have been set with a call toSetDVBCRegion(DVBCRegion)\n\n\nReturns:\nthe name of the provider the user has for DVB-C\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"GetDVBSRegions","comment":"Gets the names of the providers for the configured country which are used for dividing it up into\n different areas for DVB-S reception. Returns a zero-length list if there are one or no providers within the country.\n Use the results from this in a call toSetDVBSRegion(DVBSRegion)\n\n\nReturns:\nthe providers names in the country to use for DVBS reception differentiation\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"DVBSRegion"}],"name":"SetDVBSRegion","comment":"Sets the the provider within the current country that the user has for DVBS reception.\n\nParameters:\nDVBSRegion- the name of the provider the user has, should be a value fromGetDVBSRegions()\n\nSince:\n5.1\n\n\n\n","returnType":"void"},{"args":[],"name":"GetDVBSRegion","comment":"Gets the the provider within the current country that the user has for DVB-S tuning purposes. \n Must have been set with a call toSetDVBSRegion(DVBSRegion)\n\n\nReturns:\nthe name of the provider the user has for DVB-S\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"CanDoNativeOutputResolution","comment":"Returns true if this device can do native output resolutions (where output resolution\n matches the format of the media being played)\n\nReturns:\ntrue if this device can do native output resolutions\nSince:\n6.3\n\n\n\n","returnType":"boolean"},{"args":[],"name":"IsNativeOutputResolutionEnabled","comment":"Returns true if this device is configured to match the output resolution to the media format's resolution\n\nReturns:\ntrue if this device is configured to match the output resolution to the media format's resolution\nSince:\n6.3\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"boolean","varName":"Enabled"}],"name":"SetNativeOutputResolutionEnabled","comment":"Sets whether or not this device should try to match its output resolution to the media format's resolution\n\nParameters:\nEnabled- true if this device should be configured to match the output resolution to the media format's resolution; false to use a fixed resolution\nSince:\n6.3\n\n\n\n","returnType":"void"},{"args":[],"name":"GetAudioOutput","comment":"Returns a string describing the currently selected audio output (empty string if this can't be configured)\n\nReturns:\na string describing the currently selected audio output (empty string if this can't be configured)\nSince:\n6.3\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"GetAudioOutputOptions","comment":"Returns a list of the possible audio outputs. This is currently only used\n on media extender devices that have adjustable audio outputs.\n\nReturns:\nan array of the audio outputs that can be used, null if this change is not supported\nSince:\n6.3\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"AudioOutput"}],"name":"SetAudioOutput","comment":"Sets the current audio output. This is currently only used\n on media extender devices that have configurable audio outputs.\n\nParameters:\nAudioOutput- this must be a value fromGetAudioOutputOptions()\nand should be the new desired audio output\nSince:\n6.3\n\n\n\n","returnType":"void"},{"args":[],"name":"GetHDMIAutodetectedConnector","comment":"Returns a string describing the type of connection autodetected on HDMI (currently only used on media extenders)\n\nReturns:\na string describing the type of connection autodetected on HDMI (empty string if this isn't supported)\nSince:\n6.3\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"IsAdvancedDeinterlacingSupported","comment":"Returns true if the client supports doing advanced deinterlacing. This is only available on the HD300.\n\nReturns:\ntrue if the client supports doing advanced deinterlacing, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[],"name":"IsAdvancedDeinterlacingEnabled","comment":"Returns true if the client supports doing advanced deinterlacing and it is enabled. This is only available on the HD300.\n\nReturns:\ntrue if the client supports doing advanced deinterlacing and it is enabled, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"boolean","varName":"Enabled"}],"name":"SetAdvancedDeinterlacingEnabled","comment":"Allows enabling/disabling of advanced deinterlacing support. This is only available on the HD300.\n\nParameters:\nEnabled- true if advanced deinterlacing should be enabled, false if it should be disabled\n\n\n\n","returnType":"void"},{"args":[],"name":"RunFilterAutoconfiguration","comment":"Deprecated. \n\nSets the DirectShow audio & video decoders on windows to accepetable values\n\n\n\n\n","returnType":"void"},{"args":[],"name":"GetDXVAMpegMode","comment":"Gets the preferred DXVA MPEG Mode configuration setting (Windows only). This will be A, B, C or D (or Default if not set)\n This is used when playing back MPEG2 files.\n\nReturns:\nthe preferred DXVA MPEG Mode configuration setting\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"DXVAMode"}],"name":"SetDXVAMpegMode","comment":"Sets the preferred DXVA MPEG Mode configuration setting (Windows only). This will be A, B, C or D.\n This is used when playing back MPEG2 files.\n\nParameters:\nDXVAMode- the preferred DXVA MPEG Mode configuration setting, use the empty string or \"Default\" to disable this\n\n\n\n","returnType":"void"},{"args":[],"name":"GetDVDDXVAMpegMode","comment":"Gets the preferred DXVA MPEG Mode configuration setting (Windows only). This will be A, B, C or D (or Default if not set)\n This is used when playing back DVDs.\n\nReturns:\nthe preferred DXVA MPEG Mode configuration setting\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"DXVAMode"}],"name":"SetDVDDXVAMpegMode","comment":"Sets the preferred DXVA MPEG Mode configuration setting (Windows only). This will be A, B, C or D.\n This is used when playing back DVDs.\n\nParameters:\nDXVAMode- the preferred DXVA MPEG Mode configuration setting, use the empty string or \"Default\" to disable this\n\n\n\n","returnType":"void"},{"args":[],"name":"GetDXVAMpegModes","comment":"Gets the list of available DXVA MPEG Modes. This will return {\"A\", \"B\", \"C\", \"D\"}\n\nReturns:\nthe list of available DXVA MPEG Modes: {\"A\", \"B\", \"C\", \"D\"}\n\n\n\n","returnType":"java.lang.String[]"},{"args":[],"name":"GetDXVADeinterlaceMode","comment":"Gets the preferred DXVA Deinterlacing configuration setting (Windows only). \n This is used when playing back MPEG2 files.\n\nReturns:\nthe preferred DXVA Deinterlacing configuration setting\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"DeinterlaceMode"}],"name":"SetDXVADeinterlaceMode","comment":"Sets the preferred DXVA Deinterlacing configuration setting (Windows only). \n This is used when playing back MPEG2 files.\n\nParameters:\nDeinterlaceMode- the preferred DXVA Deinterlacing configuration setting\n\n\n\n","returnType":"void"},{"args":[],"name":"GetDVDDXVADeinterlaceMode","comment":"Gets the preferred DXVA Deinterlacing configuration setting (Windows only). \n This is used when playing back DVDs.\n\nReturns:\nthe preferred DXVA Deinterlacing configuration setting\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"DeinterlaceMode"}],"name":"SetDVDDXVADeinterlaceMode","comment":"Sets the preferred DXVA Deinterlacing configuration setting (Windows only). \n This is used when playing back DVDs.\n\nParameters:\nDeinterlaceMode- the preferred DXVA Deinterlacing configuration setting\n\n\n\n","returnType":"void"},{"args":[],"name":"GetDXVADeinterlaceModes","comment":"Gets the list of potential DXVA Deinterlacing Capabilities (Widows only)\n\nReturns:\nthe list of potential DXVA Deinterlacing Capabilities\n\n\n\n","returnType":"java.lang.String[]"},{"args":[],"name":"GetDscalerMode","comment":"Gets the mode that DScaler is currently configured to run in when it is used (Windows only)\n\nReturns:\nthe mode that DScaler is currently configured to run in when it is used\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"DscalerMode"}],"name":"SetDscalerMode","comment":"Sets the mode that DScaler should be configured to run in when it is used (Windows only)\n\nParameters:\nDscalerMode- the mode that DScaler should be configured to run in when it is used\n\n\n\n","returnType":"void"},{"args":[],"name":"GetDscalerModes","comment":"Gets the list of the available modes that DScaler can be run in\n\nReturns:\nthe list of the available modes that DScaler can be run in\n\n\n\n","returnType":"java.lang.String[]"},{"args":[],"name":"GetAudioDecoderFilter","comment":"Gets the name of the DirectShow audio decoder filter that's used for MPEG2 playback (Windows only)\n\nReturns:\nthe name of the DirectShow audio decoder filter that's used for MPEG2 playback\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"FilterName"}],"name":"SetAudioDecoderFilter","comment":"Sets the name of the DirectShow audio decoder filter that's used for MPEG2 playback (Windows only)\n\nParameters:\nFilterName- the name of the DirectShow audio decoder filter to use for MPEG2 playback\n\n\n\n","returnType":"void"},{"args":[],"name":"GetDVDAudioDecoderFilter","comment":"Gets the name of the DirectShow audio decoder filter that's used for DVD playback (Windows only)\n\nReturns:\nthe name of the DirectShow audio decoder filter that's used for DVD playback\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"FilterName"}],"name":"SetDVDAudioDecoderFilter","comment":"Sets the name of the DirectShow audio decoder filter that's used for DVD playback (Windows only)\n\nParameters:\nFilterName- the name of the DirectShow audio decoder filter to use for DVD playback\n\n\n\n","returnType":"void"},{"args":[],"name":"GetAudioRenderFilter","comment":"Gets the name of the DirectShow audio renderer filter that's used for all playback except DVDs (Windows only)\n\nReturns:\nthe name of the DirectShow audio renderer filter that's used for playback except DVDs\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"FilterName"}],"name":"SetAudioRenderFilter","comment":"Sets the name of the DirectShow audio renderer filter that's used for playback except DVDs (Windows only)\n\nParameters:\nFilterName- the name of the DirectShow audio renderer filter to use for playback except DVDs\n\n\n\n","returnType":"void"},{"args":[],"name":"GetDVDAudioRenderFilter","comment":"Gets the name of the DirectShow audio renderer filter that's used for DVD playback (Windows only)\n\nReturns:\nthe name of the DirectShow audio renderer filter that's used for DVD playback\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"FilterName"}],"name":"SetDVDAudioRenderFilter","comment":"Sets the name of the DirectShow audio renderer filter that's used for DVD playback (Windows only)\n\nParameters:\nFilterName- the name of the DirectShow audio renderer filter to use for DVD playback\n\n\n\n","returnType":"void"},{"args":[],"name":"GetDVDVideoRenderFilter","comment":"Gets the video renderer filter that should be used for DVD playback. Possible values are \"VMR9\",\n \"Overlay\" and the localized \"Default\" string\n\nReturns:\nthe video renderer filter that should be used for DVD playback\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"FilterName"}],"name":"SetDVDVideoRenderFilter","comment":"Sets the video renderer filter that should be used for DVD playback. Possible values are \"VMR9\",\n \"Overlay\" and the localized \"Default\" string\n\nParameters:\nFilterName- the video renderer filter that should be used for DVD playback\n\n\n\n","returnType":"void"},{"args":[],"name":"GetVideoDecoderFilter","comment":"Gets the name of the DirectShow video decoder filter that's used for MPEG2 playback (Windows only)\n\nReturns:\nthe name of the DirectShow video decoder filter that's used for MPEG2 playback\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"FilterName"}],"name":"SetVideoDecoderFilter","comment":"Sets the name of the DirectShow video decoder filter that's used for MPEG2 playback (Windows only)\n\nParameters:\nFilterName- the name of the DirectShow video decoder filter to use for MPEG2 playback\n\n\n\n","returnType":"void"},{"args":[],"name":"GetDVDVideoDecoderFilter","comment":"Gets the name of the DirectShow video decoder filter that's used for DVD playback (Windows only)\n\nReturns:\nthe name of the DirectShow video decoder filter that's used for DVD playback\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"FilterName"}],"name":"SetDVDVideoDecoderFilter","comment":"Sets the name of the DirectShow video decoder filter that's used for DVD playback (Windows only)\n\nParameters:\nFilterName- the name of the DirectShow video decoder filter to use for DVD playback\n\n\n\n","returnType":"void"},{"args":[],"name":"GetAudioDelay","comment":"Gets the audio delay in milliseconds to apply when playing back MPEG2 files (Windows only)\n\nReturns:\nthe audio delay in milliseconds to apply when playing back MPEG2 files\n\n\n\n","returnType":"int"},{"args":[{"dataType":"int","varName":"Delay"}],"name":"SetAudioDelay","comment":"Sets the audio delay in milliseconds to apply when playing back MPEG2 files (Windows only)\n\nParameters:\nDelay- the audio delay in milliseconds to apply when playing back MPEG2 files\n\n\n\n","returnType":"void"},{"args":[],"name":"GetAudioDecoderFilters","comment":"Gets the list of the audio decoder filters that are available in the system for MPEG2 playback (Windows only)\n\nReturns:\nthe list of the audio decoder filters that are available in the system for MPEG2 playback\n\n\n\n","returnType":"java.lang.String[]"},{"args":[],"name":"GetVideoDecoderFilters","comment":"Gets the list of the video decoder filters that are available in the system for MPEG2 playback (Windows only)\n\nReturns:\nthe list of the video decoder filters that are available in the system for MPEG2 playback\n\n\n\n","returnType":"java.lang.String[]"},{"args":[],"name":"IsSoftwareDecodingDisabled","comment":"Returns true if software decoding is disabled. This only applies to the TV output of the Hauppauge WinTV PVR-350 PCI card on Windows\n\nReturns:\ntrue if software decoding is disabled\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"boolean","varName":"Disabled"}],"name":"SetSoftwareDecodingDisabled","comment":"Sets if software decoding is disabled. This only applies to the TV output of the Hauppauge WinTV PVR-350 PCI card on Windows\n\nParameters:\nDisabled- true if software decoding is disabled\n\n\n\n","returnType":"void"},{"args":[],"name":"IsDscalerDoubleRefresh","comment":"Returns true if DScaler is set to double the refresh rate when used. This means it'll run at 60fps instead of 30fps.\n\nReturns:\ntrue if DScaler is set to double the refresh rate when used.\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"boolean","varName":"Enabled"}],"name":"SetDscalerDoubleRefresh","comment":"Sets whether or not DScaler should double the refresh rate. This means it'll run at 60fps instead of 30fps.\n\nParameters:\nEnabled- true if DScaler should double the refresh rate when used, false otherwise\n\n\n\n","returnType":"void"},{"args":[],"name":"IsDscalerOddFieldFirst","comment":"Returns true if DScaler is configured to display the odd field first (fields are even or odd)\n\nReturns:\ntrue if DScaler is configured to display the odd field first\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"boolean","varName":"Enabled"}],"name":"SetDscalerOddFieldFirst","comment":"Sets if DScaler should display the odd field first (fields are even or odd)\n\nParameters:\nEnabled- true if DScaler should display the odd field first\n\n\n\n","returnType":"void"},{"args":[],"name":"HasPVR350TVOutput","comment":"Returns true if the system has a Hauppauge WinTV PVR-350 card installed which can produce a TV output (Windows only)\n\nReturns:\ntrue if the system has a Hauppauge WinTV PVR-350 card installed which can produce a TV output\n\n\n\n","returnType":"boolean"},{"args":[],"name":"IsPVR350TVOutputEnabled","comment":"Returns true if the TV output on a Hauppauge WinTV PVR-350 card is enabled (Windows only)\n\nReturns:\ntrue if the TV output on a Hauppauge WinTV PVR-350 card is enabled\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"boolean","varName":"Enabled"}],"name":"SetPVR350TVOutputEnabled","comment":"Sets whether or not the TV output on a Hauppauge WinTV PVR-350 should be enabled (Windows only)\n\nParameters:\nEnabled- true if the TV output of a Hauppauge WinTV PVR-350 should be enabled\n\n\n\n","returnType":"void"},{"args":[],"name":"IsPVR350OSDEnabled","comment":"Returns true if the user interface (OSD) display on a Hauppauge WinTV PVR-350 should be shown through the tv output (Windows only)\n\nReturns:\ntrue if the user interface (OSD) display on a Hauppauge WinTV PVR-350 should be shown through the tv output\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"boolean","varName":"Enabled"}],"name":"SetPVR350OSDEnabled","comment":"Sets whether or not the user interface (OSD) should be displayed on the TV output of a Hauppauge WinTV PVR-350 (Windows only)\n\nParameters:\nEnabled- true if the user interface (OSD) should be displayed on the TV output of a Hauppauge WinTV PVR-350, false otherwise\n\n\n\n","returnType":"void"},{"args":[],"name":"IsDscalerEnabled","comment":"Returns true if the DScaler deinterlacing filter is enabled (Windows only)\n\nReturns:\ntrue if the DScaler deinterlacing filter is enabled\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"boolean","varName":"Enabled"}],"name":"SetDscalerEnabled","comment":"Sets whether or not the DScaler deinterlacing filter should be used (Windows only)\n\nParameters:\nEnabled- true if the DScaler deinterlacing filter should be used, false otherwise\n\n\n\n","returnType":"void"},{"args":[],"name":"GetDscalerPlugin","comment":"Gets the plugin that DScaler is currently configured to use when it is in \"Plugin\" mode.\n\nReturns:\nthe plugin that DScaler is currently configured to use when it is in \"Plugin\" mode\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"PluginName"}],"name":"SetDscalerPlugin","comment":"Sets the plugin that should be used by DScaler. DScaler must also be set into \"Plugin\" mode.\n\nParameters:\nPluginName- the name of the plugin to use with DScaler\n\n\n\n","returnType":"void"},{"args":[],"name":"GetDscalerPlugins","comment":"Returns the list of plugins that are supported by DScaler. These are used when DScaler is in \"Plugin\" mode. (Windows only)\n\nReturns:\nthe list of plugins that are supported by DScaler\n\n\n\n","returnType":"java.lang.String[]"},{"args":[],"name":"HasDirectX9","comment":"Returns true if the system has DirectX 9 installed (Windows Only)\n\nReturns:\ntrue if the system has DirectX 9 installed, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[],"name":"HasEVRSupport","comment":"Returns true if the system has support for the Enhanced Video Renderer (EVR) (Windows Only)\n\nReturns:\ntrue if the system has support for the Enhanced Video Renderer (EVR), false otherwise\n\n\n\n","returnType":"boolean"},{"args":[],"name":"IsVideoRendererOverlay","comment":"Returns true if the video renderer is configured to use the Overlay surface (Windows Only) Applies to all files except DVDs.\n\nReturns:\ntrue if the video renderer is configured to use the Overlay surface, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[],"name":"IsVideoRendererVMR9","comment":"Returns true if the video renderer is configured to use the Video Mixing Renderer 9 (Windows Only). This\n will only work if accelerated rendering is enabled (3D acceleration). If it's not then Overlay will be used\n as the video renderer instead of VMR9. Applies to all files except DVDs.\n\nReturns:\ntrue if the video renderer is configured to use VMR9, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[],"name":"IsVideoRendererEVR","comment":"Returns true if the video renderer is configured to use the Enhanced Video Renderer (Windows Only). This\n will only work if accelerated rendering is enabled (3D acceleration). If it's not then Overlay will be used\n as the video renderer instead of EVR. Applies to all files except DVDs.\n\nReturns:\ntrue if the video renderer is configured to use EVR, false otherwise\nSince:\n6.5\n\n\n\n","returnType":"boolean"},{"args":[],"name":"IsVideoRendererDefault","comment":"Returns true if the video renderer is configured to use the Default renderer (Windows Only). This will usually be the Video Mixing\n Renderer 7 if using Windows XP; but DirectShow ultimately decides this itself. Applies to all files except DVDs.\n\nReturns:\ntrue if the video renderer is configured to use the Default renderer\n\n\n\n","returnType":"boolean"},{"args":[],"name":"SetVideoRendererToDefault","comment":"Sets the video renderer to use the default renderer (Windows Only). This will usually be the Video Mixing\n Renderer 7 if using Windows XP; but DirectShow ultimately decides this itself. Applies to all files except DVDs.\n\n\n\n\n","returnType":"void"},{"args":[],"name":"SetVideoRendererToOverlay","comment":"Sets the video renderer to use the video Overlay surface (Windows Only). Applies to all files except DVDs.\n\n\n\n\n","returnType":"void"},{"args":[],"name":"SetVideoRendererToVMR9","comment":"Sets the video renderer to use the Video Mixing Renderer 9 (Windows Only). This\n will only work if accelerated rendering is enabled (3D acceleration). If it's not then Overlay will be used\n as the video renderer instead of VMR9. Applies to all files except DVDs.\n\n\n\n\n","returnType":"void"},{"args":[],"name":"SetVideoRendererToEVR","comment":"Sets the video renderer to use the Enhanced Video Renderer (Windows Only). This\n will only work if accelerated rendering is enabled (3D acceleration). If it's not then Overlay will be used\n as the video renderer instead of EVR. Applies to all files except DVDs.\n\nSince:\n6.5\n\n\n\n","returnType":"void"},{"args":[],"name":"GetAudioRendererFilters","comment":"Gets the list of DirectShow audio renderer filters that are available on the system (Windows Only).\n\nReturns:\nthe list of DirectShow audio renderer filters that are available on the system\n\n\n\n","returnType":"java.util.Vector"},{"args":[],"name":"GetMixerAudioInputPaths","comment":"Gets the different input connectors that are available on the system sound mixer (Windows Only)\n\nReturns:\nthe different input connectors that are available on the system sound mixer\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"boolean","varName":"Enabled"}],"name":"SetAllowPlaceshifterLoginCaching","comment":"Sets whether or not placeshifter connections should be allowed to cache their login information. Disabling\n this setting will clear the current authentication cache on the server.\n\nParameters:\nEnabled- true if the server should allow caching of placeshifter logins; false otherwise (false also clears the cache)\nSince:\n6.6\n\n\n\n","returnType":"void"},{"args":[],"name":"IsPlaceshifterLoginCachingAllowed","comment":"Returns true if this server allows caching of placeshifter logins, false otherwise\n\nReturns:\ntrue if this server allows caching of placeshifter logins, false otherwise\nSince:\n6.6\n\n\n\n","returnType":"boolean"}],"name":"Configuration"},"LocatorAPI":{"methods":[],"name":"LocatorAPI"},"ChannelAPI":{"methods":[{"args":[{"dataType":"sage.Channel","varName":"Channel"}],"name":"GetChannelDescription","comment":"Gets the descriptive name for this Channel. This is the longer text string.\n\nParameters:\nChannel- the Channel Object\nReturns:\nthe longer descriptive name for the specified Channel\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Channel","varName":"Channel"}],"name":"GetChannelName","comment":"Gets the name for this Channel. This is the Channel's call sign.\n\nParameters:\nChannel- the Channel Object\nReturns:\nthe name (call sign) for the specified Channel\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Channel","varName":"Channel"}],"name":"GetChannelNetwork","comment":"Gets the name of the associated network for this Channel. This is a way of grouping kinds of Channels together.\n\nParameters:\nChannel- the Channel Object\nReturns:\nthe network name for the specified Channel\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Channel","varName":"Channel"}],"name":"GetChannelNumber","comment":"Gets the channel number to tune to for this Channel. SageTV will return the first channel number it finds for this Channel since there may be multiple ones.\n\nParameters:\nChannel- the Channel Object\nReturns:\na channel number associated with this Channel\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Channel","varName":"Channel"},{"dataType":"java.lang.String","varName":"Lineup"}],"name":"GetChannelNumberForLineup","comment":"Gets the channel number to tune to for this Channel on the specified lineup. \n SageTV will return the first channel number it finds for this Channel on the lineup since there may be multiple ones.\n\nParameters:\nChannel- the Channel object\nLineup- the name of the Lineup\nReturns:\nthe channel number for the specified Channel on the specified Lineup\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Channel","varName":"Channel"},{"dataType":"java.lang.String","varName":"Lineup"}],"name":"GetPhysicalChannelNumberForLineup","comment":"Gets the physical channel number to tune to for this Channel on the specified lineup.\n\nParameters:\nChannel- the Channel object\nLineup- the name of the Lineup\nReturns:\nthe physical channel number for the specified Channel on the specified Lineup\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Channel","varName":"Channel"}],"name":"IsChannelViewable","comment":"Returns true if there is a configured lineup for which this channel is viewable.\n\nParameters:\nChannel- the Channel object\nReturns:\ntrue if there is a configured lineup for which this channel is viewable.\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Channel","varName":"Channel"},{"dataType":"java.lang.String","varName":"Lineup"}],"name":"IsChannelViewableOnLineup","comment":"Returns true if this Channel is viewable on the specified Lineup\n\nParameters:\nChannel- the Channel object\nLineup- the name of the Lineup\nReturns:\ntrue if this Channel is viewable on the specified Lineup\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Channel","varName":"Channel"},{"dataType":"java.lang.String","varName":"ChannelNumber"},{"dataType":"java.lang.String","varName":"Lineup"}],"name":"IsChannelViewableOnNumberOnLineup","comment":"Returns true if this Channel is viewable on the specified Lineup on the specified channel number\n\nParameters:\nChannel- the Channel object\nChannelNumber- the channel number to check\nLineup- the name of the Lineup\nReturns:\ntrue if this Channel is viewable on the specified Lineup on the specified channel number\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Channel","varName":"Channel"},{"dataType":"java.lang.String","varName":"Lineup"}],"name":"GetChannelNumbersForLineup","comment":"Gets the channel numbers which can be used to tune this Channel on the specified lineup.\n\nParameters:\nChannel- the Channel object\nLineup- the name of the Lineup\nReturns:\nthe channel numbers for the specified Channel on the specified Lineup\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"sage.Channel","varName":"Channel"},{"dataType":"java.lang.String","varName":"Lineup"}],"name":"ClearChannelMappingOnLineup","comment":"Clears any associated channel mappings that were created for this Channel on the specified Lineup\n\nParameters:\nChannel- the Channel object\nLineup- the name of the Lineup\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Channel","varName":"Channel"},{"dataType":"java.lang.String","varName":"Lineup"}],"name":"IsChannelRemappedOnLineup","comment":"Returns true if the user has remapped this Channel to a different number than it's default on the specified Lineup\n\nParameters:\nChannel- the Channel object\nLineup- the name of the Lineup\nReturns:\ntrue if the user has remapped this Channel to a different number than it's default on the specified Lineup\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Channel","varName":"Channel"},{"dataType":"java.lang.String","varName":"Lineup"},{"dataType":"java.lang.String","varName":"NewNumber"}],"name":"SetChannelMappingForLineup","comment":"Maps a channel on a lineup to a new channel number.\n\nParameters:\nChannel- the Channel object\nLineup- the name of the Lineup\nNewNumber- the new channel number to use for this Channel\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Channel","varName":"Channel"},{"dataType":"java.lang.String","varName":"Lineup"},{"dataType":"java.lang.String[]","varName":"NewNumbers"}],"name":"SetChannelMappingsForLineup","comment":"Maps a channel on a lineup to a new channel number(s).\n\nParameters:\nChannel- the Channel object\nLineup- the name of the Lineup\nNewNumbers- the new channel numbers to use for this Channel\nSince:\n6.4.3\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Channel","varName":"Channel"},{"dataType":"java.lang.String","varName":"Lineup"}],"name":"ClearPhysicalChannelMappingsOnLineup","comment":"Clears any associated physical channel mappings that were created for this Channel on the specified Lineup\n\nParameters:\nChannel- the Channel object\nLineup- the name of the Lineup\nSince:\n5.1\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Channel","varName":"Channel"},{"dataType":"java.lang.String","varName":"Lineup"}],"name":"IsPhysicalChannelRemappedOnLineup","comment":"Returns true if the user has remapped this physical Channel to a different physical number than it's default on the specified Lineup\n\nParameters:\nChannel- the Channel object\nLineup- the name of the Lineup\nReturns:\ntrue if the user has remapped this physical Channel to a different number than it's default on the specified Lineup\nSince:\n5.1\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Channel","varName":"Channel"},{"dataType":"java.lang.String","varName":"Lineup"},{"dataType":"java.lang.String","varName":"NewNumber"}],"name":"SetPhysicalChannelMappingForLineup","comment":"Maps a Channel on a lineup to a new physical channel number.\n\nParameters:\nChannel- the Channel object\nLineup- the name of the Lineup\nNewNumber- the new phyical channel number to use for this Channel\nSince:\n5.1\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Channel","varName":"Channel"}],"name":"GetStationID","comment":"Returns an ID which can be used withGetChannelForStationID()\nfor doing keyed lookups of Channel objects\n\nParameters:\nChannel- the Channel object\nReturns:\nthe station ID for the specified Channel\n\n\n\n","returnType":"int"},{"args":[{"dataType":"sage.Channel","varName":"Channel"}],"name":"GetChannelLogo","comment":"Gets the logo image for the specified Channel if one exists\n\nParameters:\nChannel- the Channel object\nReturns:\nthe logo image for the Channel\n\n\n\n","returnType":"sage.MetaImage"},{"args":[{"dataType":"sage.Channel","varName":"Channel"},{"dataType":"java.lang.String","varName":"Type"},{"dataType":"int","varName":"Index"},{"dataType":"boolean","varName":"Fallback"}],"name":"GetChannelLogo","comment":"Returns a Channel logo for the requested Channel if one exists. This can provide more detailed requests then the single argument GetChannelLogo call.\n\nParameters:\nChannel- the Channel object\nType- the type of image, can be one of \"Small\", \"Med\" or \"Large\" (all logos have all sizes available, w/ the exception of user-supplied logos)\nIndex- the 0-based index of the image to retrieve when multiple images exist for a given Type (there are only ever 0, 1 or 2 logos for a channel)\nFallback- should be true if an alternate image is allowed (this enables checking user-supplied logos first, as well as falling back to the primary logo if a secondary one is requested but does not exist)\nReturns:\na MetaImage corresponding to the requested image, or null if no image matching the requested parameters is found or an invalid Type is specified\nSince:\n7.1\n\n\n\n","returnType":"sage.MetaImage"},{"args":[{"dataType":"sage.Channel","varName":"Channel"}],"name":"IsChannelObject","comment":"Returns true if the argument is a Channel object. Automatic type conversion is NOT done in this call.\n\nParameters:\nChannel- the object to test\nReturns:\ntrue if the argument is a Channel object\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Channel","varName":"Channel"},{"dataType":"java.lang.String","varName":"ChannelNumber"},{"dataType":"java.lang.String","varName":"Lineup"},{"dataType":"boolean","varName":"Viewable"}],"name":"SetChannelViewabilityForChannelNumberOnLineup","comment":"Sets whether or not the specified Channel is viewable on the specified number on the specified Lineup\n\nParameters:\nChannel- the Channel object\nChannelNumber- the channel number to set the viewability state for\nLineup- the name of the Lineup\nViewable- true if is viewable, false if it is not\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Channel","varName":"Channel"},{"dataType":"java.lang.String","varName":"Lineup"},{"dataType":"boolean","varName":"Viewable"}],"name":"SetChannelViewabilityForChannelOnLineup","comment":"Sets whether or not the specified Channel is viewable on the specified Lineup. This affects all channel numbers it appears on.\n\nParameters:\nChannel- the Channel object\nLineup- the name of the Lineup\nViewable- true if is viewable, false if it is not\n\n\n\n","returnType":"void"},{"args":[{"dataType":"int","varName":"StationID"}],"name":"GetChannelForStationID","comment":"Returns the Channel object that has the corresponding station ID. The station ID is retrieved usingGetStationID()\n\n\nParameters:\nStationID- the station ID to look up\nReturns:\nthe Channel with the specified station ID\n\n\n\n","returnType":"sage.Channel"},{"args":[{"dataType":"java.lang.String","varName":"CallSign"},{"dataType":"java.lang.String","varName":"Name"},{"dataType":"java.lang.String","varName":"Network"},{"dataType":"int","varName":"StationID"}],"name":"AddChannel","comment":"Adds a new Channel to the database. The CallSign should not match that of any other channel; but this rule is not enforced.\n The StationID is what is used as the unique key to identify a station. Be sure that if you're creating new station IDs they do not conflict with existing ones.\n The safest way to pick a station ID (if you need to at random) is to make it less than 10000 and ensure that no channel already exists with that station ID.\n\nParameters:\nCallSign- the 'Name' to assign to the new Channel\nName- the 'Description' to assign to the new Channel\nNetwork- the 'Network' that the Channel is part of (can be \"\")\nStationID- the unique ID to give to this Channel\nReturns:\nthe newly created Channel object, if the station ID is already in use it will return the existing Channel object, but updated with the passed in values\n\n\n\n","returnType":"sage.Channel"},{"args":[],"name":"GetAllChannels","comment":"Returns all of the Channels that are defined in the system\n\nReturns:\nall of the Channel objects that are defined in the system\n\n\n\n","returnType":"sage.Channel[]"},{"args":[{"dataType":"sage.Channel","varName":"Channel"}],"name":"GetChannelLogoCount","comment":"Returns a count of logos for this channel. This will either be 0, 1 or 2. This does NOT include user-supplied channel logos.\n Since all channel logos have all types, this does not require a type argument.\n\nParameters:\nChannel- the Channel object\nReturns:\nthe number of logos for the specified Channel (does NOT include user-supplied logos)\nSince:\n7.1\n\n\n\n","returnType":"int"}],"name":"ChannelAPI"},"MediaNodeAPI":{"methods":[{"args":[{"dataType":"java.lang.String","varName":"Name"}],"name":"GetMediaSource","comment":"Retrieves a MediaNode which is the root of the specified 'Media Source'. All names are case insensitive.\n Valid names are:\n Filesystem - provides a view of the native filesystem\n VideoNavigator - provides various views of the imported videos\n MusicNavigator - provides various views of the imported music\n MusicVideosNavigator - provides various views of the imported videos with the 'music videos' category\n MoviesNavigator - provides various views of all content with the 'Movie' category or that are DVDs or BluRays\n TVNavigator - provides various views of recorded TV contentYou can also use names that are \"ContentByGrouping\" or just \"Content\".\n Valid values for \"Content\" are:\n Clips - all video files with a duration under 10 mins (controlled by the property max_duration_to_be_a_clip)\n Music or ImportedMusic - all imported music files\n Videos or ImportedVideso - all imported video files\n Picture or Photos or ImportedPictures or ImportedPhotos - all imported picture files\n DVDs or ImportedDVDs - all imported DVDs\n BluRays or ImportedBluRays - all imported BluRays\n Movies - all videos or TV recordings with the 'Movie' category or that are DVDs or BluRays\n MusicVideos - all imported videos with the 'Music Video' category\n TV - all recorded TV content\n MediaFiles - all files in SageTV\n Compilations - all music files that are by 'Various Artist'\n MusicPlaylists - all music playlists\n VideoPlaylists - all video playlistsValid values for \"Grouping\" are:\n Folder - grouped according to their relative import path\n Category or Genre - grouped by category, for music files they are then subgrouped by Artist and then Album\n Year - grouped by year, for music files they are subgrouped by Album\n Director - grouped by Director\n Actor - grouped by actors/actress\n Studio - grouped by the studio that produced the content if known\n Title - grouped by title\n Series - grouped by television series if known (SeriesInfo object)\n Album - grouped by album\n Artist - grouped by artist and then subgrouped by album\n Channel - grouped by channel\n\nParameters:\nName- the name of the media source\nReturns:\na MediaNode which contains the hierarchy for the specified media source\nSince:\n7.0\n\n\n\n","returnType":"sage.vfs.MediaNode"},{"args":[{"dataType":"java.lang.String","varName":"Name"},{"dataType":"java.lang.Object","varName":"Data"}],"name":"GetMediaView","comment":"Similar to the GetMediaSource API call; but the second argument allows specifying the actual data set to\n be used for the view. The name describes the type of content or grouping just like in GetMediaSource. Can be used for\n presenting a subset of another view or for creating a MediaNode view of a fixed list of data such as a list of MediaFiles or Actors.\n\nParameters:\nName- the view name to use\nData- the dataset that defines the content in the view, can be a Collection, Object[] or a single object\nReturns:\na MediaNode that represents the specified Data using the specified view Name\nSince:\n7.0\n\n\n\n","returnType":"sage.vfs.MediaNode"},{"args":[{"dataType":"java.lang.String","varName":"Name"},{"dataType":"java.lang.Object","varName":"RelativeRoot"}],"name":"GetRelativeMediaSource","comment":"Creates a MediaNode view with a relative root for a specified media source. This is currently only useable\n with the 'Filesystem' media source\n\nParameters:\nName- should be Filesystem; anything else will behave like the GetMediaSource API call\nRelativeRoot- the subdirectory which should be the root of this view\nReturns:\na MediaNode that represents the relative view of the specified media source\nSince:\n7.0\n\n\n\n","returnType":"sage.vfs.MediaNode"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"}],"name":"IsNodeFolder","comment":"Returns true if the specified MediaNode has children\n\nParameters:\nMediaNode- the specified MediaNode\nReturns:\ntrue if the specified MediaNode has children, false otherwise\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"}],"name":"GetNodeChildren","comment":"Returns an array of the children of the specified MediaNode\n\nParameters:\nMediaNode- the specified MediaNode\nReturns:\nan array of the children of the specified MediaNode\nSince:\n7.0\n\n\n\n","returnType":"sage.vfs.MediaNode[]"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"}],"name":"GetNodeNumChildren","comment":"Returns the number of children of the specified MediaNode\n\nParameters:\nMediaNode- the specified MediaNode\nReturns:\nthe number of children of the specified MediaNode\nSince:\n7.0\n\n\n\n","returnType":"int"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"},{"dataType":"int","varName":"Index"}],"name":"GetNodeChildAt","comment":"Returns the child of the specified MediaNode at the given index\n\nParameters:\nMediaNode- the specified MediaNode\nIndex- the index of the child to return (0-based)\nReturns:\nthe child of the specified MediaNode at the given index\nSince:\n7.0\n\n\n\n","returnType":"sage.vfs.MediaNode"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"},{"dataType":"java.lang.String","varName":"Technique"},{"dataType":"boolean","varName":"Ascending"}],"name":"SetNodeSort","comment":"Sets the sorting technique used by the specified MediaNode hierarchy. This effects all levels of the hierarchy.\n MediaNodes that are folders are always listed first when sorting. Some of the sorting techniques\n can also ignore 'the' as a prefix; this is controlled by the property \"ui/ignore_the_when_sorting\" which defaults to true.\n Valid sorting technique names are: Date, Size, Name (can ignore the), Filename, Track, Duration, Title (can ignore the),\n Artist (can ignore the), Album (can ignore the), Category, Year, Rating, Count, EpisodeName, EpisodeID, Rated, Runtime,\n Studio (can ignore the), Fullpath, OriginalAirDate, ChannelName, Intelligent\n\nParameters:\nMediaNode- the specified MediaNode\nTechnique- the name of the sorting technique to use, case insensitive\nAscending- true if the sorting should occur in ascending order, false otherwise\nSince:\n7.0\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"}],"name":"GetNodeSortTechnique","comment":"Returns the name of the current sorting technique used by the specified MediaNode hierarchy.\n\nParameters:\nMediaNode- the specified MediaNode\nReturns:\nthe name of the current sorting technique used by the specified MediaNode hierarchy.\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"}],"name":"IsNodeSortAscending","comment":"Returns true if the current sorting technique used by the specified MediaNode hierarchy is in ascending order, false otherwise\n\nParameters:\nMediaNode- the specified MediaNode\nReturns:\ntrue if the current sorting technique used by the specified MediaNode hierarchy is in ascending order, false otherwise\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"},{"dataType":"java.lang.String","varName":"Technique"},{"dataType":"boolean","varName":"MatchPasses"}],"name":"SetNodeFilter","comment":"Sets the filtering techniques used by the specified MediaNode hierarchy. This effects all levels of the hierarchy.\n Filters can either be inclusive or exclusive. This method will clear all other filters and set this as the only filter.\n Valid filtering technique names are: Directories, Pictures, Videos, Music, DVD, BluRay, TV, Watched, Archived, DontLike, Favorite,\n HDTV, ManualRecord, FirstRun, CompleteRecording\n\nParameters:\nMediaNode- the specified MediaNode\nTechnique- the name of the filtering technique to use, case insensitive\nMatchPasses- true if the items matching the filter should be retained, false if matching items should be removed\nSince:\n7.0\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"}],"name":"GetNodeNumFilters","comment":"Gets the number of filters that are currently set for the specified MediaNode.\n\nParameters:\nMediaNode- the specified MediaNode\nReturns:\nthe number of filters that are currently set for the specified MediaNode.\nSince:\n7.0\n\n\n\n","returnType":"int"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"},{"dataType":"int","varName":"FilterIndex"}],"name":"GetNodeFilterTechnique","comment":"Returns the name of the current filtering technique used by the specified MediaNode hierarchy. Since\n multiple filters can be set; an index must be specified to determine which one to get the technique of\n\nParameters:\nMediaNode- the specified MediaNode\nFilterIndex- the 0-based index of the filtering technique to retrieve\nReturns:\nthe name of the current filtering technique used by the specified MediaNode hierarchy at the specified index, null if the index is out of bounds\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"},{"dataType":"int","varName":"FilterIndex"}],"name":"IsNodeFilterMatching","comment":"Returns the match state of the current filtering technique used by the specified MediaNode hierarchy. Since\n multiple filters can be set; an index must be specified to determine which one to get the matching state of\n\nParameters:\nMediaNode- the specified MediaNode\nFilterIndex- the 0-based index of the filtering match state to retrieve\nReturns:\ntrue if the current filtering technique used by the specified MediaNode hierarchy at the specified index is MatchPasses, false otherwise or if the index is out of bounds\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"},{"dataType":"java.lang.String","varName":"Technique"},{"dataType":"boolean","varName":"MatchPasses"}],"name":"AppendNodeFilter","comment":"Adds a filtering technique to used by the specified MediaNode hierarchy. This effects all levels of the hierarchy.\n Filters can either be inclusive or exclusive. This method will not clear other filters that have been set.\n Valid filtering technique names are: Directories, Pictures, Videos, Music, DVD, BluRay, TV, Watched, Archived, DontLike, Favorite,\n HDTV, ManualRecord, FirstRun, CompleteRecording\n\nParameters:\nMediaNode- the specified MediaNode\nTechnique- the name of the filtering technique to use, case insensitive\nMatchPasses- true if the items matching the filter should be retained, false if matching items should be removed\nSince:\n7.0\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"}],"name":"IsNodeHierarchyRealized","comment":"Returns true if the entire set of data objects that back this MediaNode hierarchy has already been realized.\n This will be true for fixed sets of data; but false for abstractions like the filesystem. When this is true the\n API call GetAllNodeDescendants will return a valid result.\n\nParameters:\nMediaNode- the specified MediaNode\nReturns:\ntrue if the entire set of data objects that back this MediaNode hierarchy has already been realized, false otherwise\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"}],"name":"GetAllNodeDescendants","comment":"Returns the data set that represents all the children under the specified MediaNode if that\n data set has already been realized.\n\nParameters:\nMediaNode- the specified MediaNode\nReturns:\na Collection which holds all of the resulting descendants of the specified Media Node; this Collection should NOT be modified\nSince:\n7.0\n\n\n\n","returnType":"java.util.Collection"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"}],"name":"GetNodeIcon","comment":"Returns the icon image associated with the specified MediaNode. This is currently the same as GetNodeThumbnail.\n\nParameters:\nMediaNode- the specified MediaNode\nReturns:\nan Object which represents the icon for this MediaNode; this may be a MetaImage or a resource path that can be used to load an image\nSince:\n7.0\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"}],"name":"GetNodeThumbnail","comment":"Returns the thumbnail image associated with the specified MediaNode.\n\nParameters:\nMediaNode- the specified MediaNode\nReturns:\nan Object which represents the thumbnail for this MediaNode; this may be a MetaImage or a resource path that can be used to load an image\nSince:\n7.0\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"}],"name":"GetNodePrimaryLabel","comment":"Returns a string representation of the primary data associated with the specified MediaNode suitable for display in the UI.\n\nParameters:\nMediaNode- the specified MediaNode\nReturns:\na string representation of the primary data associated with the specified MediaNode suitable for display in the UI\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"}],"name":"GetNodeSecondaryLabel","comment":"Returns a string representation of the secondary data associated with the specified MediaNode suitable for display in the UI.\n This will usually relate to whatever the current sorting technique is.\n\nParameters:\nMediaNode- the specified MediaNode\nReturns:\na string representation of the secondary data associated with the specified MediaNode suitable for display in the UI\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"}],"name":"IsNodePlayable","comment":"Returns true if the Object that this MediaNode wraps is suitable for passing to the Watch API call.\n\nParameters:\nMediaNode- the specified MediaNode\nReturns:\ntrue if the Object that this MediaNode wraps is suitable for passing to the Watch API call\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"}],"name":"IsNodeVirtual","comment":"Returns true if the specified MediaNode doesn't wrap an actual data object; but just an abstraction of a hierarchy\n\nParameters:\nMediaNode- the specified MediaNode\nReturns:\ntrue if the specified MediaNode doesn't wrap an actual data object; but just an abstraction of a hierarchy\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"}],"name":"GetNodeDataObject","comment":"Returns the Object that is wrapped by the specified MediaNode\n\nParameters:\nMediaNode- the specified MediaNode\nReturns:\nthe Object that is wrapped by the specified MediaNode\nSince:\n7.0\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"}],"name":"GetNodeDataType","comment":"Returns the type of the Object that is wrapped by the specified MediaNode\n\nParameters:\nMediaNode- the specified MediaNode\nReturns:\nthe type of the Object that is wrapped by the specified MediaNode\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"},{"dataType":"java.lang.String","varName":"PropertyName"}],"name":"GetNodeProperty","comment":"Returns a specific property associated with this MediaNode. This varies depending upon the data type of the \n MediaNode. For MediaFile based nodes this will end up calling GetMediaFileMetadata.\n\nParameters:\nMediaNode- the specified MediaNode\nPropertyName- the name of the property\nReturns:\nthe value of the specified property for the specified MediaNode\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"}],"name":"GetNodeParent","comment":"Returns the MediaNode parent of the specified MediaNode\n\nParameters:\nMediaNode- the specified MediaNode\nReturns:\nthe MediaNode parent of the specified MediaNode or null if it doesn't have a parent\nSince:\n7.0\n\n\n\n","returnType":"sage.vfs.MediaNode"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"}],"name":"RefreshNode","comment":"Refreshes the hierarchy associated with the specified MediaNode.\n\nParameters:\nMediaNode- the specified MediaNode\nSince:\n7.0\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"},{"dataType":"boolean","varName":"State"}],"name":"SetNodeChecked","comment":"Sets a flag on this MediaNode to indicate it is in the checked state. Useful for tracking multi-selection of\n child MediaNodes.\n\nParameters:\nMediaNode- the specified MediaNode\nState- true if the MediaNode should be marked as being in the checked state, false otherwise\nSince:\n7.0\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"},{"dataType":"boolean","varName":"State"}],"name":"SetAllChildrenChecked","comment":"Sets a flag on all the children of this MediaNode to indicate they are in the checked state. Useful for tracking multi-selection of\n child MediaNodes.\n\nParameters:\nMediaNode- the specified MediaNode\nState- true if all the children of the MediaNode should be marked as being in the checked state, false if they should be marked as unchecked\nSince:\n7.0\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"},{"dataType":"boolean","varName":"State"}],"name":"GetChildrenCheckedCount","comment":"Returns the number of children of the specified MediaNode that are in the specified checked state.\n\nParameters:\nMediaNode- the specified MediaNode\nState- true if the returned count should be for checked children, false if it should be for unchecked children\nReturns:\nthe number of children of the specified MediaNode that are in the specified checked state\nSince:\n7.0\n\n\n\n","returnType":"int"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"},{"dataType":"boolean","varName":"State"}],"name":"GetChildrenCheckedNodes","comment":"Returns the children of the specified MediaNode that are in the specified checked state.\n\nParameters:\nMediaNode- the specified MediaNode\nState- true if the returned list should be for checked children, false if it should be for unchecked children\nReturns:\nan array of children of the specified MediaNode that are in the specified checked state\nSince:\n7.0\n\n\n\n","returnType":"java.util.Vector"},{"args":[{"dataType":"java.lang.String","varName":"PrimaryLabel"},{"dataType":"java.lang.String","varName":"SecondaryLabel"},{"dataType":"java.lang.Object","varName":"Thumbnail"},{"dataType":"java.lang.Object","varName":"Icon"},{"dataType":"java.lang.Object","varName":"DataObject"}],"name":"CreateMediaNode","comment":"Creates a static MediaNode that has no parents and no children. Can be used to add arbitrary items to MediaNode lists for display in\n the UI. The data type for the node will be Virtual.\n\nParameters:\nPrimaryLabel- the value to set as the primary label for the MediaNode\nSecondaryLabel- the value to set as the secondary label for the MediaNode\nThumbnail- the Object to use as the thumbnail for the MediaNode\nIcon- the Object to use as the icon for the MediaNode\nDataObject- the Object that should be the data object for the MediaNode\nReturns:\na new MediaNode object that has the specified attributes\nSince:\n7.0\n\n\n\n","returnType":"sage.vfs.MediaNode"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"}],"name":"GetNodeFullPath","comment":"Returns a string which represents the hierarchical path to this MediaNode. This is created by appending the primary labels\n of all the parents up to the root of the hierarchy. The forward slash is used as a separator.\n\nParameters:\nMediaNode- the specified MediaNode\nReturns:\na string which represents the hierarchical path to this MediaNode\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.vfs.MediaNode","varName":"MediaNode"}],"name":"GetNodeTypePath","comment":"Returns a string which represents the hierarchical path to this MediaNode with type information only. This is created by appending the data types\n of all the parents up to the root of the hierarchy. The forward slash is used as a separator. For Virtual nodes, it will use F if it represents\n a folder in the import hierarchy; otherwise it'll use the primary label unless that is null, in which case it'll use V.\n\nParameters:\nMediaNode- the specified MediaNode\nReturns:\na string which represents the hierarchical type path to this MediaNode\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.Object","varName":"Object"}],"name":"IsMediaNodeObject","comment":"Returns true if the specified object is a MediaNode object. No automatic type conversion will be performed on the argument.\n\nParameters:\nObject- the object to test to see if it is a MediaNode object\nReturns:\ntrue if the argument is a MediaNode object, false otherwise\nSince:\n7.1\n\n\n\n","returnType":"boolean"}],"name":"MediaNodeAPI"},"Utility":{"methods":[{"args":[{"dataType":"java.util.Map","varName":"Grouping"},{"dataType":"java.lang.Object","varName":"Key"}],"name":"GetSubgroup","comment":"Gets the value for the specified key out of a map. Useful for analyzing data from aGroupByMethod ()\ncall.\n\nParameters:\nGrouping- the map to get the value from\nKey- the key to use for retrieving the value\nReturns:\nthe value for the specified key in the specified map\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.lang.String","varName":"Character"},{"dataType":"boolean","varName":"System"}],"name":"Keystroke","comment":"Executes the specified keystroke in either the SageTV event system or by emulation in the operating system\n\nParameters:\nCharacter- the keystroke to perform, can contain Ctrl, Shift, Alt and combinations thereof with the specified key name\nSystem- if true then an operating system keystroke should be emulated, if false then keep the keystroke within SageTV\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.Object","varName":"Data"}],"name":"Size","comment":"Returns the size of the specified data.\n\nParameters:\nData- the object to get the data size of\nReturns:\nfor a Collection or Map, the size of it; for an array, the length; for a string, the length, otherwise 0 is returned\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.Object","varName":"Data"}],"name":"IsEmpty","comment":"Returns true if the argument is null, zero, an empty string or a failed image load\n\nParameters:\nData- the object to test\nReturns:\ntrue if the argument is null, zero, an empty string or a failed image load\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"Format"},{"dataType":"java.lang.Object","varName":"Date"}],"name":"DateFormat","comment":"Returns a formatted date string for the specified Date.\n\nParameters:\nFormat- null if SageTV's default date format should be used, otherwise use a formatting string as specified in java.text.SimpleDateFormat\nDate- either a java.util.Date object or a long which corresponds to the date\nReturns:\nthe date formatted string\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"Format"},{"dataType":"float","varName":"Number"}],"name":"NumberFormat","comment":"Returns a formatted numeric string for the specified number.\n\nParameters:\nFormat- a formatting string as specified in java.text.DecimalFormat\nNumber- the floating point number to format\nReturns:\nthe formatted numeric string\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"Format"},{"dataType":"long","varName":"Duration"}],"name":"DurFormat","comment":"Returns a formatted duration String for a period of time in milliseconds. The formatting string\n uses the % character for escapement (%% is not supported, you cannot display the % symbol in a duration string). \n The 'd', 'h', 'm' and 's' characters can be used to indicate days, hours, minutes and seconds respectively.\n Any format character may be prefixed by the 'r' character to indicate it is a required field.For example, the format string %rh:%m for 20 minutes would return 0:20 and for the string $h:%m it would return 20\n If there's characters before a field value then that value will be zero padded, i.e. 65 minutes for %h:%m would be 1:05\n\n\nParameters:\nFormat- the duration format string, or null to use SageTV's default duration formatting\nDuration- the duration to print out in milliseconds\nReturns:\nthe formatted duration string\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"long","varName":"StartTime"},{"dataType":"long","varName":"EndTime"}],"name":"CreateTimeSpan","comment":"Returns a length 2 Long object array which can be used for specifying a time span in a table. The first element\n will be the StartTime and the second will be the EndTime\n\nParameters:\nStartTime- the long value which specifies the start value of the time span\nEndTime- the long value which specifies the end value of the time span\nReturns:\nan array which represents this time span\n\n\n\n","returnType":"java.lang.Long[]"},{"args":[{"dataType":"java.lang.Object","varName":"Data"},{"dataType":"int","varName":"Index"}],"name":"GetElement","comment":"Returns the element at the specified index in this data; works for arrays and java.util.List implementations (i.e. Vector, etc.)\n\nParameters:\nData- the java.util.List or array object to get the element from\nIndex- the 0-based index of the element to retrieve\nReturns:\nthe element at the specified index or null if there is no such element\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.lang.Object","varName":"Data"},{"dataType":"int","varName":"Index"},{"dataType":"java.lang.Object","varName":"Value"}],"name":"SetElement","comment":"Sets the element at the specified index in this data; works for arrays and java.util.List implementations (i.e. Vector, etc.)\n\nParameters:\nData- the java.util.List or array object to set the element for\nIndex- the 0-based index of the element to set\nValue- the value to set\nReturns:\nthe Value parameters is returned\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.util.List","varName":"Data"},{"dataType":"int","varName":"Index"}],"name":"RemoveElementAtIndex","comment":"Removes the element at the specified index in this data; works java.util.List implementations (i.e. Vector, etc.)\n\nParameters:\nData- the java.util.List object to remove the element from\nIndex- the 0-based index of the element to remove\nReturns:\nthe element at the specified index or null if there is no such element\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.lang.Object","varName":"Data"},{"dataType":"java.lang.Object","varName":"Value"}],"name":"RemoveElement","comment":"Removes the element at with the specified value from this data. Works for java.util.Collection or java.util.Map implementations.\n If the value appears multiple times in the data (for Collections) only the first occurrence is removed.\n\nParameters:\nData- the java.util.Collection or java.util.Map object to remove the element from; for maps it removes based on key\nValue- the value to remove from the data\nReturns:\nfor java.util.Collections true if the element exists and was removed, false otherwise; for java.util.Maps it returns the value that the specified key corresponded to\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.util.Collection","varName":"Data"},{"dataType":"java.lang.Object","varName":"Value"}],"name":"AddElement","comment":"Add the element with the specified value to this data. Works for java.util.Collection implementations.\n\nParameters:\nData- the java.util.Collection object to add the element to\nValue- the value to add to the data\nReturns:\nfor java.util.Collections true if the data changed as a result of the call (i.e. the add succeded and was not redundant), false otherwise\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.Object","varName":"Data"},{"dataType":"java.lang.Object","varName":"Element"}],"name":"FindElementIndex","comment":"Returns the index in the data that the specified element is found at. If there are multiple occurrences of this element\n only the first index is returned. This works for arrays and java.util.List implementations.\n\nParameters:\nData- the java.util.List or array to look in\nElement- the value to search the data for\nReturns:\nthe 0-based index of the specified element in the data, or -1 if it does not exist\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.Object","varName":"Data"},{"dataType":"java.lang.Comparable","varName":"Criteria"},{"dataType":"java.lang.String","varName":"Method"}],"name":"FindComparativeElement","comment":"Searches a sorted list of data to find the index that the specified criteria exists at; or if it doesn't exist\n in the data it will use the index that would be the appropriate insertion point for the criteria in the data\n in order to maintain sort order. The element at that index is what is returned\n\nParameters:\nData- the data to sort, this must be a java.util.Collection, a java.util.Map, or an array\nCriteria- the object to compare the elements to; this must implement java.lang.Comparable\nMethod- the method name to execute on each element to get the value to compare; use null to compare the elements themselves\nReturns:\nthe element at the comparative insertion point\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.lang.String","varName":"String"},{"dataType":"int","varName":"StartIndex"},{"dataType":"int","varName":"EndIndex"}],"name":"Substring","comment":"Returns the substring from a specified string. Same as java.lang.String.substring(int startIndex, int endIndex)\n\nParameters:\nString- the string to get the substring of\nStartIndex- the 0-based index that the substring starts at\nEndIndex- the 0-based index that the substring ends at or -1 if the substring goes to the end of the string\nReturns:\nthe substring from the specified string\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"String"},{"dataType":"int","varName":"EndOffset"}],"name":"SubstringBegin","comment":"Returns the substring from a specified string. The substring will start at the beginning of the string and end\n EndIndex characters before the end of the string. Same as Substring(String, 0, Size(String) - EndOffset).\n\nParameters:\nString- the string to get the substring of\nEndOffset- the number of characters from the end of the string to terminate the substring (0 implies return the entire string)\nReturns:\nthe substring from the specified string\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.Object","varName":"Number"}],"name":"Round","comment":"Rounds a floating point number to an integral value. For Doubles a Long is returned, for Floats an Integer is returned\n\nParameters:\nNumber- the number to round\nReturns:\nthe rounded value\n\n\n\n","returnType":"java.lang.Object"},{"args":[],"name":"Time","comment":"Returns the current time; see java.lang.System.currentTimeMillis() for the explanation of the units.\n\nReturns:\nthe current time\n\n\n\n","returnType":"long"},{"args":[],"name":"PrintCurrentTime","comment":"Returns a string that represents the current time.\n\nReturns:\na string that represents the current time.\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"long","varName":"Date"}],"name":"PrintDate","comment":"Returns a formatted date string using the java.text.DateFormat.MEDIUM formatting technique\n\nParameters:\nDate- the date value to format\nReturns:\na formatted date string\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"long","varName":"Date"}],"name":"PrintDateLong","comment":"Returns a formatted date string using SageTV's default detailed date formatting\n\nParameters:\nDate- the date value to format\nReturns:\na formatted date string\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"long","varName":"Date"}],"name":"PrintDateShort","comment":"Returns a formatted date string using the java.text.DateFormat.SHORT formatting technique\n\nParameters:\nDate- the date value to format\nReturns:\na formatted date string\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"long","varName":"Date"}],"name":"PrintDateFull","comment":"Returns a formatted date string using the java.text.DateFormat.FULL formatting technique\n\nParameters:\nDate- the date value to format\nReturns:\na formatted date string\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"long","varName":"Time"}],"name":"PrintTime","comment":"Returns a formatted time string using the java.text.DateFormat.MEDIUM formatting technique\n\nParameters:\nTime- the time value to format\nReturns:\na formatted time string\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"long","varName":"Time"}],"name":"PrintTimeLong","comment":"Returns a formatted time string using the java.text.DateFormat.LONG formatting technique\n\nParameters:\nTime- the time value to format\nReturns:\na formatted time string\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"long","varName":"Time"}],"name":"PrintTimeShort","comment":"Returns a formatted time string using the java.text.DateFormat.SHORT formatting technique\n\nParameters:\nTime- the time value to format\nReturns:\na formatted time string\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"long","varName":"Time"}],"name":"PrintTimeFull","comment":"Returns a formatted time string using the java.text.DateFormat.FULL formatting technique\n\nParameters:\nTime- the time value to format\nReturns:\na formatted time string\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"long","varName":"Duration"}],"name":"PrintDuration","comment":"Returns a formatted duration string according to SageTV's verbose duration formating, minutes is the most detailed resolution of this format\n\nParameters:\nDuration- the duration in milliseconds to print\nReturns:\nthe formatted duration string\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"long","varName":"Duration"}],"name":"PrintDurationWithSeconds","comment":"Returns a formatted duration string according to SageTV's default duration formating, seconds is the most detailed resolution of this format\n\nParameters:\nDuration- the duration in milliseconds to print\nReturns:\nthe formatted duration string\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"long","varName":"Duration"}],"name":"PrintDurationShort","comment":"Returns a formatted duration string according to SageTV's concise duration formating, minutes is the most detailed resolution of this format\n\nParameters:\nDuration- the duration in milliseconds to print\nReturns:\nthe formatted duration string\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"DrivePath"}],"name":"GetDiskFreeSpace","comment":"Returns the amount of disk free space in bytes at the specified path\n\nParameters:\nDrivePath- the path string of a disk to get the free space of\nReturns:\nthe free space on the specified disk in bytes\n\n\n\n","returnType":"long"},{"args":[{"dataType":"java.lang.String","varName":"DrivePath"}],"name":"GetDiskTotalSpace","comment":"Returns the amount of total disk space in bytes at the specified path\n\nParameters:\nDrivePath- the path string of a disk to get the total space of\nReturns:\nthe total space on the specified disk in bytes\n\n\n\n","returnType":"long"},{"args":[{"dataType":"java.lang.String","varName":"DrivePath"}],"name":"GetFileSystemType","comment":"Gets the name of the filesystem type at the specified path\n\nParameters:\nDrivePath- the path string of a disk to get the filesystem type for\nReturns:\nthe name of the filesystem type at the specified path\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"Root"},{"dataType":"java.lang.String","varName":"Key"}],"name":"GetWindowsRegistryNames","comment":"Returns a list of the Windows registry names which exist under the specified root & key (Windows only)\n Acceptable values for the Root are: \"HKCR\", \"HKEY_CLASSES_ROOT\", \"HKCC\", \"HKEY_CURRENT_CONFIG\", \"HKCU\",\n \"HKEY_CURRENT_USER\", \"HKU\", \"HKEY_USERS\", \"HKLM\" or \"HKEY_LOCAL_MACHINE\" (HKLM is the default if nothing matches)\n\nParameters:\nRoot- the registry hive to look in\nKey- the key path in the registry hive\nReturns:\nthe names stored in the registry under the specified key\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"Root"},{"dataType":"java.lang.String","varName":"Key"},{"dataType":"java.lang.String","varName":"Name"}],"name":"GetWindowsRegistryDWORDValue","comment":"Returns a DWORD value from the Windows registry for the specified root, key and name(Windows only)\n Acceptable values for the Root are: \"HKCR\", \"HKEY_CLASSES_ROOT\", \"HKCC\", \"HKEY_CURRENT_CONFIG\", \"HKCU\",\n \"HKEY_CURRENT_USER\", \"HKU\", \"HKEY_USERS\", \"HKLM\" or \"HKEY_LOCAL_MACHINE\" (HKLM is the default if nothing matches)\n\nParameters:\nRoot- the registry hive to look in\nKey- the key path in the registry hive\nName- the name of the registry value to retrieve\nReturns:\nthe value of the specified registry setting as a DWORD\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.String","varName":"Root"},{"dataType":"java.lang.String","varName":"Key"},{"dataType":"java.lang.String","varName":"Name"}],"name":"GetWindowsRegistryStringValue","comment":"Returns a string value from the Windows registry for the specified root, key and name(Windows only)\n Acceptable values for the Root are: \"HKCR\", \"HKEY_CLASSES_ROOT\", \"HKCC\", \"HKEY_CURRENT_CONFIG\", \"HKCU\",\n \"HKEY_CURRENT_USER\", \"HKU\", \"HKEY_USERS\", \"HKLM\" or \"HKEY_LOCAL_MACHINE\" (HKLM is the default if nothing matches)\n\nParameters:\nRoot- the registry hive to look in\nKey- the key path in the registry hive\nName- the name of the registry value to retrieve\nReturns:\nthe value of the specified registry setting as a string\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.String","varName":"Root"},{"dataType":"java.lang.String","varName":"Key"},{"dataType":"java.lang.String","varName":"Name"}],"name":"RemoveWindowsRegistryValue","comment":"Removes a value from the Windows registry for the specified root, key and name(Windows only)\n Acceptable values for the Root are: \"HKCR\", \"HKEY_CLASSES_ROOT\", \"HKCC\", \"HKEY_CURRENT_CONFIG\", \"HKCU\",\n \"HKEY_CURRENT_USER\", \"HKU\", \"HKEY_USERS\", \"HKLM\" or \"HKEY_LOCAL_MACHINE\" (HKLM is the default if nothing matches)\n\nParameters:\nRoot- the registry hive to look in\nKey- the key path in the registry hive\nName- the name of the registry value to remove\nReturns:\ntrue if the specified setting was removed, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"Root"},{"dataType":"java.lang.String","varName":"Key"},{"dataType":"java.lang.String","varName":"Name"},{"dataType":"int","varName":"Value"}],"name":"SetWindowsRegistryDWORDValue","comment":"Sets a DWORD value in the Windows registry for the specified root, key and name(Windows only)\n The name will be created if it doesn't already exist.\n Acceptable values for the Root are: \"HKCR\", \"HKEY_CLASSES_ROOT\", \"HKCC\", \"HKEY_CURRENT_CONFIG\", \"HKCU\",\n \"HKEY_CURRENT_USER\", \"HKU\", \"HKEY_USERS\", \"HKLM\" or \"HKEY_LOCAL_MACHINE\" (HKLM is the default if nothing matches)\n\nParameters:\nRoot- the registry hive to use\nKey- the key path in the registry hive\nName- the name of the registry value to set\nValue- the value of the specified registry setting as a DWORD\nReturns:\ntrue if the operation was successful, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"Root"},{"dataType":"java.lang.String","varName":"Key"},{"dataType":"java.lang.String","varName":"Name"},{"dataType":"java.lang.String","varName":"Value"}],"name":"SetWindowsRegistryStringValue","comment":"Sets a string value in the Windows registry for the specified root, key and name(Windows only)\n The name will be created if it doesn't already exist.\n Acceptable values for the Root are: \"HKCR\", \"HKEY_CLASSES_ROOT\", \"HKCC\", \"HKEY_CURRENT_CONFIG\", \"HKCU\",\n \"HKEY_CURRENT_USER\", \"HKU\", \"HKEY_USERS\", \"HKLM\" or \"HKEY_LOCAL_MACHINE\" (HKLM is the default if nothing matches)\n\nParameters:\nRoot- the registry hive to use\nKey- the key path in the registry hive\nName- the name of the registry value to set\nValue- the value of the specified registry setting as a string\nReturns:\ntrue if the operation was successful, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"SoundFile"}],"name":"PlaySound","comment":"Plays the specified sound file (used for sound effects, don't use for music playback)\n\nParameters:\nSoundFile- the path of the sound resource to play back\n\n\n\n","returnType":"void"},{"args":[{"dataType":"boolean","varName":"Condition"},{"dataType":"java.lang.Object","varName":"TrueValue"},{"dataType":"java.lang.Object","varName":"FalseValue"}],"name":"If","comment":"Returns the second argument if the first argument is true, otherwise the third argument is returned. All 3 arguments\n will be evaluated in all cases. This does NOT have a short-circuit which prevents evaluation of the third argument if the first is true.\n\nParameters:\nCondition- the value to test to see if it is true\nTrue- the value to return if the Condition is true\nFalse- the value to return if the Condition is not true\nReturns:\nthe appropriate value based on the condition\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.io.File","varName":"FilePath"}],"name":"GetFileNameFromPath","comment":"Returns the file name from the specified file path; this just returns the filename without any path information.\n\nParameters:\nFilePath- the filepath to get the filename for\nReturns:\nthe filename from the specified file path\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.io.File","varName":"FilePath"}],"name":"GetAbsoluteFilePath","comment":"Returns the full path name from the specified file path..\n\nParameters:\nFilePath- the filepath to get the full path from\nReturns:\nthe full path from the specified file path\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"FilePath"}],"name":"GetFileExtensionFromPath","comment":"Returns the file name extension from the specified file path (not including the '.')\n\nParameters:\nFilePath- the file path to get the extension of\nReturns:\nthe extension from the specified file path\nSince:\n6.4\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"long","varName":"Time"}],"name":"Wait","comment":"Causes the currently executing thread to sleep for the specified amount of time in milliseconds.\n\nParameters:\nTime- the amount of time to sleep this thread for in milliseconds\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.Number","varName":"Value1"},{"dataType":"java.lang.Number","varName":"Value2"}],"name":"Max","comment":"Returns the maximum of the two arguments; the type of the returned argument will be the same as the highest precision argument\n\nParameters:\nValue1- one of the values\nValue2- the other value\nReturns:\nthe maximum of the passed in values\n\n\n\n","returnType":"java.lang.Number"},{"args":[{"dataType":"java.lang.Number","varName":"Value1"},{"dataType":"java.lang.Number","varName":"Value2"}],"name":"Min","comment":"Returns the minimum of the two arguments; the type of the returned argument will be the same as the highest precision argument\n\nParameters:\nValue1- one of the values\nValue2- the other value\nReturns:\nthe minimum of the passed in values\n\n\n\n","returnType":"java.lang.Number"},{"args":[{"dataType":"java.lang.String","varName":"CommandString"},{"dataType":"java.lang.Object","varName":"Arguments"},{"dataType":"java.io.File","varName":"WorkingDirectory"},{"dataType":"boolean","varName":"ConsoleApp"}],"name":"ExecuteProcess","comment":"Executes a new process on the system\n\nParameters:\nCommandString- the command to execute (i.e. C:\\windows\\notepad.exe or ifconfig)\nArguments- the arguments to pass to the command that is executed, if it's a java.util.Collection or array then each element is an argument, otherwise it is considered a single argument; use null for no arguments\nWorkingDirectory- the directory to execute the process from or null to execute it from the current working directory\nConsoleApp- if true then SageTV will consume the stdout and stderr output from the process that is launched; if false it will not\nReturns:\nthe java.lang.Process object that represents the launched process\n\n\n\n","returnType":"java.lang.Process"},{"args":[{"dataType":"java.lang.String","varName":"CommandString"},{"dataType":"java.lang.Object","varName":"Arguments"},{"dataType":"java.io.File","varName":"WorkingDirectory"},{"dataType":"boolean","varName":"ReturnStdout"},{"dataType":"boolean","varName":"ReturnStderr"}],"name":"ExecuteProcessReturnOutput","comment":"Executes a new process on the system and returns as a String the output of the process\n\nParameters:\nCommandString- the command to execute (i.e. C:\\windows\\notepad.exe or ifconfig)\nArguments- the arguments to pass to the command that is executed, if it's a java.util.Collection or array then each element is an argument, otherwise it is considered a single argument; use null for no arguments\nWorkingDirectory- the directory to execute the process from or null to execute it from the current working directory\nReturnStdout- if true then SageTV will return the data from stdout as part of the return value\nReturnStderr- if true then SageTV will return the data from stderr as part of the return value\nReturns:\na String which contains the data from stdout/stderr (depending upon the arguments), null if there was a failure\nSince:\n6.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.io.File","varName":"FilePath"}],"name":"LoadImageFile","comment":"Returns a MetaImage object that refers to the specified image file. Used for passing images into Widgets.\n\nParameters:\nFilePath- the file path of the image to load\nReturns:\nthe loaded image object\n\n\n\n","returnType":"sage.MetaImage"},{"args":[{"dataType":"java.lang.Object","varName":"Resource"}],"name":"LoadImage","comment":"Returns a MetaImage object that refers to a specified image resource. This can be used to load images from URLs, JAR resources or the file system.It also has a secondary purpose where you can pass it a MetaImage and then it will load that image into\n the current image cache so it will render as fast as possible in the next drawing cycle. Good for preloading\n the next image in a slideshow. If a MetaImage is passed in; this call will not return until that image is loaded into the cache.\n\n\nParameters:\nResource- if this is a MetaImage then the image is loaded into the cache, otherwise its converted to a string and then a MetaImage is returned for that resource\nReturns:\nthe MetaImage that refers to the passed specified resource, if a MetaImage was passed in then the same object is returned\n\n\n\n","returnType":"sage.MetaImage"},{"args":[{"dataType":"sage.MetaImage","varName":"MetaImage"},{"dataType":"java.io.File","varName":"File"},{"dataType":"int","varName":"Width"},{"dataType":"int","varName":"Height"}],"name":"SaveImageToFile","comment":"Saves a MetaImage object to a file using the specified image size. The supported formats are JPG and PNG. The format is determined by the file extension, which must be either .jpg or .png.\n Use zero for the width and height to save it at the original image size.\n NOTE: This call is a NOOP on embedded platforms\n\nParameters:\nMetaImage- the MetaImage object that should be saved to the specified file\nFile- the file to save the image to\nWidth- the width to use in the saved image file\nHeight- the height to use in the saved image file\nReturns:\nreturns true on success or false on failure\nSince:\n7.1\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.MetaImage","varName":"MetaImage"}],"name":"GetMetaImageSourceFile","comment":"Returns the file path that a MetaImage was loaded from. Since not all MetaImage objects come from file paths, this will return null for any non-file based images.\n\nParameters:\nMetaImage- the MetaImage to get the file path for\nReturns:\nthe file path for the specified MetaImage, or null if it wasn't loaded from a file path\nSince:\n7.1\n\n\n\n","returnType":"java.io.File"},{"args":[{"dataType":"java.lang.Object","varName":"MetaImage"}],"name":"IsMetaImage","comment":"Returns true if the argument is a MetaImage object.\n\nParameters:\nMetaImage- the Object to test\nReturns:\ntrue if the argument is a MetaImage object, false otherwise\nSince:\n7.1\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.Object","varName":"Resource"}],"name":"GetImageAsBufferedImage","comment":"Returns a java.awt.image.BufferedImage object. This can be used to load images from URLs, JAR resources or the file system.\n\n\nParameters:\nResource- if this is a MetaImage then the buffered image is taken from that, otherwise its converted to a string and then the image is loaded from that path\nReturns:\na newly allocated java.awt.image.BufferedImage corresponding to the specified resource\nSince:\n4.1\n\n\n\n","returnType":"java.awt.image.BufferedImage"},{"args":[{"dataType":"java.lang.Object","varName":"Resource"},{"dataType":"int","varName":"Width"},{"dataType":"int","varName":"Height"}],"name":"GetScaledImageAsBufferedImage","comment":"Returns a java.awt.image.BufferedImage object. This can be used to load images from URLs, JAR resources or the file system.\n The size of the returned image will match the passed in arguments.\n\nParameters:\nResource- if this is a MetaImage then the buffered image is taken from that, otherwise its converted to a string and then the image is loaded from that path\nWidth- the desired width of the returned image\nHeight- the desired height of the returned image\nReturns:\na newly allocated java.awt.image.BufferedImage corresponding to the specified resource\nSince:\n4.1\n\n\n\n","returnType":"java.awt.image.BufferedImage"},{"args":[{"dataType":"java.lang.String","varName":"ResPath"}],"name":"UnloadImage","comment":"Unloads the specified image resource from memory. NOTE: This does not care about the internal reference\n count in SageTV for this image which could mean bad things will happen if you use this on images other than ones\n that you are explicitly managing.\n\nParameters:\nResPath- the path to the image resource, can be a url, JAR resource path or a file path\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.Object","varName":"Image"}],"name":"IsImageLoaded","comment":"Checks whether the passed in MetaImage (from an API call that returns MetaImage), MediaFile, File, URL or Album is loaded\n into system memory or into the VRAM cache of the corresponding UI making the call.\n\nParameters:\nImage- the MetaImage to check, or a MediaFile or an Album or a java.io.File or a java.net.URL\nReturns:\ntrue if the MetaImage (or the MetaImage that would correspond to the passed in resource) is loaded into system memory or the calling UI's VRAM, false otherwise\nSince:\n6.1\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.Object","varName":"Image"}],"name":"DidImageLoadFail","comment":"Checks whether the passed in MetaImage (from an API call that returns MetaImage), MediaFile, File, URL or Album failed\n to load successfully. This will return false if the image load has not been attempted yet.\n\nParameters:\nImage- the MetaImage to check, or a MediaFile or an Album or a java.io.File or a java.net.URL\nReturns:\ntrue if the MetaImage (or the MetaImage that would correspond to the passed in resource) has already tried to load; and the load failed\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.io.File","varName":"DirectoryPath"}],"name":"DirectoryListing","comment":"Returns a list of the files in the specified directory\n\nParameters:\nDirectoryPath- the directory to list the files in\nReturns:\na list of files in the specified directory\n\n\n\n","returnType":"java.io.File[]"},{"args":[{"dataType":"java.io.File","varName":"DirectoryPath"},{"dataType":"java.lang.String","varName":"MediaMask"}],"name":"DirectoryListing","comment":"Returns a list of the files in the specified directory. Only directories and file matching the media mask will be returned.\n\nParameters:\nDirectoryPath- the directory to list the files in\nMediaMask- the types of content allowed, any combination of 'M'=Music, 'P'=Pictures or 'V'=Videos\nReturns:\na list of folders and matching files in the specified directory\nSince:\n7.0\n\n\n\n","returnType":"java.io.File[]"},{"args":[{"dataType":"java.io.File","varName":"DirectoryPath"}],"name":"LocalDirectoryListing","comment":"Returns a list of the files in the specified directory on the local filesystem\n\nParameters:\nDirectoryPath- the directory to list the files in\nReturns:\na list of files in the specified directory\nSince:\n6.4\n\n\n\n","returnType":"java.io.File[]"},{"args":[],"name":"GetFileSystemRoots","comment":"Returns the root directories of the file systems (on Linux this'll just be / and on Windows it'll be the drive letters)\n\nReturns:\nthe root directories of the file systems\n\n\n\n","returnType":"java.io.File[]"},{"args":[],"name":"GetLocalFileSystemRoots","comment":"Returns the root directories of the local file systems  (on Linux this'll just be / and on Windows it'll be the drive letters)\n\nReturns:\nthe root directories of the local file systems\nSince:\n6.4\n\n\n\n","returnType":"java.io.File[]"},{"args":[{"dataType":"java.lang.String","varName":"FullString"},{"dataType":"java.lang.String","varName":"MatchString"}],"name":"StringEndsWith","comment":"Returns true if the first string ends with the second, uses java.lang.String.endsWith\n\nParameters:\nFullString- the string to search in\nMatchString- the string to search for\nReturns:\ntrue if FullString ends with MatchString, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"FullString"},{"dataType":"java.lang.String","varName":"MatchString"}],"name":"StringStartsWith","comment":"Returns true if the first string starts with the second, uses java.lang.String.startsWith\n\nParameters:\nFullString- the string to search in\nMatchString- the string to search for\nReturns:\ntrue if FullString starts with MatchString, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"FullString"},{"dataType":"java.lang.String","varName":"MatchString"}],"name":"StringIndexOf","comment":"Returns the index of the second string within the first string, -1 if it is not found. Uses java.lang.String.indexOf\n\nParameters:\nFullString- the string to search in\nMatchString- the string to search for\nReturns:\nthe first 0-based index in FullString that MatchString occurs at or -1 if it is not found\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.String","varName":"FullString"},{"dataType":"java.lang.String","varName":"MatchString"}],"name":"StringLastIndexOf","comment":"Returns the last index of the second string within the first string, -1 if it is not found. Uses java.lang.String.lastIndexOf\n\nParameters:\nFullString- the string to search in\nMatchString- the string to search for\nReturns:\nthe last 0-based index in FullString that MatchString occurs at or -1 if it is not found\n\n\n\n","returnType":"int"},{"args":[],"name":"GetWorkingDirectory","comment":"Returns the current working directory for the application (if this is a client; it'll be the working directory of the server)\n\nReturns:\nthe current working directory for the application\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"HasLocalFilesystem","comment":"Returns true if this client has a local file system that can be accessed.\n\nReturns:\ntrue if this client has a local file system that can be accessed\nSince:\n6.4\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"Directory"},{"dataType":"java.lang.String","varName":"File"}],"name":"CreateFilePath","comment":"Creates a new file object for the specified directory and file name or relative path\n\nParameters:\nDirectory- the directory name\nFile- the file within the directory or relative file path\nReturns:\na new file object for the specified directory and file name or relative path\n\n\n\n","returnType":"java.io.File"},{"args":[{"dataType":"java.lang.String","varName":"FilePath"}],"name":"IsFilePathHidden","comment":"Returns true if the specified file path is marked as a hidden file\n\nParameters:\nFilePath- the file path to test\nReturns:\ntrue if the specified file path is marked as a hidden file\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"FilePath"}],"name":"IsLocalFilePathHidden","comment":"Returns true if the specified local file path is marked as a hidden file\n\nParameters:\nFilePath- the file path to test\nReturns:\ntrue if the specified local file path is marked as a hidden file\nSince:\n6.4\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"FilePath"}],"name":"IsFilePath","comment":"Returns true if the specified file path denotes a file that exists and is not a directory\n\nParameters:\nFilePath- the file path to test\nReturns:\ntrue if the specified file path denotes a file that exists and is not a directory\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"FilePath"}],"name":"IsLocalFilePath","comment":"Returns true if the specified local file path denotes a file that exists and is not a directory\n\nParameters:\nFilePath- the file path to test\nReturns:\ntrue if the specified local file path denotes a file that exists and is not a directory\nSince:\n6.4\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"FilePath"}],"name":"IsDirectoryPath","comment":"Returns true if the specified path denotes a directory that exists\n\nParameters:\nFilePath- the file path to test\nReturns:\ntrue if the specified path denotes a directory that exists\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"FilePath"}],"name":"IsLocalDirectoryPath","comment":"Returns true if the specified local path denotes a directory that exists\n\nParameters:\nFilePath- the file path to test\nReturns:\ntrue if the specified local path denotes a directory that exists\nSince:\n6.4\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.io.File","varName":"DirectoryPath"}],"name":"CreateNewDirectory","comment":"Creates a new directory and any parent directories for the specified directory path.\n\nParameters:\nDirectoryPath- the directory to create\nReturns:\ntrue if successful, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.io.File","varName":"DirectoryPath"}],"name":"CreateNewLocalDirectory","comment":"Creates a new local directory and any parent directories for the specified directory path.\n\nParameters:\nDirectoryPath- the directory to create\nReturns:\ntrue if successful, false otherwise\nSince:\n6.4\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.io.File","varName":"FilePath"}],"name":"GetPathParentDirectory","comment":"Returns the parent directory for the specified file path\n\nParameters:\nFilePath- the file path to get the parent directory for\nReturns:\nthe parent directory for the specified file path\n\n\n\n","returnType":"java.io.File"},{"args":[{"dataType":"java.io.File","varName":"FilePath"}],"name":"GetPathLastModifiedTime","comment":"Returns the last modified time of the specified file path\n\nParameters:\nFilePath- the file path\nReturns:\nthe last modified time of the specified file path\n\n\n\n","returnType":"long"},{"args":[{"dataType":"java.io.File","varName":"FilePath"}],"name":"GetLocalPathLastModifiedTime","comment":"Returns the last modified time of the specified local file path\n\nParameters:\nFilePath- the file path\nReturns:\nthe last modified time of the specified local file path\nSince:\n6.4\n\n\n\n","returnType":"long"},{"args":[{"dataType":"java.io.File","varName":"FilePath"}],"name":"GetFilePathSize","comment":"Returns the size in bytes of the specified file path\n\nParameters:\nFilePath- the file path\nReturns:\nthe size in bytes of the specified file path\nSince:\n6.4\n\n\n\n","returnType":"long"},{"args":[{"dataType":"java.io.File","varName":"FilePath"}],"name":"GetLocalFilePathSize","comment":"Returns the size in bytes of the specified local file path\n\nParameters:\nFilePath- the file path\nReturns:\nthe size in bytes of the specified local file path\nSince:\n6.4\n\n\n\n","returnType":"long"},{"args":[{"dataType":"java.io.File","varName":"FilePath"}],"name":"DeleteFilePath","comment":"Deletes the file/directory at the corresponding file path (directories must be empty first)\n\nParameters:\nFilePath- the file path\nReturns:\ntrue if successful, false otherwise\nSince:\n6.3.9\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.io.File","varName":"FilePath"}],"name":"DeleteLocalFilePath","comment":"Deletes the file/directory at the corresponding local file path (directories must be empty first)\n\nParameters:\nFilePath- the file path\nReturns:\ntrue if successful, false otherwise\nSince:\n6.4\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.io.File","varName":"OriginalFilePath"},{"dataType":"java.io.File","varName":"NewFilePath"}],"name":"RenameFilePath","comment":"Renames a file/directory\n\nParameters:\nOriginalFilePath- the file path to rename\nNewFilePath- the new name for the file path\nReturns:\ntrue if successful, false otherwise\nSince:\n6.3.9\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.util.Map","varName":"Grouping"},{"dataType":"java.lang.Object","varName":"Key"},{"dataType":"java.lang.Object","varName":"Value"}],"name":"AddToGrouping","comment":"Adds the specified value into the grouping using the specified key. Useful on results fromGroupByMethod()\nThis works using a Map implementation that has Collections as the values and objects as the keys. So if two objects have the same key\n they will both still exist in the map by being in the Collection that corresponds to their key.\n\nParameters:\nGrouping- the grouping (Map) to add the new key/value pair to\nKey- the key to use to store the value in the map\nValue- the value to store\nReturns:\ntrue is always returned\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"Hostname"},{"dataType":"int","varName":"Port"},{"dataType":"java.lang.Object","varName":"Command"}],"name":"SendNetworkCommand","comment":"Opens a TCP/IP socket connection to the specified hostname on the specified port and then sends the specified command. After that\n the socket is closed.\n\nParameters:\nHostname- the hostname to connect to\nPort- the port to connect on\nCommand- either a byte[] or a String to send across the socket\nReturns:\ntrue if successful, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.awt.image.BufferedImage","varName":"JavaBufferedImage"},{"dataType":"int","varName":"Width"},{"dataType":"int","varName":"Height"},{"dataType":"boolean","varName":"Alpha"}],"name":"ScaleBufferedImage","comment":"Scales a java.awt.image.BufferedImage object using optimized techniques\n\nParameters:\nJavaBufferedImage- the BufferedImage object that is the source for the scaling\nWidth- the width of the target image\nHeight- the height of the target image\nAlpha- true if the scaling should be done in ARGB, false if it should be done in RGB\nReturns:\na new BufferedImage that is a scaled version of the specified image\n\n\n\n","returnType":"java.awt.image.BufferedImage"},{"args":[{"dataType":"java.lang.String","varName":"EnglishText"}],"name":"LocalizeString","comment":"Returns a localized version of the specified string. Uses SageTV's core translation properties to do this.\n\nParameters:\nEnglishText- the English string to translate from\nReturns:\nthe translated version of the specified string in the currently configured language\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"GetLocalIPAddress","comment":"Returns the IP address of the machine\n\nReturns:\nthe IP address of the machine\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"Filename"}],"name":"IsImportableFileType","comment":"Returns true if the specified file path has a file extension which would be imported by SageTV into its library.\n\nParameters:\nFilename- the file path to test\nReturns:\ntrue if the specified file path has a file extension which would be imported by SageTV into its library, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[],"name":"GetSubnetMask","comment":"Returns the subnet mask for the currently configured network adapter.\n NOTE: This is only valid on embedded platforms.\n\nReturns:\nthe subnet mask for the currently configured network adapter\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"GetGatewayAddress","comment":"Returns the gateway address for the currently configured network adapter.\n NOTE: This is only valid on embedded platforms.\n\nReturns:\nthe gateway address for the currently configured network adapter\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"GetDNSAddress","comment":"Returns the DNS address for the currently configured network adapter.\n NOTE: This is only valid on embedded platforms.\n\nReturns:\nthe DNS address for the currently configured network adapter\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"Filename"}],"name":"GuessMajorFileType","comment":"Guesses what media type the specified filename corresponds to. It does this based on the configuration \n for the import library file types.\n\nParameters:\nFilename- the file path to test\nReturns:\n\"M\", \"V\", \"P\", \"B\" or \"D\" for a music, video, picture, BluRay or DVD file respectively; if it can't tell it returns \"V\"\nSince:\n6.4\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"LocatorID"}],"name":"TestPlaceshifterConnectivity","comment":"Connects to the SageTV Locator server and submits the specified Locator ID for a 'ping'. The Locator server will\n then attempt to connect to the IP for that GUID and report back the status.  The return code is an integer as follows:\n -1 - Unable to connect to the locator server (internet connection is down or locator server is down)\n 0 - The locator server did not have an IP address registered for this GUID\n 1 - The locator server could not connect to the IP address registered for the GUID\n 2 - The locator server can connect to the IP address registered for the GUID, but not to the Placeshifter port\n 3 - The locator server can connect to the IP address/port for the GUID, but the server that is there is not the Placeshifter\n 10 - The ping was successful. External connections to the Placeshifter should work correctly.\n\nParameters:\nLocatorID- the GUID that should be used for the 'ping'\nReturns:\nan integer status code as described above.\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.String","varName":"LocatorID"}],"name":"LookupIPForLocatorID","comment":"Connects to the SageTV Locator server and submits the specified Locator ID for a IP lookup. The Locator server will\n then lookup the IP for that GUID and report it back.\n\nParameters:\nLocatorID- the GUID that should be used for the lookup\nReturns:\nan String of IP address:port or null if the lookup failed\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.Object","varName":"Value"}],"name":"CreateArray","comment":"Creates a java.lang.Object array and initializes each element to the passed in argument.\n NOTE: This method takes a variable number of arguments, and the length of the returned array will be\n equal to the number of arguments. i.e. calling CreateArray(1, 2) returns an Object array with elements 1 and 2 in it\n\nParameters:\nValue- a value for an element of the array (multiple arguments allowed)\nReturns:\nthe newly allocated Object array with its elements set to the arguments\nSince:\n6.0\n\n\n\n","returnType":"java.lang.Object[]"},{"args":[{"dataType":"float","varName":"RelativeX"},{"dataType":"float","varName":"RelativeY"}],"name":"SetScrollPosition","comment":"Scrolls the closest pageable UI parent component (or sibling of a parent) to the specified position.\n\nParameters:\nRelativeX- the X position to scroll to between 0.0 and 1.0 (use a negative number to not change the X position)\nRelativeY- the Y position to scroll to between 0.0 and 1.0 (use a negative number to not change the Y position)\nSince:\n6.2\n\n\n\n","returnType":"void"},{"args":[],"name":"ClearMenuCache","comment":"Clears the cache that links Widgets to the in memory-menu representations for this UI. This also clears the back/forward history\n to remove any references contained in there as well.\n\nSince:\n6.2\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"WidgetName"},{"dataType":"java.lang.String","varName":"LayerName"},{"dataType":"java.lang.String","varName":"AnimationName"},{"dataType":"long","varName":"Duration"}],"name":"Animate","comment":"Starts an animation for the specified Widget in the specified Layer. If the Widget name ends with a '*' then all Widgets\n that match will be animated; otherwise only the first visible Widget matching the name will be animated. The Widget must\n also have the specified Layer as it's animation layer (i.e. if the Layer is Foreground, then the corresponding Widget\n should have an Animation property of LayerForeground). The type of animation is controlled by AnimtionName. There's\n also suffixes that can be appened to the AnimationName that effect how the timescale for the animation progresses.\n There's also other suffixes that can be used to specify other options for the animations.Valid strings for the AnimationName are:\nFullSlideDownOut - slides down off the bottom of the screen\nFullSlideDownIn - slides down in from the top of the screen\nFullSlideUpOut - slides up off the top of the screen\nFullSlideUpIn - slides up in from the bottom of the screen\nFullSlideLeftOut - slides off to the left of the screen\nFullSlideLeftIn - slides in from the left of the screen\nFullSlideRightOut - slides off the right of the screen\nFullSlideRightIn - slides in from the right of the screen\nSlideDownOut - slides down off the bottom of its parent component\nSlideDownIn - slides down in from the top of its parent component\nSlideUpOut - slides up off the top of its parent component\nSlideUpIn - slides up in from the bottom of its parent component\nSlideLeftOut - slides off to the left of its parent component\nSlideLeftIn - slides in from the left of its parent component\nSlideRightOut - slides off the right of its parent component\nSlideRightIn - slides in from the right of its parent component\nFadeOut - fades out\nFadeIn - fades in\nSmooth - smoothly transitions from one position & size to another; the destination image is used for the animation\nMorph - smoothly transitions from one position & size to another; the image fades between the source and the destination\nZoomOut - shrinks the size down to nothing from its source size\nZoomIn - grows the size from nothing to its destination size\nHZoomOut - shrinks the size down to nothing horitonzatlly from its source sizeHZoomIn - grows the size from nothing horitonzatlly to its destination size\nVZoomOut - shrinks the size down to nothing vertically from its source sizeVZoomIn - grows the size from nothing vertically to its destination size\n\nTimeline modifications for animations affect how the timescale progresses. For out animations, they are eased out if non-linear. \n For in animations, they are eased in if non-linear. For animations that are neither; the timescale modification occurs at both ends.\n Bounce only works properly for 'in' animations.\nValid suffixes for any of the animations are (default is Quadratic):\nLinear - animation follows a smooth timeline (first order)\nQuadratic - animation follows a quadratic timeline (second order)\nCubic - animation follows a cubic timeline (third order)\nBounce - animation follows a timeline that looks like it 'bounces' in\n\nAdditional options for the animation may also be specified by combining additional suffixes to the\n AnimationName. The following is a list of valid option suffixes.\nFade - applies an additional fade in/out effect to the animation (i.e. ZoomOutFade)\nNorth - for Zoom animations will center the zoom around the top of the component (i.e. ZoomInNorth)\nWest - for Zoom animations will center the zoom around the left of the component\nSouth - for Zoom animations will center the zoom around the bottom of the component\nEast - for Zoom animations will center the zoom around the right of the component\n\nBehind - for Out animations will cause it to be rendered behind the other layers instead of on top as Out animations usually areUnclipped - for Slide animations will cause the same motion to occur but without clipping the area when drawnUnease - for In or Out animations it will reverse the 'easing' direction so you can slide in & out the same panel w/ out overlapYou may combine the directional suffixes to get an additional four directions (i.e. ZoomOutNorthEast). And this\n can also be combined with the timeline suffixes as well, or even Fade (i.e. ZoomInQuadraticSouthWestFade)For delaying the start of an animation; see hereAnimateDelayed()\n\n\n\nParameters:\nWidgetName- the name of the Widget that should be animated\nLayerName- the name of the Layer the animated Widget must be in\nAnimationName- the name of the animation to perform\nDuration- the time in milliseconds that it should take for the animation to complete\nReturns:\nreturns true if a matching Widget was found to perform the animation on; false otherwise\nSince:\n6.2\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"WidgetName"},{"dataType":"java.lang.String","varName":"LayerName"},{"dataType":"java.lang.String","varName":"VarName"},{"dataType":"java.lang.Object","varName":"VarValue"},{"dataType":"java.lang.String","varName":"AnimationName"},{"dataType":"long","varName":"Duration"},{"dataType":"long","varName":"StartDelay"},{"dataType":"boolean","varName":"Interruptable"}],"name":"AnimateVariable","comment":"For more details on Animations see here:Animate()\nIn addition to what's specified in the Animate API call; this also offers restricting of an \n Animation by a variable name and value. Usage of the '*' suffix on the WidgetName is allowed.\n\nParameters:\nWidgetName- the name of the Widget that should be animated\nLayerName- the name of the Layer the animated Widget must be in\nVarName- the name of the variable that must match for the Widget to be animated\nVarValue- the value of the variable to match\nAnimationName- the name of the animation to perform\nDuration- the time in milliseconds that it should take for the animation to complete\nStartDelay- the delay in milliseconds before this animation should start\nInterruptable- true if the animation can be interrupted to render the next UI update; false if it must complete (this parameter is optional and defaults to false)\nReturns:\nreturns true if a matching Widget was found to perform the animation on; false otherwise\nSince:\n6.3\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"SourceWidgetName"},{"dataType":"java.lang.String","varName":"TargetWidgetName"},{"dataType":"java.lang.String","varName":"LayerName"},{"dataType":"java.lang.String","varName":"AnimationName"},{"dataType":"long","varName":"Duration"},{"dataType":"long","varName":"StartDelay"},{"dataType":"boolean","varName":"Interruptable"}],"name":"AnimateTransition","comment":"Performs an Animation between two different Widgets. Normally animations are performed between two different states for a single Widget.\n This API call allows an animation to occur between two different Widgets and will usually be used with a 'Morph' AnimationName. This\n may only target a single Widget; so the '*' suffix is not used on the WidgetNames in this call.For more details on Animations see here:Animate()\n\n\nParameters:\nSourceWidgetName- the name of the Widget to use as the source for this animation\nTargetWidgetName- the name of the Widget to use as the target (destination) for this animation\nLayerName- the name of the Layer the animated Widget must be in\nAnimationName- the name of the animation to perform\nDuration- the time in milliseconds that it should take for the animation to complete\nStartDelay- the delay in milliseconds before this animation should start\nInterruptable- true if the animation can be interrupted to render the next UI update; false if it must complete (this parameter is optional and defaults to false)\nReturns:\nreturns true if a matching Widget was found to perform the animation on; false otherwise\nSince:\n6.3\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"WidgetName"},{"dataType":"java.lang.String","varName":"LayerName"},{"dataType":"java.lang.String","varName":"AnimationName"},{"dataType":"long","varName":"Duration"},{"dataType":"long","varName":"StartDelay"},{"dataType":"boolean","varName":"Interruptable"}],"name":"AnimateDelayed","comment":"This is the same as the Animate API call; but it allows specifiying a delay that should occur before the animation actually starts. \n Useful for creating sequences of animation effects.\n\n For more details see here:Animate()\n\n\nParameters:\nWidgetName- the name of the Widget that should be animated\nLayerName- the name of the Layer the animated Widget must be in\nAnimationName- the name of the animation to perform\nDuration- the time in milliseconds that it should take for the animation to complete\nStartDelay- the delay in milliseconds before this animation should start\nInterruptable- true if the animation can be interrupted to render the next UI update; false if it must complete (this parameter is optional and defaults to false)\nReturns:\nreturns true if a matching Widget was found to perform the animation on; false otherwise\nSince:\n6.2\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"boolean","varName":"Enabled"}],"name":"SetCoreAnimationsEnabled","comment":"Sets whether or not animation support is enabled (either layered or Effect based animations; depending upon the STV configuration)\n\nParameters:\nEnabled- true to enable core animations; false otherwise\nSince:\n6.2\n\n\n\n","returnType":"void"},{"args":[],"name":"AreCoreAnimationsEnabled","comment":"Returns whether or not animation support is enabled (either layered or Effect based animations; depending upon the STV configuration)\n\nReturns:\ntrue if core animations are enabled; false otherwise\nSince:\n6.2\n\n\n\n","returnType":"boolean"},{"args":[],"name":"AreCoreAnimationsSupported","comment":"Returns whether or not animation support is possible in the current UI environment. Certain clients (like the MVP) do not support animations;\n and animations over remote connections are also disabled due to performance reasons.\n\nReturns:\ntrue if core animations are supported; false otherwise\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[],"name":"GetUIRefreshLock","comment":"Acquires the lock for this user interface system to prevent other updates from occuring. This can be used\n at the start of an animation sequence before the refresh call is made to ensure that the animations will \n all occur on the same refresh cycle. The return value indicates if the lock was acquired. Do NOT release the lock\n unless you acquired the lock. This lock is re-entrant and is thread-based. You must release it from the same\n thread that acquired the lock. If this method return false, then you already have the lock.\n IMPORTANT: It is of CRITICAL IMPORTANCE that ReleaseUIRefreshLock() is called after GetUIRefreshLock() if \n this method returns true or the user interface system will become completely locked up for this client. It's also\n important to not release the lock unless you acquired it.\n\nReturns:\ntrue if the lock was acquired (which means it MUST be released), false if it was not\nSince:\n6.4\n\n\n\n","returnType":"boolean"},{"args":[],"name":"ReleaseUIRefreshLock","comment":"Releases the lock for this user interface system to allow other updates to occur. This must ONLY be used\n after GetUIRefreshLock() was called and ONLY if GetUIRefreshLock() actually returned true. This must also be called\n from the same thread that called GetUIRefreshLock()\n\nSince:\n6.4\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.io.File","varName":"FilePath"}],"name":"CalculateMD5Sum","comment":"Calculates the MD5 Sum of a given file\n\nParameters:\nFilePath- the path to the file who's MD sum should be calculated\nReturns:\nthe MD5 sum of the specified file as a String, null if the file doesn't exist or there's an error reading it\nSince:\n6.3\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"ReloadNameserverCache","comment":"Reloads the name server cache. Should be used after reconfiguring the network adapter.\n NOTE: This is only valid on embedded platforms.\n\n\n\n\n","returnType":"void"},{"args":[],"name":"GetTimeSinceLastInput","comment":"Returns the amount of time in milliseconds since the last user input occurred for this UI (used for doing things while the user is idle)\n\nReturns:\nthe amount of time in milliseconds since the last user input occurred\nSince:\n6.6\n\n\n\n","returnType":"long"},{"args":[{"dataType":"java.io.File","varName":"FilePath"}],"name":"GetFileAsString","comment":"Opens the file at the specified path and reads the entire contents of it and returns it as a String.\n This will use the server's filesystem if executed on SageTVClient.\n\nParameters:\nFilePath- the file path\nReturns:\na String which represents the contents of the file; the emptry string if there was a failure\nSince:\n6.6\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"IsLocalRestartNeeded","comment":"Returns true if the local instance of SageTV needs to be restarted due to a plugin install/uninstall\n\nReturns:\ntrue if the local instance of SageTV needs to be restarted due to a plugin install/uninstall, false otherwise\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[],"name":"IsServerRestartNeeded","comment":"Returns true if the server instance of SageTV needs to be restarted due to a plugin install/uninstall\n\nReturns:\ntrue if the server instance of SageTV needs to be restarted due to a plugin install/uninstall, false otherwise\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[],"name":"Restart","comment":"Restarts the local instance of SageTV. Sometimes needed after a plugin install/uninstall. If you want to restart\n the local and server instance; then perform the restart on the server first. This is only supported on\n Windows and Linux currently. If this is called from a SageTVClient running on the same machine as the server, this will invoke\n a restart of the locally running server as well in order to ensure proper file upgrade synchronization.\n\nReturns:\ntrue if restarting is supported (Although the restart will likely complete and the method will never return), false otherwise (Mac OS X does not have restart support)\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[],"name":"ServerRestart","comment":"Restarts the server instance of SageTV. Sometimes needed after a plugin install/uninstall. If you want to restart\n the local and server instance; then perform the restart on the server first. This is only supported on\n Windows servers and Linux servers currently.\n\nReturns:\ntrue if restarting is supported (Although the restart will likely complete and the method will never return), false otherwise (Mac OS X server does not have restart support)\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"Hostname"}],"name":"QueryServerMacAddress","comment":"Gets the MAC address of the SageTV server at the specified hostname. This will only work if SageTV is running on that host.\n This call uses a 3 second timeout internally.\n\nParameters:\nHostname- the hostname/IP of the SageTV server\nReturns:\na String in the format 00:xx:xx:xx:xx:xx that represents the MAC of the server, or null if it fails\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"ScanWirelessAPs","comment":"Scans for wireless access points and returns the results as a map. The keys are the SSID names and the values are Security;Strength where\n Security will be WEP/WPA/None and strength will be an integer between 0 and 100\n NOTE: This is only valid on embedded platforms.\n\nReturns:\na Map describing the results of the access point scan\nSince:\n6.6\n\n\n\n","returnType":"java.util.Map"},{"args":[{"dataType":"java.lang.String","varName":"DrivePath"}],"name":"ReformatDeviceAtPathAsEXT3","comment":"Determines the device that is mounted at the specified path, and then repartitions it to have a single EXT3 partition and then\n formats that partition. WARNING: THIS WILL DESTROY ALL INFORMATION ON THE TARGET DEVICE AND REFORMAT IT\n NOTE: This is only valid on embedded platforms.\n\nParameters:\nDrivePath- the path string of a disk to reformat\nReturns:\nzero upon success, -1 if it is unable to find a device that corresponds to the requested path, -2 if it is unable to unmount that path, -3 if there was a problem re-partitioning or reformatting the drive, and -4 if there was a failure remounting the newly formatted drive\nSince:\n7.1\n\n\n\n","returnType":"int"}],"name":"Utility"},"Security":{"methods":[{"args":[],"name":"GetActiveSecurityProfile","comment":"Returns the name of the current security profile for the UI client making the API call.\n\nReturns:\nthe name of the current security profile for the UI client making the API call, returns null if there's no valid UI context for this call\nSince:\n7.1\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"GetDefaultSecurityProfile","comment":"Returns the name of the default security profile to use when a new client connects that does not have an associated security profile.\n\nReturns:\nthe name of the default security profile to use when a new client connects that does not have an associated security profile\nSince:\n7.1\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"Profile"}],"name":"SetActiveSecurityProfile","comment":"Sets the name of the current security profile for the UI client making the API call.\n\nParameters:\nProfile- the name of the security profile\nReturns:\ntrue if the call succeeded; false if the specified profile does not exist or there is no valid UI context for this call\nSince:\n7.1\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"Profile"}],"name":"SetDefaultSecurityProfile","comment":"Sets the name of the default security profile to use when a new client connects that does not have an associated security profile.\n\nParameters:\nProfile- the name of the default security profile to use when a new client connects that does not have an associated security profile\nReturns:\ntrue if the call succeeds, false if the specified profile does not exist\nSince:\n7.1\n\n\n\n","returnType":"boolean"},{"args":[],"name":"GetSecurityProfiles","comment":"Returns the names of the different security profiles.\n\nReturns:\nthe names of the different security profiles\nSince:\n7.1\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"Profile"}],"name":"AddSecurityProfile","comment":"Adds a new security profile with the specified name. Unless this profile existed before; all permissions will default to false. If the\n profile existed before; it's old settings will be the initial settings for this new profile.\n\nParameters:\nProfile- the name for the new security profile\nReturns:\ntrue if this was added as a new security profile, false otherwise (it'll only fail if the name is already in use)\nSince:\n7.1\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"Profile"}],"name":"RemoveSecurityProfile","comment":"Removes the security profile with the specified name. You cannot remove the Administrator profile. If a user session is currently\n active under the profile being removed; it will continue to remain active under that profile with the current permissions until that\n user session expires.\n\nParameters:\nProfile- the name for the security profile to remove\nReturns:\ntrue if this was removed as a security profile, false otherwise (it'll only fail if the name isn't in use or is Administrator)\nSince:\n7.1\n\n\n\n","returnType":"boolean"},{"args":[],"name":"GetPredefinedPermissions","comment":"Returns a list of all the predefined permission names. Plugins are free to define their own new permissions using any string they like;\n but those will not be returned from this API call.\n\nReturns:\na list of all the predefined permission names\nSince:\n7.1\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"Permission"},{"dataType":"java.lang.String","varName":"Profile"},{"dataType":"boolean","varName":"Allowed"}],"name":"SetPermission","comment":"Sets whether or not a permission is allowed under a specific security profile.\n\nParameters:\nPermission- the name of the permission to set\nProfile- the name of the security profile this permission applies to\nAllowed- true if the permission should be granted, false if it should be denied\nSince:\n7.1\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"Permission"},{"dataType":"java.lang.String","varName":"Profile"}],"name":"HasPermission","comment":"Returns true if the specified permission is allowed under the specified security profile. If this permission has not\n been explicitly set to false for that profile; this method will return true. The return value is undefined if the specified profile is invalid.\n\nParameters:\nPermission- the name of the permission\nProfile- the of the security profile\nReturns:\nfalse if the specified permission is denied under the specified profile, true otherwise\nSince:\n7.1\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"Permission"}],"name":"HasPermission","comment":"Returns true if the specified permission is allowed under the security profile active for the UI making this API call. If this permission has not\n been explicitly set to false for that profile; this method will return true.\n\nParameters:\nPermission- the name of the permission\nReturns:\nfalse if the specified permission is denied under the active security profile or if the current context has no security profile, true otherwise\nSince:\n7.1\n\n\n\n","returnType":"boolean"}],"name":"Security"},"AiringAPI":{"methods":[{"args":[{"dataType":"sage.Airing","varName":"Airing"},{"dataType":"java.lang.String","varName":"Name"}],"name":"SetRecordingName","comment":"Sets the name for this recording. For Timed Recordings this will effect the title & associated attributes.\n For ManualRecordings this will not have any side effects at all.\n\nParameters:\nAiring- the ManualRecord to set the name for\nName- the name to set\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetRecordingName","comment":"Gets the name for this recording that was set viaSetRecordingName(Airing, String)\n\n\nParameters:\nAiring- the ManualRecord to get the name for\nReturns:\nthe name of the ManualRecord or the empty string if the argument was not a manual record\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetChannel","comment":"Gets the Channel that this Airing is on\n\nParameters:\nAiring- the Airing object\nReturns:\nthe Channel that this Airing is on\n\n\n\n","returnType":"sage.Channel"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetAiringChannelName","comment":"Gets the name of the Channel that this Airing is on\n\nParameters:\nAiring- the Airing object\nReturns:\nthe name of the Channel that this Airing is on\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetAiringChannelNumber","comment":"Gets the channel number that this Airing is on\n\nParameters:\nAiring- the Airing object\nReturns:\nthe channel number that this Airing is on\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetAiringDuration","comment":"Gets the duration of this Airing in milliseconds\n\nParameters:\nAiring- the Airing object\nReturns:\nthe duration of this Airing in milliseconds\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetAiringStartTime","comment":"Gets the start time of this Airing. The time is in Java time units, which are milliseconds since Jan 1, 1970 GMT\n\nParameters:\nAiring- the Airing object\nReturns:\nthe start time of this Airing\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetAiringEndTime","comment":"Gets the end time of this Airing. The time is in Java time units, which are milliseconds since Jan 1, 1970 GMT\n\nParameters:\nAiring- the Airing object\nReturns:\nthe end time of this Airing\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetShow","comment":"Gets the Show object for this Airing which describes it in further detail (Show contains the title, actors, category, description, etc.)\n\nParameters:\nAiring- the Airing object\nReturns:\nthe Show object for this Airing\n\n\n\n","returnType":"sage.Show"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetAiringRatings","comment":"Gets the list of the field values which correspond to parental ratings control for this Airing\n\nParameters:\nAiring- the Airing object\nReturns:\nthe list of the field values which correspond to parental ratings control for this Airing\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetScheduleStartTime","comment":"Get the start time for an airing accounting for any adjustments made due to Manual Recording stop/start time adjustments or adjustments due to favorite padding.\n\nParameters:\nAiring- the Airing object\nReturns:\nthe scheduling end time of the Airing\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetScheduleEndTime","comment":"Get the end time for an airing accounting for any adjustments made due to Manual Recording \n stop/start time adjustments or adjustments due to favorite padding.\n\nParameters:\nAiring- the Airing object\nReturns:\nthe scheduling end time of the Airing\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetScheduleDuration","comment":"Get the duration for an airing accounting for any adjustments made due to Manual \n Recording stop/start time adjustments or adjustments due to favorite padding.\n\nParameters:\nAiring- the Airing object\nReturns:\nthe scheduling duration of the Airing\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetScheduleRecordingRecurrence","comment":"If this Airing is a time-based recording this will get a description of the recurrence frequency for its recording recurrence\n\nParameters:\nAiring- the Airing object\nReturns:\na description of the recurrence frequency for this Airing's recording recurrence, or the empty string if this is not recurring time-based recording\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"PrintAiringLong","comment":"Returns a lengthy string which is suitable for displaying information about this Airing. This contains nearly all the details of the Airing & its Show\n\nParameters:\nAiring- the Airing object\nReturns:\na lengthy string which is suitable for displaying information about this Airing\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"PrintAiringMedium","comment":"Returns a string which is suitable for displaying information about this Airing. This contains the Airing's channel & a short time string as well as the title & episode name or a short description\n\nParameters:\nAiring- the Airing object\nReturns:\na string which is suitable for displaying information about this Airing\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"PrintAiringShort","comment":"Returns a brief string which is suitable for displaying information about this Airing. This contains the Airing's channel & a short time string as well as the title\n\nParameters:\nAiring- the Airing object\nReturns:\na brief string which is suitable for displaying information about this Airing\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetAiringTitle","comment":"Gets the title of this Airing. This will be the same as the title of the Airing's Show\n\nParameters:\nAiring- the Airing object\nReturns:\nthe title of this Airing\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"IsWatched","comment":"Returns true if this Airing's content has been completely watched already. This may also return true if this Airing itself was not watched; but an Airing with the same content (as determined by SageTV's AI) was watched\n\nParameters:\nAiring- the Airing object\nReturns:\ntrue if this Airing's content has beeen watched completely before\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetWatchedDuration","comment":"Gets the duration of time of this Airing that has been watched already. This time is relative to the Airing itself; not real time.\n\nParameters:\nAiring- the Airing object\nReturns:\nthe duration of time of this Airing that has been watched already in milliseconds\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetWatchedStartTime","comment":"Gets the time the user started watching this Airing. This time is relative to the Airing itself; not real time.\n If this is the first time watching this Airing; then this will return the time the Airing started recording.\n If this Airing has been watched previously; then the minimum value for this will be the Airing start time.\n\nParameters:\nAiring- the Airing object\nReturns:\nthe time the user started watching this Airing\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetWatchedEndTime","comment":"Gets the time the user finished watching this Airing. This time is relative to the Airing itself; not real time.\n If this Airing is currently being watched, this will be the maximum of any prior watch end time and the\n current playback time in the Airing.\n\nParameters:\nAiring- the Airing object\nReturns:\nthe time the user finished watching this Airing\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetRealWatchedStartTime","comment":"Gets the time the user started watching this Airing, in real time.\n\nParameters:\nAiring- the Airing object\nReturns:\nthe time the user started watching this Airing in real time\nSince:\n6.4\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetRealWatchedEndTime","comment":"Gets the time the user finished watching this Airing, in real time.\n\nParameters:\nAiring- the Airing object\nReturns:\nthe time the user finished watching this Airing\nSince:\n6.4\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"SetWatched","comment":"Sets the watched flag for this Airing to true as if the user watched the show from start to finish\n\nParameters:\nAiring- the Airing object\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Airing","varName":"Airing"},{"dataType":"long","varName":"WatchedEndTime"},{"dataType":"long","varName":"RealStartTime"}],"name":"SetWatchedTimes","comment":"Updates the Watched information for this airing. The AiringEndTime should be an airing-relative time which indicates the time the\n user has watched the show up until. The new watched end time will be the maximum of this value and the current watched end time. The\n RealStartTime is the time (in real time) the user started watching this program at. Internally SageTV will set the start time of the watched\n data to be the minimum of the recording start time and the airing start time; and the 'real' end time to be the current time.\n\nParameters:\nAiring- the Airing object, there must be a corresponding MediaFile for this Airing\nWatchedEndTime- an airing-relative time which indicates the time the user has watched the show up until\nRealStartTime- the time (in real time) the user started watching this program at\nSince:\n7.0\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"ClearWatched","comment":"Clears the watched information for this Airing completely.\n\nParameters:\nAiring- the Airing object\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetLatestWatchedTime","comment":"Gets the time that viewing should resume from for this Airing if it is selected to view\n\nParameters:\nAiring- the Airing object\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"IsWatchedCompletely","comment":"Returns true if this Airing has been completely watched already. This is different thenIsWatched()\n\n\nParameters:\nAiring- the Airing object\nReturns:\ntrue if this Airing has beeen watched completely\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"IsDontLike","comment":"Returns true if this Airing has been set as content the user \"Doesn't Like\"\n\nParameters:\nAiring- the Airing object\nReturns:\ntrue if this Airing has been set as content the user \"Doesn't Like\"\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"SetDontLike","comment":"Called to indicate that the content in this Airing is \"Not Liked\" by the user\n\nParameters:\nAiring- the Airing object\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"ClearDontLike","comment":"Called to cancel the indication that the content in this Airing is \"Not Liked\" by the user\n\nParameters:\nAiring- the Airing object\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"IsManualRecord","comment":"Returns true if this Airing has been selected by the user to manually recordRecord()\n\n\nParameters:\nAiring- the Airing object\nReturns:\ntrue if this Airing has been selected by the user to manually recordRecord()\n\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"IsNotManualOrFavorite","comment":"Returns true if this Airing has NOT been selected by the user to manually recordRecord()\nand\n is also NOT a Favorite (i.e. IsFavorite and IsManualRecord both return false)\n\nParameters:\nAiring- the Airing object\nReturns:\ntrue if this Airing is not a ManualRecord or a Favorite\nSince:\n6.2\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"IsAiringHDTV","comment":"Returns true if this Airing is in HDTV\n\nParameters:\nAiring- the Airing object\nReturns:\ntrue if this Airing is in HDTV, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetTrackNumber","comment":"Returns the track number for the Airing if it's from a Music Album. With music; each song (file) corresponds to an airing.\n\nParameters:\nAiring- the Airing object\nReturns:\nthe track number for the Airing if it's from a Music Album, 0 otherwise\n\n\n\n","returnType":"int"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetRecordingQuality","comment":"Returns the recording quality that this Airing has been specifically set to record at. This is only valid for user selected manual recordingsRecord()\n\n\nParameters:\nAiring- the Airing object\nReturns:\nthe recording quality name that this Airing has been specifically set to record at; if no quality has been set it returns the empty string\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Airing","varName":"Airing"},{"dataType":"java.lang.String","varName":"Quality"}],"name":"SetRecordingQuality","comment":"Sets the recording quality for this Airing if it has been selected by the user as a manual record\n\nParameters:\nAiring- the Airing object\nQuality- the name of the recording quality\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"IsFavorite","comment":"Returns true if this Airing matches one of the Favorites the user has setup\n\nParameters:\nAiring- the Airing object\nReturns:\ntrue if this Airing matches one of the Favorites the user has setup\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Airing","varName":"Airing"},{"dataType":"long","varName":"StartTime"},{"dataType":"long","varName":"StopTime"}],"name":"SetRecordingTimes","comment":"Modifies or creates a time-based recording that is associated with this Airing. This is also a type of Manual Record.\n\nParameters:\nAiring- the Airing object\nStartTime- the time the recording of this Airing should start\nStopTime- the time the recording of this Airing should stop\nReturns:\ntrue if the call succeeds, otherwise a localized error message is returned\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"Record","comment":"Specifies that this Airing should be recorded. This is a Manul Recording.\n\nParameters:\nAiring- the Airing object\nReturns:\ntrue if the call succeeds, otherwise a localized error message is returned\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"CancelRecord","comment":"Cancels a recording that was previously set with a call toRecord()\norSetRecordingTimes()\n\n\nParameters:\nAiring- the Airing object\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"IsAiringObject","comment":"Returns true if the argument is an Airing object. Automatic type conversion is NOT done in this call.\n\nParameters:\nAiring- the object to test\nReturns:\ntrue if the argument is an Airing object\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetParentalRating","comment":"Gets the parental rating information associated with this Airing. This is information such as TVY, TVPG, TVMA, etc.\n\nParameters:\nAiring- the Airing object\nReturns:\nthe parental rating information associated with this Airing\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetExtraAiringDetails","comment":"Gets miscellaneous information about this Airing. This includes thing such as \"Part 1 of 2\", \"CC\", \"HDTV\", \"Series Premiere\", etc.\n\nParameters:\nAiring- the Airing object\nReturns:\nmiscellaneous information about this Airing\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetAiringID","comment":"Returns the unique ID used to identify this Airing. Can get used later on a call toGetAiringForID()\n\n\nParameters:\nAiring- the Airing object\nReturns:\nthe unique ID used to identify this Airing\n\n\n\n","returnType":"int"},{"args":[{"dataType":"int","varName":"AiringID"}],"name":"GetAiringForID","comment":"Returns the Airing object that corresponds to the passed in ID. The ID should have been obtained from a call toGetAiringID()\n\n\nParameters:\nAiringID- the Airing id\nReturns:\nthe Airing object that corresponds to the passed in ID\n\n\n\n","returnType":"sage.Airing"},{"args":[{"dataType":"java.lang.String","varName":"ShowExternalID"},{"dataType":"int","varName":"StationID"},{"dataType":"long","varName":"StartTime"},{"dataType":"long","varName":"Duration"}],"name":"AddAiring","comment":"Adds a new Airing object to the database. This call should be used with caution.\n\nParameters:\nShowExternalID- a GUID which uniquely identifies the Show that correlates with this Airing, this Show should already have been added\nStationID- the GUID which uniquely identifies a \"Station\" (sort of like a Channel)\nStartTime- the time at which the new Airing starts\nDuration- the duration of the new Airing in milliseconds\nReturns:\nthe newly added Airing\n\n\n\n","returnType":"sage.Airing"},{"args":[{"dataType":"java.lang.String","varName":"ShowExternalID"},{"dataType":"int","varName":"StationID"},{"dataType":"long","varName":"StartTime"},{"dataType":"long","varName":"Duration"},{"dataType":"int","varName":"PartNumber"},{"dataType":"int","varName":"TotalParts"},{"dataType":"java.lang.String","varName":"ParentalRating"},{"dataType":"boolean","varName":"HDTV"},{"dataType":"boolean","varName":"Stereo"},{"dataType":"boolean","varName":"ClosedCaptioning"},{"dataType":"boolean","varName":"SAP"},{"dataType":"boolean","varName":"Subtitled"},{"dataType":"java.lang.String","varName":"PremierFinale"}],"name":"AddAiringDetailed","comment":"Adds a new Airing object to the database. This call should be used with caution. (it has more details you can specify than the\n standard AddAiring API call)\n\nParameters:\nShowExternalID- a GUID which uniquely identifies the Show that correlates with this Airing, this Show should already have been added\nStationID- the GUID which uniquely identifies a \"Station\" (sort of like a Channel)\nStartTime- the time at which the new Airing starts\nDuration- the duration of the new Airing in milliseconds\nPartNumber- for music files, the track number; for TV shows if it is a multipart show this is the part number, otherwise this should be 0\nTotalParts- for multipart TV shows, this is the total number of parts otherwise this should be zero; for music files it should be zero\nParentalRating- the parental rating for the show, should be a localized value from \"TVY\", \"TVY7\", \"TVG\", \"TVPG\", \"TV14\", \"TVM\" or the empty string\nHDTV- true if it's an HDTV airing, false otherwise\nStereo- true if it's a stereo recording, false otherwise\nClosedCaptioning- true if the airing has closed captioning, false otherwise\nSAP- true if the Airing has a Secondary Audio Program (SAP), false otherwise\nSubtitled- true if the Airing is subtitled, false otherwise\nPremierFinale- should be the empty string or a localized value from the list \"Premiere\", \"Channel Premiere\", \"Season Premiere\", \"Series Premiere\", \"Season Finale\", \"Series Finale\"\nReturns:\nthe newly added Airing\nSince:\n5.0\n\n\n\n","returnType":"sage.Airing"},{"args":[{"dataType":"java.lang.String","varName":"ShowExternalID"},{"dataType":"int","varName":"StationID"},{"dataType":"long","varName":"StartTime"},{"dataType":"long","varName":"Duration"},{"dataType":"int","varName":"PartNumber"},{"dataType":"int","varName":"TotalParts"},{"dataType":"java.lang.String","varName":"ParentalRating"},{"dataType":"java.lang.String[]","varName":"Attributes"},{"dataType":"java.lang.String","varName":"PremierFinale"}],"name":"AddAiringDetailed","comment":"Adds a new Airing object to the database. This call should be used with caution. (it has more details you can specify than the\n standard AddAiring API call)\n\nParameters:\nShowExternalID- a GUID which uniquely identifies the Show that correlates with this Airing, this Show should already have been added\nStationID- the GUID which uniquely identifies a \"Station\" (sort of like a Channel)\nStartTime- the time at which the new Airing starts\nDuration- the duration of the new Airing in milliseconds\nPartNumber- for music files, the track number; for TV shows if it is a multipart show this is the part number, otherwise this should be 0\nTotalParts- for multipart TV shows, this is the total number of parts otherwise this should be zero; for music files it should be zero\nParentalRating- the parental rating for the show, should be a localized value from \"TVY\", \"TVY7\", \"TVG\", \"TVPG\", \"TV14\", \"TVM\" or the empty string\nAttributes- a list of attributes for this Airing, the following values may be used: HDTV, Stereo, CC, SAP, Subtitled, 3D, DD5.1, Dolby, Letterbox, Live, New, Widescreen, Surround, Dubbed or Taped\nPremierFinale- should be the empty string or a localized value from the list \"Premiere\", \"Channel Premiere\", \"Season Premiere\", \"Series Premiere\", \"Season Finale\", \"Series Finale\"\nReturns:\nthe newly added Airing\nSince:\n7.1\n\n\n\n","returnType":"sage.Airing"},{"args":[{"dataType":"sage.Airing","varName":"Airing"},{"dataType":"java.lang.String","varName":"Attribute"}],"name":"IsAiringAttributeSet","comment":"Returns whether or not the specificed attibute is set for this Airing\n\nParameters:\nAiring- the Airing object\nAttribute- the following String values may be used: HDTV, Stereo, CC, SAP, Subtitled, 3D, DD5.1, Dolby, Letterbox, Live, New, Widescreen, Surround, Dubbed or Taped\nReturns:\ntrue if the specified Attribute is set for this Airing, false otherwise\nSince:\n7.1\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetAiringAttributeList","comment":"Gets a list of attributes that are set for this Airing.\n\nParameters:\nAiring- the Airing object\nReturns:\na String array of the attributes set for this Airing, the following values may be in this array: HDTV, Stereo, CC, SAP, Subtitled, 3D, DD5.1, Dolby, Letterbox, Live, New, Widescreen, Surround, Dubbed or Taped\nSince:\n7.1\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetAiringPartNumber","comment":"Returns the part number for this Airing if it is a multi-part Airing.\n\nParameters:\nAiring- the Airing object\nReturns:\nthe part number for this Airing if it is a multi-part Airing, 1 otherwise\nSince:\n7.1\n\n\n\n","returnType":"int"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetAiringTotalParts","comment":"Returns the number of parts for this Airing if it is a multi-part Airing.\n\nParameters:\nAiring- the Airing object\nReturns:\nthe number of parts for this Airing if it is a multi-part Airing, 1 otherwise\nSince:\n7.1\n\n\n\n","returnType":"int"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetAiringPremiereFinaleInfo","comment":"Returns a String which describes any kind of Premiere, Finale info for this Airing\n\nParameters:\nAiring- the Airing object\nReturns:\na String which describes any kind of Premiere, Finale info for this Airing, can be one of: \"Premiere\", \"Channel Premiere\", \"Season Premiere\", \"Series Premiere\", \"Season Finale\", \"Series Finale\" or the empty String if none apply\nSince:\n7.1\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetMediaFileForAiring","comment":"Gets the MediaFile object which corresponds to this Airing object\n\nParameters:\nAiring- the Airing object\nReturns:\nthe MediaFile object which corresponds to this Airing object, or null if it has no associated MediaFile\n\n\n\n","returnType":"sage.MediaFile"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetAiringOnAfter","comment":"Returns the Airing on the same Channel that is on immediately after the passed in Airing\n\nParameters:\nAiring- the Airing object\nReturns:\nthe Airing on the same Channel that is on immediately after the passed in Airing\n\n\n\n","returnType":"sage.Airing"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetAiringOnBefore","comment":"Returns the Airing on the same Channel that is on immediately before the passed in Airing\n\nParameters:\nAiring- the Airing object\nReturns:\nthe Airing on the same Channel that is on immediately before the passed in Airing\n\n\n\n","returnType":"sage.Airing"},{"args":[{"dataType":"sage.Airing","varName":"Airing"},{"dataType":"java.lang.String","varName":"PropertyName"}],"name":"GetManualRecordProperty","comment":"Returns a property value for a specified ManualRecord. This must have been set using SetManualRecordProperty and\n the specified Airing must be a ManualRecord.\n Returns the empty string when the property is undefined.\n\nParameters:\nAiring- the Airing object which is a ManualRecord\nPropertyName- the name of the property\nReturns:\nthe property value for the specified ManualRecord, or the empty string if it is not defined\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Airing","varName":"Airing"},{"dataType":"java.lang.String","varName":"PropertyName"},{"dataType":"java.lang.String","varName":"PropertyValue"}],"name":"SetManualRecordProperty","comment":"Sets a property for a specified ManualRecord. This can be any name/value combination (but the name cannot be null). If the value is null;\n then the specified property will be removed from this ManualRecord. This only impacts the return values from GetManualRecordProperty and has no other side effects.\n\nParameters:\nAiring- the Airing object which is a ManualRecord\nPropertyName- the name of the property\nPropertyValue- the value of the property\nSince:\n7.0\n\n\n\n","returnType":"void"}],"name":"AiringAPI"},"UserRecordAPI":{"methods":[{"args":[{"dataType":"java.lang.String","varName":"Store"},{"dataType":"java.lang.String","varName":"Key"}],"name":"AddUserRecord","comment":"Creates a new UserRecord object in the database under the specified data 'Store' and with the\n specified 'Key'. If a UserRecord already exists with that Store/Key combination, it will be returned instead.\n\nParameters:\nStore- the data store name to add the user record to\nKey- the unique key to use for indexing this record\nReturns:\nthe newly created UserRecord object, or if one already exists with this Store/Key combination, that is returned, null is returned if any parameters are null or the empty string\nSince:\n7.0\n\n\n\n","returnType":"sage.UserRecord"},{"args":[{"dataType":"sage.UserRecord","varName":"UserRecord"},{"dataType":"java.lang.String","varName":"Name"}],"name":"GetUserRecordData","comment":"Gets the Value from the specified Name that's stored in the given UserRecord object.\n\nParameters:\nUserRecord- the UserRecord object\nName- the name to retrieve the corresponding value for from the specified UserRecord object, must not be null or the empty String\nReturns:\nthe Value from the specified Name that's stored in the given UserRecord object., null will be returned if the Name has no defined value\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.UserRecord","varName":"UserRecord"},{"dataType":"java.lang.String","varName":"Name"},{"dataType":"java.lang.String","varName":"Value"}],"name":"SetUserRecordData","comment":"Sets the Value for the specified Name that's stored in the given UserRecord object\n\nParameters:\nUserRecord- the UserRecord object\nName- the Name to set the corresponding Value for in the specified UserRecord object, must not be null or the empty String\nValue- the Value to set, use null to clear the existing setting for the specified Name\nSince:\n7.0\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"Store"},{"dataType":"java.lang.String","varName":"Key"}],"name":"GetUserRecord","comment":"Gets an existing UserRecord object in the database under the specified data 'Store' and with the\n specified 'Key'.\n\nParameters:\nStore- the data store name to retrieve the UserRecord from\nKey- the unique key that was used when creating the UserRecord\nReturns:\nthe requested UserRecord object, or null if no matching record was found\nSince:\n7.0\n\n\n\n","returnType":"sage.UserRecord"},{"args":[{"dataType":"sage.UserRecord","varName":"UserRecord"}],"name":"DeleteUserRecord","comment":"Deletes the specified UserRecord object from the database.\n\nParameters:\nUserRecord- the UserRecord object to remove from the database\nReturns:\ntrue if the specified UserRecord was removed from the database, false if it no longer exists in the database\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"Store"}],"name":"GetAllUserRecords","comment":"Gets all existing UserRecord objects that exist under the specified data Store.\n\nParameters:\nStore- the data store name to retrieve the UserRecords from\nReturns:\nan array of all UserRecord objects in the database under the specified Store\nSince:\n7.0\n\n\n\n","returnType":"sage.UserRecord[]"},{"args":[],"name":"GetAllUserStores","comment":"Gets all existing Stores that UserRecord objects have been created under in the database.\n\nReturns:\nan array of all the Store names that exist for UserRecords in the database\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"Store"}],"name":"DeleteAllUserRecords","comment":"Deletes the all the UserRecords from the database under the specified Store.\n\nParameters:\nStore- the Store name that should have all corresponding UserRecords deleted\nSince:\n7.0\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.Object","varName":"UserRecord"}],"name":"IsUserRecordObject","comment":"Returns true if the passed in argument is a UserRecord object\n\nParameters:\nUserRecord- the object to test to see if it is a UserRecord object\nReturns:\ntrue if the passed in argument is a UserRecord object, false otherwise\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.UserRecord","varName":"UserRecord"}],"name":"GetUserRecordNames","comment":"Gets a list of all the 'Name' values used in name->value pairs in this UserRecord object\n\nParameters:\nUserRecord- the UserRecord object to get the list of Names stored in\nReturns:\nan array of all the names used to store data within this UserRecord object\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String[]"}],"name":"UserRecordAPI"},"SeriesInfoAPI":{"methods":[{"args":[],"name":"GetAllSeriesInfo","comment":"Returns a list of all of the SeriesInfo which is information about television series\n\nReturns:\na list of all of the SeriesInfo\nSince:\n5.1\n\n\n\n","returnType":"sage.SeriesInfo[]"},{"args":[{"dataType":"sage.SeriesInfo","varName":"SeriesInfo"}],"name":"GetSeriesTitle","comment":"Returns the title for the specified SeriesInfo\n\nParameters:\nSeriesInfo- the SeriesInfo object\nReturns:\nthe title for the specified SeriesInfo\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.SeriesInfo","varName":"SeriesInfo"}],"name":"GetSeriesDescription","comment":"Returns the description for the specified SeriesInfo\n\nParameters:\nSeriesInfo- the SeriesInfo object\nReturns:\nthe description for the specified SeriesInfo\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.SeriesInfo","varName":"SeriesInfo"}],"name":"GetSeriesCategory","comment":"Returns the category for the specified SeriesInfo\n\nParameters:\nSeriesInfo- the SeriesInfo object\nReturns:\nthe category for the SeriesInfo\nSince:\nV7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.SeriesInfo","varName":"SeriesInfo"}],"name":"GetSeriesSubCategory","comment":"Returns the subcategory for the specified SeriesInfo\n\nParameters:\nSeriesInfo- the SeriesInfo object\nReturns:\nthe subcategory for the SeriesInfo\nSince:\nV7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.SeriesInfo","varName":"SeriesInfo"}],"name":"GetSeriesHistory","comment":"Returns the history description for the specified SeriesInfo\n\nParameters:\nSeriesInfo- the SeriesInfo object\nReturns:\nthe history description for the specified SeriesInfo\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.SeriesInfo","varName":"SeriesInfo"}],"name":"GetSeriesPremiereDate","comment":"Returns a String describing the premiere date for the specified SeriesInfo\n\nParameters:\nSeriesInfo- the SeriesInfo object\nReturns:\na String describing the premiere date for the specified SeriesInfo\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.SeriesInfo","varName":"SeriesInfo"}],"name":"GetSeriesFinaleDate","comment":"Returns a String describing the finale date for the specified SeriesInfo\n\nParameters:\nSeriesInfo- the SeriesInfo object\nReturns:\na String describing the finale date for the specified SeriesInfo\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.SeriesInfo","varName":"SeriesInfo"}],"name":"GetSeriesNetwork","comment":"Returns the name of the network the specified SeriesInfo airs on\n\nParameters:\nSeriesInfo- the SeriesInfo object\nReturns:\nthe name of the network the specified SeriesInfo airs on\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.SeriesInfo","varName":"SeriesInfo"}],"name":"GetSeriesDayOfWeek","comment":"Returns the name of the day of the week the specified SeriesInfo airs on\n\nParameters:\nSeriesInfo- the SeriesInfo object\nReturns:\nthe name of the day of the week the specified SeriesInfo airs on\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.SeriesInfo","varName":"SeriesInfo"}],"name":"GetSeriesHourAndMinuteTimeslot","comment":"Returns the hour/minute timeslot that the specified SeriesInfo airs at\n\nParameters:\nSeriesInfo- the SeriesInfo object\nReturns:\nthe hour/minute timeslot that the specified SeriesInfo airs at\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.SeriesInfo","varName":"SeriesInfo"}],"name":"HasSeriesImage","comment":"Returns true if the specified SeriesInfo has a corresponding image for it\n\nParameters:\nSeriesInfo- the SeriesInfo object\nReturns:\ntrue if the specified SeriesInfo has a corresponding image for it\nSince:\n5.1\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.SeriesInfo","varName":"SeriesInfo"}],"name":"GetSeriesImage","comment":"Returns the image that corresponds to this SeriesInfo if there is one\n\nParameters:\nSeriesInfo- the SeriesInfo object\nReturns:\nthe image that corresponds to this SeriesInfo if there is one\nSince:\n5.1\n\n\n\n","returnType":"sage.MetaImage"},{"args":[{"dataType":"sage.SeriesInfo","varName":"SeriesInfo"}],"name":"GetNumberOfCharactersInSeries","comment":"Returns the number of characters that we have information on for the specified series\n\nParameters:\nSeriesInfo- the SeriesInfo object\nReturns:\nthe number of characters that we have information on for the specified series\nSince:\n5.1\n\n\n\n","returnType":"int"},{"args":[{"dataType":"sage.SeriesInfo","varName":"SeriesInfo"},{"dataType":"int","varName":"Index"}],"name":"GetSeriesActor","comment":"Returns the name of the actor/actress for the specfied index in the specified SeriesInfo. The range\n for the index is from 0 to one less than the value ofGetNumberOfCharactersInSeries()\n\n\nParameters:\nSeriesInfo- the SeriesInfo object\nIndex- the 0-based index of the actor to retrieve\nReturns:\nthe name of the actor/actress for the specfied index in the specified SeriesInfo\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.SeriesInfo","varName":"SeriesInfo"}],"name":"GetSeriesActorList","comment":"Returns a list of the names of the actors/actresses in the specified SeriesInfo.\n\nParameters:\nSeriesInfo- the SeriesInfo object\nReturns:\na list of the names of the actors/actresses in the specified SeriesInfo\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"sage.SeriesInfo","varName":"SeriesInfo"},{"dataType":"int","varName":"Index"}],"name":"GetSeriesCharacter","comment":"Returns the name of the character for the specfied index in the specified SeriesInfo. The range\n for the index is from 0 to one less than the value ofGetNumberOfCharactersInSeries()\n\n\nParameters:\nSeriesInfo- the SeriesInfo object\nIndex- the 0-based index of the actor to retrieve\nReturns:\nthe name of the character for the specfied index in the specified SeriesInfo\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.SeriesInfo","varName":"SeriesInfo"}],"name":"GetSeriesCharacterList","comment":"Returns a list of the names of the characters in the specified SeriesInfo.\n\nParameters:\nSeriesInfo- the SeriesInfo object\nReturns:\na list of the names of the characters in the specified SeriesInfo\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"sage.SeriesInfo","varName":"SeriesInfo"},{"dataType":"java.lang.String","varName":"Actor"}],"name":"GetSeriesCharacterForActor","comment":"Returns the name of the character that the corresponding actor plays in this series\n\nParameters:\nSeriesInfo- the SeriesInfo object\nReturns:\nthe name of the character that the corresponding actor plays in this series, the empty string if there's no correlation\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.SeriesInfo","varName":"SeriesInfo"}],"name":"GetSeriesID","comment":"Returns the Series ID of the specified SeriesInfo\n\nParameters:\nSeriesInfo- the SeriesInfo object\nReturns:\nthe Series ID of the specified SeriesInfo object (currently an integer, represented as a String for future expansion)\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"SeriesID"}],"name":"GetSeriesInfoForID","comment":"Returns the SeriesInfo object for the specified Series ID\n\nParameters:\nSeriesID- the ID of the desired SeriesInfo object\nReturns:\nthe SeriesInfo object with the specified ID, or null if it does not exist\nSince:\n7.0\n\n\n\n","returnType":"sage.SeriesInfo"},{"args":[{"dataType":"int","varName":"SeriesID"},{"dataType":"java.lang.String","varName":"Title"},{"dataType":"java.lang.String","varName":"Network"},{"dataType":"java.lang.String","varName":"Description"},{"dataType":"java.lang.String","varName":"History"},{"dataType":"java.lang.String","varName":"PremiereDate"},{"dataType":"java.lang.String","varName":"FinaleDate"},{"dataType":"java.lang.String","varName":"AirDOW"},{"dataType":"java.lang.String","varName":"AirHrMin"},{"dataType":"java.lang.String","varName":"ImageURL"},{"dataType":"java.lang.String[]","varName":"People"},{"dataType":"java.lang.String[]","varName":"Characters"}],"name":"AddSeriesInfo","comment":"Call this to add a SeriesInfo object to the database. If a SeriesInfo with this seriesID is already present, it will be updated\n to this information. You can use null or String[0] for any fields you don't want to specify.\n\nParameters:\nSeriesID- the ID of the series, this should match the prefix of corresponding ShowIDs w/out the last 4 digits for proper linkage (i.e. the SeriesID for EP1234567890 would be 123456)\nTitle- the title of the series\nNetwork- the network that airs the series\nDescription- a description of this series\nHistory- a historical description of the series\nPremiereDate- a String representation of the date the series premiered\nFinaleDate- a String representation of the date the series ended\nAirDOW- a String representation of the day of the week the series airs\nAirHrMin- a String representation of the time the series airs\nImageURL- a URL that links to an image for this series\nPeople- names of people/actors in this show\nCharacters- must be same length as people array, should give the character names the corresponding people have in the series\nReturns:\nthe newly added SeriesInfo object, or the updated object if another SeriesInfo object already existed with the same SeriesID\nSince:\n7.0\n\n\n\n","returnType":"sage.SeriesInfo"},{"args":[{"dataType":"sage.SeriesInfo","varName":"SeriesInfo"},{"dataType":"java.lang.String","varName":"PropertyName"}],"name":"GetSeriesInfoProperty","comment":"Returns a property value for a specified SeriesInfo object. This must have been set using SetSeriesInfoProperty.\n Returns the empty string when the property is undefined.\n\nParameters:\nSeriesInfo- the SeriesInfo object\nPropertyName- the name of the property\nReturns:\nthe property value for the specified SeriesInfo, or the empty string if it is not defined\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.SeriesInfo","varName":"SeriesInfo"},{"dataType":"java.lang.String","varName":"PropertyName"},{"dataType":"java.lang.String","varName":"PropertyValue"}],"name":"SetSeriesInfoProperty","comment":"Sets a property for this SeriesInfo object. This can be any name/value combination (but the name cannot be null). If the value is null;\n then the specified property will be removed from this SeriesInfo object. This only impacts the return values from GetSeriesInfoProperty and has no other side effects.\n\nParameters:\nSeriesInfo- the SeriesInfo object\nPropertyName- the name of the property\nPropertyValue- the value of the property\nSince:\n7.0\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.Object","varName":"SeriesInfo"}],"name":"IsSeriesInfoObject","comment":"Returns true if the argument is a SeriesInfo object. Automatic type conversion is NOT done in this call.\n\nParameters:\nSeriesInfo- the object to test\nReturns:\ntrue if the argument is an SeriesInfo object\nSince:\n7.1\n\n\n\n","returnType":"boolean"}],"name":"SeriesInfoAPI"},"MediaFileAPI":{"methods":[{"args":[],"name":"GetMediaFiles","comment":"Returns all of the MediaFile objects in the database.\n\nReturns:\na list of all of the MediaFile objects in the database\n\n\n\n","returnType":"sage.MediaFile[]"},{"args":[{"dataType":"java.lang.String","varName":"MediaMask"}],"name":"GetMediaFiles","comment":"Returns all of the MediaFile objects in the database\n The content it references must also match one of the media types specified in the MediaMask.\n There's also an additional supported type of 'L' which indicates files that pass IsLibraryFile()\n\nParameters:\nMediaMask- string specifying what content types to search (i.e. \"TM\" for TV & Music, 'T'=TV, 'M'=Music, 'V'=Video, 'D'=DVD, 'P'=Pictures, 'B'=BluRay)\nReturns:\na list of all of the MediaFile objects in the database that match the mask\nSince:\n6.4\n\n\n\n","returnType":"sage.MediaFile[]"},{"args":[{"dataType":"java.io.File","varName":"File"},{"dataType":"java.lang.String","varName":"NamePrefix"}],"name":"AddMediaFile","comment":"Adds a new MediaFile to the database. This file will remain in the database until it is manually removed by the\n user or when the file no longer exists.\n\nParameters:\nFile- the file path for the new MediaFile\nNamePrefix- the 'prefix' to prepend to the name of this media file for hierarchical purposes (i.e. the subdirectory that the file is in relative to the import root)\nReturns:\nthe newly added MediaFile object\n\n\n\n","returnType":"sage.MediaFile"},{"args":[{"dataType":"java.lang.String","varName":"FilePath"}],"name":"CreateTempMediaFile","comment":"Creates a temporary MediaFile object which can be used for playback later. This will not be added into the database;\n but any metadata that is attached to this MediaFile object will be put in the database until the next cleanup process occurs.\n\nParameters:\nFilePath- the file path for the temporary MediaFile (can also be an smb:// URL)\nReturns:\nthe newly created temporary MediaFile object or null if it can't properly resolve the path to a file\nSince:\n6.6\n\n\n\n","returnType":"sage.MediaFile"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"},{"dataType":"sage.Airing","varName":"Airing"}],"name":"SetMediaFileAiring","comment":"Sets a link between a MediaFile object which represents a file(s) on disk and an Airing object which\n represents metadata about the content. This is a way to link content information with media.\n\nParameters:\nMediaFile- the MediaFile object to set the content information for\nAiring- the Airing object that should be the content metadata pointer for this MediaFile\nReturns:\ntrue if the operation succeeded, false otherwise; this operation will fail if the Airing is already linked to another MediaFile\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"},{"dataType":"sage.Show","varName":"Show"}],"name":"SetMediaFileShow","comment":"Sets a link between a MediaFile object which represents a file(s) on disk and a Show object which\n represents metadata about the content. This is a way to link content information with media.\n This will create a new Airing representing this Show and add it to the database. Then that new Airing is\n linked with this MediaFile (just like it is inSetMediaFileAiring()\n\n\nParameters:\nMediaFile- the MediaFile object to set the content information for\nShow- the Show object that should be the content information for this MediaFile\nReturns:\ntrue if the operation succeeded, false otherwise; this operation will fail only if one of the arguments is null\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.io.File","varName":"FilePath"}],"name":"GetMediaFileForFilePath","comment":"Returns the MediaFile from the database that corresponds to a specified file on disk\n\nParameters:\nFilePath- the file path to find the corresponding MediaFile for\nReturns:\nthe MediaFile for the corresponding file path, or null if there is no corresponding MediaFile\n\n\n\n","returnType":"sage.MediaFile"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"IsLocalFile","comment":"Returns true if the specified MediaFile is local to this system (i.e. doesn't need to be streamed from a server)\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\ntrue if the specified MediaFile is local to this system (i.e. doesn't need to be streamed from a server), false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"IsLibraryFile","comment":"Returns true if the specified MediaFile has been either imported using a library path or if this is a television\n recording that has had the 'Move to Library' operation performed on it.\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\ntrue if the specified MediaFile has been either imported using a library path or if this is a television recording that has had the 'Move to Library' operation performed on it; false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"IsCompleteRecording","comment":"Returns true if SageTV considers this MediaFile a 'complete' recording. The rules behind this are somewhat complex,\n but the intended purpose is that a 'complete' recording is one that should be presented in the list of recordings to a user.\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\ntrue if SageTV considers this MediaFile a 'complete' recording\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"IsDVD","comment":"Returns true if this MediaFile represents DVD content. This can be either a DVD drive or a ripped DVD.\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\ntrue if this MediaFile represents DVD content, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"IsBluRay","comment":"Returns true if this MediaFile represents BluRay content.\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\ntrue if this MediaFile represents BluRay content, false otherwise\nSince:\n6.6\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"IsDVDDrive","comment":"Returns true if this MediaFile represents the physical DVD drive in the system. Use this MediaFile to playback DVDs from an optical drive.\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\ntrue if this MediaFile represents the physical DVD drive in the system, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"IsMusicFile","comment":"Returns true if this MediaFile's content is audio only.\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\ntrue if this MediaFile's content is audio only, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"IsVideoFile","comment":"Returns true if this MediaFile's content is an audio/video or video file (this will be false for DVD/BluRay content)\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\ntrue if this MediaFile's content is an audio/video or video file (this will be false for DVD/BluRay content), false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"IsPictureFile","comment":"Returns true if this MediaFile's content represents a picture file\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\ntrue if this MediaFile's content represents a picture file, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"IsTVFile","comment":"Returns true if this MediaFile represents recorded television content\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\ntrue if this MediaFile represents recorded television content, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"GetSegmentFiles","comment":"Returns the list of files that make up the specified MediaFile object. A MediaFile object can represent more than\n one physical file on disk. This occurs when a recording of a television show is not contiguous; this can happen for various \n reasons including the user changing the channel or restarting the system.\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\nthe list of files that make up this MediaFile object\n\n\n\n","returnType":"java.io.File[]"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"GetMediaTitle","comment":"Returns the title for the specified MediaFile object\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\nthe title for the specified MediaFile object\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"GetMediaFileRelativePath","comment":"Returns the path of this MediaFile object relative to the root of the import directory it is in.\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\nthe path of this MediaFile object relative to the root of the import directory it is in\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"GetParentDirectory","comment":"Gets the directory that the files for this MediaFile are in.\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\nthe directory that the files for this MediaFile are in\n\n\n\n","returnType":"java.io.File"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"GetSize","comment":"Gets the total size in bytes of the files on disk that represent this MediaFile\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\nthe total size in bytes of the files on disk that represent this MediaFile\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"GetFullImage","comment":"Returns the MetaImage object which represents the picture file for this MediaFile. If the specified MediaFile\n is not a picture file, then null is returned\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\nthe MetaImage object which represents the picture file for this MediaFile. If the specified MediaFile\n           is not a picture file, then null is returned\n\n\n\n","returnType":"sage.MetaImage"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"},{"dataType":"float","varName":"Time"},{"dataType":"int","varName":"Width"},{"dataType":"int","varName":"Height"},{"dataType":"java.io.File","varName":"File"}],"name":"GenerateThumbnail","comment":"Generates a thumbnail for the specified MediaFile at the requested offset time in the file using the desired width & height.\n The resulting thumbnail will be saved to the specified file. This call DOES NOT need to be used for GetThumbnail to work properly; this\n API call is intended as an extra for developers who want additional thumbnails beyond the one that is normally auto-generated for MediaFiles.\n This API call will not return until the generation of the thumbnail is complete. If both width & height are zero, then the size will be determined\n automatically to match the aspect ratio of the video (the largest dimension will match what SageTV uses internally for thumbnail sizes). If only one\n of width or height is zero, then the other dimension will be determined automatically to match the aspect ratio of the video.\n\nParameters:\nMediaFile- the MediaFile object, must be a Video file (no BluRays or DVDs)\nTime- the offset time in seconds at which the thumbnail should be generated (relative to the start of the file), while fractional seconds are supported, accuracy cannot be guaranteed\nWidth- the width in pixels of the desired thumbnail\nHeight- the height in pixels of the desired thumbnail\nFile- the file path to save the thumbnail to\nReturns:\ntrue if the generation succeeded, false if it failed\nSince:\n7.1\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"GetThumbnail","comment":"Gets the representative thumbnail image which should be used for iconic display of this MediaFile. For picture files,\n this will be a thumbnail image. For music files it will be the album art. For any other files it'll be the thumbnail for\n the file if one exists, otherwise it'll be the channel logo for the file. If none of those exist then null is returned.\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\nthe representative thumbnail image which should be used for iconic display of this MediaFile\n\n\n\n","returnType":"sage.MetaImage"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"IsThumbnailLoaded","comment":"Checks whether the passed thumbnail for the specified MediaFile is loaded\n into system memory or into the VRAM cache of the corresponding UI making the call.\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\ntrue if the thumbnail image for the specified MediaFile is loaded into system memory or the calling UI's VRAM, false otherwise\nSince:\n6.1\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"HasSpecificThumbnail","comment":"Returns true if this MediaFile object has a thumbnail for it that is unique to the content itself. This is true\n for any music file with album art or any other MediaFile that has another file on disk which contains the representative thumbnail.\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\ntrue if this MediaFile object has a thumbnail for it that is unique to the content itself, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"HasAnyThumbnail","comment":"Returns true if this MediaFile object has a thumbnail representation of it. If this is true, thenGetThumbnail()\nwill not return null.\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\ntrue if this MediaFile object has a thumbnail representation of it, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"IsFileCurrentlyRecording","comment":"Returns true if this MediaFile is currently in the process of recording.\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\ntrue if this MediaFile is currently in the process of recording, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"DeleteFile","comment":"Deletes the files that correspond to this MediaFile from disk and also deletes the MediaFile object from the database.\n NOTE: This actually delete the files from the disk. \n This has a slightly different effect on Intelligent Recording versus theDeleteFileWithoutPrejudice()\n\n\nParameters:\nMediaFile- the MediaFile object to delete\nReturns:\ntrue if the deletion succeeded, false otherwise. A deletion can fail because the file is currently being recorded or watched or because the native filesystem is unable to delete the file.\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"DeleteFileWithoutPrejudice","comment":"Deletes the files that correspond to this MediaFile from disk and also deletes the MediaFile object from the database.\n NOTE: This actually delete the files from the disk. \n This has a slightly different effect on Intelligent Recording versusDeleteFile()\n. DeleteFileWithoutPrejudice should\n be used when the file was incorrectly recorded or in other cases where this deletion decision should have no effect on intelligent recording.\n\nParameters:\nMediaFile- the MediaFile object to delete\nReturns:\ntrue if the deletion succeeded, false otherwise. A deletion can fail because the file is currently being recorded or watched or because the native filesystem is unable to delete the file.\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"GetFileDuration","comment":"Returns the total duration of the content in this MediaFile\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\nthe total duration in milliseconds of the content in the specified MediaFile\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"GetFileStartTime","comment":"Returns the starting time for the content in ths specified MediaFile. This corresponds to when the file's recording started or the\n timestamp on the file itself. See java.lang.System.currentTimeMillis() for information on the time units.\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\nthe starting time for the content in the specified MediaFile\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"GetFileEndTime","comment":"Returns the ending time for the content in ths specified MediaFile. This corresponds to when the file's recording ended or the\n timestamp on the file itself plus the file's duration. See java.lang.System.currentTimeMillis() for information on the time units.\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\nthe ending time for the content in the specified MediaFile\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"},{"dataType":"java.io.File","varName":"LocalFile"}],"name":"CopyToLocalFile","comment":"Downloads the specified MediaFile from the SageTV server and saves it as the specified LocalFile. This call should\n only be made by SageTV Client.\n\nParameters:\nMediaFile- the MediaFile object to download a copy of\nLocalFile- the destination file to store the MediaFile as on the local filesystem\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"},{"dataType":"int","varName":"SegmentNumber"}],"name":"GetDurationForSegment","comment":"Returns the duration in milliseconds for the specified segment number in this MediaFile.\n\nParameters:\nMediaFile- the MediaFile object\nSegmentNumber- the 0-based segment number to get the duration of\nReturns:\nthe duration in milliseconds for the specified segment number in this MediaFile\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"},{"dataType":"int","varName":"SegmentNumber"}],"name":"GetEndForSegment","comment":"Gets the ending time for a specified segment number in this MediaFile.\n\nParameters:\nMediaFile- the MediaFile object\nSegmentNumber- the 0-based segment number to get the end time of\nReturns:\nthe ending time for a specified segment number in this MediaFile\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"},{"dataType":"int","varName":"SegmentNumber"}],"name":"GetStartForSegment","comment":"Gets the starting time for a specified segment number in this MediaFile.\n\nParameters:\nMediaFile- the MediaFile object\nSegmentNumber- the 0-based segment number to get the start time of\nReturns:\nthe starting time for a specified segment number in this MediaFile\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"},{"dataType":"int","varName":"SegmentNumber"}],"name":"GetFileForSegment","comment":"Gets the file that represents the specified segment number in this MediaFile\n\nParameters:\nMediaFile- the MediaFile object\nSegmentNumber- the 0-based segment number to get the file for\nReturns:\nthe file that represents the specified segment number in this MediaFile\n\n\n\n","returnType":"java.io.File"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"GetNumberOfSegments","comment":"Returns the number of segments in ths specified MediaFile. Each segment corresponds to a different physical file on disk.\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\nthe number of segments in ths specified MediaFile\n\n\n\n","returnType":"int"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"GetStartTimesForSegments","comment":"Returns a list of all of the start times of the segments in the specified MediaFile\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\na list of all of the start times of the segments in the specified MediaFile\n\n\n\n","returnType":"long[][]"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"MoveFileToLibrary","comment":"Marks a MediaFile object as being 'Moved to Library' which means theIsLibraryFile()\ncall will\n now return true. This can be used to help organize the recorded television files.\n\nParameters:\nMediaFile- the MediaFile ojbect\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"MoveTVFileOutOfLibrary","comment":"Un-marks a MediaFile object as being 'Moved to Library' which means theIsLibraryFile()\ncall will\n no longer return true. This can only be used on recorded television files and has the opposite effect ofMoveFileToLibrary()\n\n\nParameters:\nMediaFile- the MediaFile ojbect\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.Object","varName":"Object"}],"name":"IsMediaFileObject","comment":"Returns true if the specified object is a MediaFile object. No automatic type conversion will be performed on the argument.\n This will return false if the argument is a MediaFile object, BUT that object no longer exists in the SageTV database.\n\nParameters:\nObject- the object to test to see if it is a MediaFile object\nReturns:\ntrue if the argument is a MediaFile object, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"GetAlbumForFile","comment":"Gets the Album object that corresponds to this MediaFile. This only returns a useful object if the argument is a music file.\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\nthe Album object that corresponds to this MediaFile\n\n\n\n","returnType":"sage.Album"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"GetMediaFileEncoding","comment":"Gets the encoding that was used to record this file. This will only return something useful for recorded television files.\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\nthe encoding that was used to record this file\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"GetMediaFileAiring","comment":"Gets the Airing object that represents the content metadata for this MediaFile\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\nthe Airing object that represents the content metadata for this MediaFile\n\n\n\n","returnType":"sage.Airing"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"GetMediaFileID","comment":"Returns the unique ID used to identify this MediaFile. Can get used later on a call toGetMediaFileForID()\n\n\nParameters:\nMediaFile- the MediaFileobject\nReturns:\nthe unique ID used to identify this MediaFile\n\n\n\n","returnType":"int"},{"args":[{"dataType":"int","varName":"id"}],"name":"GetMediaFileForID","comment":"Returns the MediaFile object that corresponds to the passed in ID. The ID should have been obtained from a call toGetMediaFileID()\n\n\nParameters:\nid- the id of the MediaFile object to get\nReturns:\nthe MediaFile object that corresponds to the passed in ID\n\n\n\n","returnType":"sage.MediaFile"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"GetMediaFileFormatDescription","comment":"Returns a string that provides a description of this MediaFile's format, i.e. MPEG2-PS[MPEG2-Video/2.0Mbps 4:3 480i@30fps, MP2/192kbps@48kHz]\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\na string that provides a description of this MediaFile's format\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"},{"dataType":"java.lang.String","varName":"Name"}],"name":"GetMediaFileMetadata","comment":"Returns a string for the corresponding metadata property in the MediaFile's format. These are set during format detection/import.\n Names set in the property \"custom_metadata_properties\" (which is a semicolon/comma delimited list) will be available; as well\n as all standard SageTV metadata fields and details on format information. \n These include Title, Description, EpisodeName, Track, Duration, Genre, Language, RunningTime,\n Rated, ParentalRating, PartNumber, TotalParts, HDTV, CC, Stereo, SAP, Subtitled, 3D, DD5.1, Dolby, Letterbox, Live, New, Widescreen, Surround, \n Dubbed, Taped, Premiere, SeasonPremiere, SeriesPremiere, ChannelPremiere, SeasonFinale, SeriesFinale,  SeasonNumber, EpisodeNumber, \n ExternalID, Album, Year, OriginalAirDate, ExtendedRatings, Misc, All \"Role\" Names, Format.Video.Codec,\n Format.Video.Resolution, Format.Video.Aspect, Format.Video.Bitrate, Format.Video.Width, Format.Video.Height, Format.Video.FPS,\n Format.Video.Interlaced, Format.Video.Progressive, Format.Video.Index, Format.Video.ID, Format.Audio.NumStreams, Format.Audio[.#].Codec, Format.Audio[.#].Channels,\n Format.Audio[.#].Language, Format.Audio[.#].SampleRate, Format.Audio[.#].BitsPerSample, Format.Audio[.#].Index, Format.Audio[.#].ID, Format.Subtitle.NumStreams,\n Format.Subtitle[.#].Codec, Format.Subtitle[.#].Language, Format.Subtitle[.#].Index, Format.Subtitle[.#].ID, Format.Container and Picture.Resolution\n\nParameters:\nMediaFile- the MediaFile object\nName- the name of the property to get\nReturns:\na string corresponding to the metadata property value, or the emptry string if it is undefined\nSince:\n6.6\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"GetMediaFileMetadataProperties","comment":"Returns a java.util.Properties object that contains all of the metadata properties for a MediaFile object.\n This will only include properties that can be modified (i.e. no format information is included). These properties will include all\n the standard database fields, as well as any custom metadata properties that were set for this MediaFile object.\n SeeSetMediaFileMetadata()\nandGetMediaFileMetadata()\nfor more details on those properties.\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\na java.util.Properties object with all the metadata properties for this MediaFile, this is a copy and is safe to modify\nSince:\n7.1\n\n\n\n","returnType":"java.util.Properties"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"},{"dataType":"java.lang.String","varName":"Name"},{"dataType":"java.lang.String","varName":"Value"}],"name":"SetMediaFileMetadata","comment":"Sets the corresponding metadata property in the MediaFile's format. These are set in the database and are also exported\n to the corresponding .properties file for that MediaFile. When it exports it will append these updates to the .properties file.\n It will also update the property \"custom_metadata_properties\" (which is a semicolon/comma delimited list) which tracks the extra\n metadata properties that should be retained. Usage of any of the following names will update the corresponding Airing/Show object\n for the MediaFile as well: Title, Description, EpisodeName, Track, Duration, Genre, Language, RunningTime,\n Rated, ParentalRating, PartNumber, TotalParts, HDTV, CC, Stereo, SAP, Subtitled, 3D, DD5.1, Dolby, Letterbox, Live, New, \n Widescreen, Surround, Dubbed, Taped, SeasonNumber, EpisodeNumber Premiere, SeasonPremiere, SeriesPremiere, ChannelPremiere,\n SeasonFinale, SeriesFinale, ExternalID, Album, Year, OriginalAirDate, ExtendedRatings, Misc and All \"Role\" Names\n\nParameters:\nMediaFile- the MediaFile object\nName- the name of the property to set\nValue- the value of the property to set\nSince:\n6.6\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"},{"dataType":"int","varName":"Degrees"}],"name":"RotatePictureFile","comment":"Performs a lossless rotation of the specified JPEG picture file (90, 180 or 270 degrees). This will modify the file that is\n stored on disk.\n\nParameters:\nMediaFile- the MediaFile object\nDegrees- the number of degress to rotate the picture in the clockwise direction, can be a positive or negative value and must be a multiple of 90\nReturns:\ntrue if the rotation was successful, false otherwise\nSince:\n5.1\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"},{"dataType":"boolean","varName":"Horizontal"}],"name":"FlipPictureFile","comment":"Performs a lossless flip of the specified JPEG picture file. This will modify the file that is\n stored on disk.\n\nParameters:\nMediaFile- the MediaFile object\nHorizontal- true if it should be flipped horizontally (i.e. around a vertical axis), false if it should be flipped vertically (i.e. around a horizontal axis)\nReturns:\ntrue if the flip was successful, false otherwise\nSince:\n5.1\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"CanAutorotatePictureFile","comment":"Returns true if the specified picture file can be autorotated and is currently not in that autorotated position\n\nParameters:\nMediaFile- the MediaFile object\nReturns:\ntrue if the specified picture file can be autorotated and is currently not in that autorotated position\nSince:\n6.4\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"AutorotatePictureFile","comment":"Automatically rotates the specified picture file according to the orientation set in the EXIF data.\n\nParameters:\nMediaFile- the MediaFile object that represents the picture\nReturns:\ntrue if the automatic rotation succeeded, false otherwise\nSince:\n6.4\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.MediaFile","varName":"MediaFile"}],"name":"RegeneratePictureThumbnail","comment":"Regenerates the thumbnail associated with the specified picture file. Sometimes the rotation may be mis-aligned from\n the thumbnail and this allows a way to repair that.\n\nParameters:\nMediaFile- the MediaFile object\nSince:\n6.4\n\n\n\n","returnType":"void"}],"name":"MediaFileAPI"},"WidgetAPI":{"methods":[{"args":[{"dataType":"java.io.File","varName":"STVFile"}],"name":"LoadSTVFile","comment":"Loads a new SageTV Application Definition file that defines the entire user interface for SageTV\n\nParameters:\nSTVFile- the new .stv file that should be loaded for the UI\nReturns:\ntrue if it was succesful, otherwise an error string\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.io.File","varName":"STVFile"}],"name":"ImportSTVFile","comment":"Imports a SageTV Application Definition file into the current STV file that is loaded. This will essentially merge the two together.\n\nParameters:\nSTVFile- the .stv file that should be imported into the currently loaded one\nReturns:\ntrue if it was succesful, otherwise an error string\n\n\n\n","returnType":"java.lang.Object"},{"args":[],"name":"IsSTVModified","comment":"Returns true if the currently loaded STV has been modified at all since its last save\n\nReturns:\ntrue if the currently loaded STV has been modified at all since its last save\nSince:\n6.1\n\n\n\n","returnType":"boolean"},{"args":[],"name":"GetAllWidgets","comment":"Gets all of the Widgets that are in the currently loaded STV\n\nReturns:\nall of the Widgets that are in the currently loaded STV\n\n\n\n","returnType":"sage.Widget[]"},{"args":[{"dataType":"java.lang.String","varName":"WidgetType"}],"name":"GetWidgetsByType","comment":"Gets all of the Widgets that are in the currently loaded STV that are of the specified type\n\nReturns:\nall of the Widgets that are in the currently loaded STV that are of the specified type\n\n\n\n","returnType":"sage.Widget[]"},{"args":[{"dataType":"java.lang.String","varName":"WidgetType"}],"name":"AddWidget","comment":"Creates a new Widget of the specified type and adds it to the STV\n\nParameters:\nWidgetType- the type of the new Widget\nReturns:\nthe newly created Widget\n\n\n\n","returnType":"sage.Widget"},{"args":[{"dataType":"java.lang.String","varName":"WidgetType"},{"dataType":"java.lang.String","varName":"Symbol"}],"name":"AddWidgetWithSymbol","comment":"Creates a new Widget of the specified type and adds it to the STV. This also allows specifying the desired symbol to use for the Widget.\n If the symbol is already in use; then a new symbol will automatically be assigned to this Widget instead.\n\nParameters:\nWidgetType- the type of the new Widget\nReturns:\nthe newly created Widget\nSince:\n7.0\n\n\n\n","returnType":"sage.Widget"},{"args":[{"dataType":"sage.Widget","varName":"Widget"}],"name":"RemoveWidget","comment":"Removes a Widget from the STV\n\nParameters:\nWidget- the Widget (or a String which represents the symbol for that Widget) to remove\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Widget","varName":"WidgetParent"},{"dataType":"sage.Widget","varName":"WidgetChild"}],"name":"AddWidgetChild","comment":"Creates a parent-child relationship between two Widgets. If the relationship already exists, this call has no effect.\n This new child will be the last child of the parent.\n\nParameters:\nWidgetParent- the Widget (or a String which represents the symbol for that Widget) that should be the parent in the relationship\nWidgetChild- the Widget (or a String which represents the symbol for that Widget) that should be the child in the relationship\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Widget","varName":"WidgetParent"},{"dataType":"sage.Widget","varName":"WidgetChild"},{"dataType":"int","varName":"ChildIndex"}],"name":"InsertWidgetChild","comment":"Creates a parent-child relationship between two Widgets. Since parent-child relationships are ordered, this allows\n specifying where in that order this relationship should be.\n\nParameters:\nWidgetParent- the Widget (or a String which represents the symbol for that Widget) that should be the parent in the relationship\nWidgetChild- the Widget (or a String which represents the symbol for that Widget) that should be the child in the relationship\nChildIndex- the 0-based index in the parent's child relationships list that the new relationship should occupy\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Widget","varName":"WidgetParent"},{"dataType":"sage.Widget","varName":"WidgetChild"}],"name":"RemoveWidgetChild","comment":"Breaks a parent-child relationships between two Widgets. If the Widgets do not have the specified parent-child relationship\n then there is no effect.\n\nParameters:\nWidgetParent- the parent of the Widget (or a String which represents the symbol for that Widget) relationship to break\nWidgetChild- the child of the Widget (or a String which represents the symbol for that Widget) relationship to break\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Widget","varName":"WidgetParent"},{"dataType":"sage.Widget","varName":"WidgetChild"}],"name":"IsWidgetParentOf","comment":"Returns true if the specified Widgets have a parent-child relationship.\n\nParameters:\nWidgetParent- the parent Widget (or a String which represents the symbol for that Widget) to test\nWidgetChild- the child Widget (or a String which represents the symbol for that Widget) to test\nReturns:\ntrue if the specified parent has a parent-child relationship with the specified child, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Widget","varName":"Widget"}],"name":"GetWidgetType","comment":"Returns the type of a Widget\n\nParameters:\nWidget- the Widget (or a String which represents the symbol for that Widget) object\nReturns:\nthe type name of the specified Widget\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Widget","varName":"Widget"},{"dataType":"java.lang.String","varName":"PropertyName"}],"name":"HasWidgetProperty","comment":"Returns true if the specified Widget has a property defined with the specified name\n\nParameters:\nWidget- the Widget object (or a String which represents the symbol for that Widget)\nPropertyName- the name of the property to check existence of\nReturns:\ntrue if the specified Widget has a property defined with the specified name, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Widget","varName":"Widget"},{"dataType":"java.lang.String","varName":"PropertyName"},{"dataType":"java.lang.String","varName":"PropertyValue"}],"name":"SetWidgetProperty","comment":"Sets a property in a Widget to a specified value. If that property is already defined, this will overwrite it.\n\nParameters:\nWidget- the Widget object (or a String which represents the symbol for that Widget)\nPropertyName- the name of the property to set in the Widget\nPropertyValue- the value to set the property to\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Widget","varName":"Widget"},{"dataType":"java.lang.String","varName":"PropertyName"}],"name":"GetWidgetProperty","comment":"Returns the value for a specified property in a Widget\n\nParameters:\nWidget- the Widget object (or a String which represents the symbol for that Widget)\nPropertyName- the name of the property to get\nReturns:\nthe value for a specified property in a Widget\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Widget","varName":"Widget"}],"name":"GetWidgetName","comment":"Returns the name of the specified Widget\n\nParameters:\nWidget- the Widget object (or a String which represents the symbol for that Widget)\nReturns:\nthe name of the specified Widget\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Widget","varName":"Widget"},{"dataType":"java.lang.String","varName":"Name"}],"name":"SetWidgetName","comment":"Sets the name for a Widget\n\nParameters:\nWidget- the Widget object (or a String which represents the symbol for that Widget)\nName- the value to set the name to for this Widget\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Widget","varName":"Widget"}],"name":"GetWidgetParents","comment":"Gets the list of Widgets that are parents of the specified Widget. The ordering of this list has no effect.\n\nParameters:\nWidget- the Widget object (or a String which represents the symbol for that Widget)\nReturns:\na list of Widgets which are all parents of the specified Widget\n\n\n\n","returnType":"sage.Widget[]"},{"args":[{"dataType":"sage.Widget","varName":"Widget"}],"name":"GetWidgetChildren","comment":"Gets the list of Widgets that are children of the specified Widget. The ordering of this list does have an effect.\n\nParameters:\nWidget- the Widget object (or a String which represents the symbol for that Widget)\nReturns:\na list of Widgets which are all children of the specified Widget\n\n\n\n","returnType":"sage.Widget[]"},{"args":[{"dataType":"sage.Widget","varName":"Widget"}],"name":"ExecuteWidgetChain","comment":"Executes a Widget and the chain of child Widgets underneath it\n\nParameters:\nWidget- the root of the Widget (or a String which represents the symbol for that Widget) action chain to execute\nReturns:\nthe value returned by the last executed Widget in the chain\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"sage.Widget","varName":"Widget"}],"name":"ExecuteWidgetChainInCurrentMenuContext","comment":"Executes a Widget and the chain of child Widgets underneath it. This will use the context of the currently loaded menu to do this which\n is useful if you want to launch an OptionsMenu programatically w/ the proper parent context. NOTE: If this does launch an OptionsMenu then the\n value returned from this function will not be usable and this call will return once the OptionsMenu is launched. Once it is closed the core\n will resume execution of the widget chain using one of its own internal threads at that point.\n\nParameters:\nWidget- the root of the Widget (or a String which represents the symbol for that Widget) action chain to execute\nReturns:\nthe value returned by the last executed Widget in the chain\nSince:\n7.0\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"sage.Widget","varName":"Widget"}],"name":"LaunchMenuWidget","comment":"Launches a new menu in SageTV with the specified Widget as the menu's definition.\n\nParameters:\nWidget- the Widget object (or a String which represents the symbol for that Widget) to use for the launched menu, this must be a Menu type Widget\n\n\n\n","returnType":"void"},{"args":[],"name":"GetCurrentSTVFile","comment":"Gets the STV file that is currently loaded by the system\n\nReturns:\nthe STV file that is currently loaded by the system\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Widget","varName":"Widget"},{"dataType":"java.lang.String","varName":"Type"},{"dataType":"java.lang.String","varName":"Name"}],"name":"GetWidgetChild","comment":"Searches the children of the specified Widget for one with the specified type and name. If no match\n is found then null is returned. If there are multiple matches then the first one is returned.\n\nParameters:\nWidget- the Widget (or a String which represents the symbol for that Widget) who's children should be searched\nType- the type of the Widget to search for, if null than any type will match\nName- the name that the Widget to search for must match, if null than any name will match\nReturns:\nthe Widget child of the specified Widget of the specified type and name\n\n\n\n","returnType":"sage.Widget"},{"args":[{"dataType":"sage.Widget","varName":"Widget"},{"dataType":"java.lang.String","varName":"Type"},{"dataType":"java.lang.String","varName":"Name"}],"name":"GetWidgetParent","comment":"Searches the parents of the specified Widget for one with the specified type and name. If no match\n is found then null is returned. If there are multiple matches then the first one is returned.\n\nParameters:\nWidget- the Widget (or a String which represents the symbol for that Widget) who's parents should be searched\nType- the type of the Widget to search for, if null than any type will match\nName- the name that the Widget to search for must match, if null than any name will match\nReturns:\nthe Widget parent of the specified Widget of the specified type and name\n\n\n\n","returnType":"sage.Widget"},{"args":[],"name":"GetCurrentMenuWidget","comment":"Gets the Widget the defines the menu that is currently loaded by the system\n\nReturns:\nthe Widget the defines the menu that is currently loaded by the system\n\n\n\n","returnType":"sage.Widget"},{"args":[],"name":"GetWidgetMenuHistory","comment":"Gets a list of the Widgets that have defined the menus that were recently displayed in the UI\n\nReturns:\na list of the Widgets that have defined the menus that were recently displayed in the UI\n\n\n\n","returnType":"sage.Widget[]"},{"args":[],"name":"GetWidgetMenuBackHistory","comment":"Gets a list of the Widgets that have defined the menus that were recently displayed in the UI.\n UnlikeGetWidgetMenuHistory()\nthis only returns Menus that are\n 'Back' (not Forward) in the navigations the user has performed. Similar to getting only the 'Back'\n history in a web browser.\n\nReturns:\na list of the Widgets that have defined the menus that were recently displayed in the UI\nSince:\n5.1\n\n\n\n","returnType":"sage.Widget[]"},{"args":[{"dataType":"java.lang.String","varName":"Expression"}],"name":"EvaluateExpression","comment":"Evaluates the passed in expression and returns the result. This is executed in a new variable context w/out any\n user interface context.\n\nParameters:\nExpression- the expression string to evaluate\nReturns:\nthe result of evaluating the specified expression\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.io.File","varName":"File"},{"dataType":"boolean","varName":"Overwrite"}],"name":"SaveWidgetsAsXML","comment":"Saves all of the current Widgets as an XML file. Same as the \"Save a Copy as XML...\" in the Studio.\n\nParameters:\nFile- the file to write to\nOverwrite- if true then if the File exists it will be overwritten\nReturns:\ntrue if successful, false if not\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Widget","varName":"Widget"}],"name":"GetWidgetSymbol","comment":"Returns the UID symbol for the specified Widget\n\nParameters:\nWidget- the Widget object\nReturns:\nthe UID symbol which is used to represent this widget uniquely\nSince:\n6.4\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"Symbol"}],"name":"FindWidgetBySymbol","comment":"Returns the Widget represented by the specified UID symbol\n\nParameters:\nSymbol- the UID symbol to lookup the Widget for\nReturns:\nthe Widget who's symbol matches the argument, null if it cannot be found\nSince:\n6.4\n\n\n\n","returnType":"sage.Widget"},{"args":[],"name":"GetDefaultSTVFile","comment":"Returns the file path for the default STV file\n\nReturns:\nthe file path for the default STV file\nSince:\n6.4\n\n\n\n","returnType":"java.io.File"},{"args":[],"name":"GetUIWidgetContext","comment":"Returns the Widget for the corresponding UI component that this execution originated from. For\n 'green' process chains; this will correspond to the UI component that received the event. For 'blue'\n UI chains; this will correspond to the UI component who's conditionality is being determined or who's data\n is being evaluated. This will be null if there is no UI context; such as for non-UI hooks and calls made from\n Java directly.\n\nReturns:\nthe Widget that corresponds to the UI context used for the current evaluation, null if there is no context\nSince:\n6.6\n\n\n\n","returnType":"sage.Widget"},{"args":[],"name":"GetSTVName","comment":"Returns the value of the 'STVName' Attribute under the Global Theme Widget. This is used for dependencies relating to plugins.\n\nReturns:\nthe value of the 'STVName' Attribute under the Global Theme Widget\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"GetSTVVersion","comment":"Returns the value of the 'STVVersion' Attribute under the Global Theme Widget. This is used for dependencies relating to plugins.\n\nReturns:\nthe value of the 'STVVersion' Attribute under the Global Theme Widget\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"}],"name":"WidgetAPI"},"MediaPlayerAPI":{"methods":[{"args":[],"name":"IsMediaPlayerFullyLoaded","comment":"Returns true if the MediaPlayer is fully loaded. This means it has the meta information for the\n file loaded as well as the native media player.\n\nReturns:\ntrue if the MediaPlayer is fully loaded, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[],"name":"IsMediaPlayerLoading","comment":"Returns true if the MediaPlayer is loading. This is true from the point that a Watch() API call\n is made until the point that the native media player is loaded or there is a failure loading the file.\n\nReturns:\ntrue if the MediaPlayer is loading, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[],"name":"PlayFaster","comment":"Sets the playback rate of the MediaPlayer to be twice the current playback rate. Not supported\n on all platforms or with all media formats.\n\n\n\n\n","returnType":"void"},{"args":[],"name":"SkipForward","comment":"Performs a time seek forward in the MediaPlayer. The amount of time skipped will be equivalent\n to the value of the property videoframe/ff_time in milliseconds. (the default is 10 seconds)\n\n\n\n\n","returnType":"void"},{"args":[],"name":"SkipForward2","comment":"Performs a time seek forward in the MediaPlayer. The amount of time skipped will be equivalent\n to the value of the property videoframe/ff_time2 in milliseconds. (the default is 2 1/2 minutes)\n\n\n\n\n","returnType":"void"},{"args":[{"dataType":"long","varName":"Time"}],"name":"Seek","comment":"Performs a time seek in the MediaPlayer to the specified time. This time is relative to the\n start time of the metadata for the MediaFile unless a DVD is being played back. In the case of a DVD\n the time is absolute.\n\nParameters:\nTime- the time to seek the MediaPlayer to in milliseconds\n\n\n\n","returnType":"void"},{"args":[],"name":"Pause","comment":"Pauses playback in the MediaPlayer. If the MediaPlayer is currently paused this will perform a frame step.\n\n\n\n\n","returnType":"void"},{"args":[],"name":"Play","comment":"Resumes playback in the MediaPlayer. If the MediaPlayer is playing at a speed other than x1, the playback speed will be\n reset to x1.\n\n\n\n\n","returnType":"void"},{"args":[],"name":"PlaySlower","comment":"Sets the playback rate of the MediaPlayer to be half the current playback rate. Not supported\n on all platforms or with all media formats.\n\n\n\n\n","returnType":"void"},{"args":[],"name":"PlayPause","comment":"Pauses playback of the MediaPlayer if it is currently playing or resumes playback of the MediaPlayer\n if it is currently paused.\n\n\n\n\n","returnType":"void"},{"args":[],"name":"SkipBackwards","comment":"Performs a time seek backwards in the MediaPlayer. The amount of time skipped will be equivalent\n to the value of the property videoframe/rew_time in milliseconds. (the default is 10 seconds)\n\n\n\n\n","returnType":"void"},{"args":[],"name":"SkipBackwards2","comment":"Performs a time seek backwards in the MediaPlayer. The amount of time skipped will be equivalent\n to the value of the property videoframe/rew_time2 in milliseconds. (the default is 2 1/2 minutes)\n\n\n\n\n","returnType":"void"},{"args":[],"name":"GetPlaybackRate","comment":"Returns the current playback rate as a floating point number. 1.0 is normal speed forward playback.\n Negative numbers indicate reverse playback.\n\nReturns:\nthe current playback rate of the MediaPlayer\n\n\n\n","returnType":"float"},{"args":[{"dataType":"float","varName":"PlaybackRate"}],"name":"SetPlaybackRate","comment":"Sets the playback rate of the MediaPlayer to the specified value. 1.0 is normal speed forward playback.\n Negative numbers indicate reverse playback. Not all values are supported on all platforms or for all formats.\n\nParameters:\nPlaybackRate- the playback rate to set the MediaPlayer to\n\n\n\n","returnType":"void"},{"args":[],"name":"VolumeUp","comment":"Increases the volume in the MediaPlayer. This may also effect the 'system' volume depending upon the\n configuration of SageTV.\n\n\n\n\n","returnType":"void"},{"args":[],"name":"VolumeDown","comment":"Decreases the volume in the MediaPlayer. This may also effect the 'system' volume depending upon the\n configuration of SageTV.\n\n\n\n\n","returnType":"void"},{"args":[],"name":"GetVolume","comment":"Returns the current volume level of the MediaPlayer. If no MediaPlayer is loaded this will return\n the system volume.\n\nReturns:\nthe current volume level of the MediaPlayer; if no MediaPlayer is loaded this will return\n         the system volume. The value will be between 0.0 and 1.0\n\n\n\n","returnType":"float"},{"args":[],"name":"ChannelUp","comment":"Performs a logical channel up in the MediaPlayer. This only has effect if the content that is\n currently being viewed has the concept of channels, tracks, chapters, etc.\n\n\n\n\n","returnType":"void"},{"args":[],"name":"ChannelDown","comment":"Performs a logical channel down in the MediaPlayer. This only has effect if the content that is\n currently being viewed has the concept of channels, tracks, chapters, etc.\n\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"ChannelNumber"}],"name":"ChannelSet","comment":"Performs a logical channel set in the MediaPlayer. This only has effect if the content that is\n currently being viewed has the concept of channels, tracks, chapters, etc.\n\nParameters:\nChannelNumber- the new channel/track/chapter to playback\n\n\n\n","returnType":"void"},{"args":[{"dataType":"float","varName":"Amount"}],"name":"VolumeAdjust","comment":"Adjusts the volume in the MediaPlayer be the specified amount. The overall volume for the\n player is between 0.0 and 1.0. This may also effect the 'system' volume depending upon the\n configuration of SageTV.\n\nParameters:\nAmount- the amount to adjust the volume by\n\n\n\n","returnType":"void"},{"args":[{"dataType":"float","varName":"Amount"}],"name":"SetVolume","comment":"Explicitly sets the volume in the MediaPlayer to be the specified amount. This should be between 0.0 and 1.0\n This may also effect the 'system' volume depending upon the configuration of SageTV.\n\nParameters:\nAmount- the level to set the volume to\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.Object","varName":"Content"}],"name":"Watch","comment":"Instructs SageTV to playback the specified media content. The argument can be either an\n Airing, a MediaFile or a file path.  For Airings, it can correspond to a MediaFile (which has the\n same effect as just calling this with the MediaFile itself) or it can correspond to a live\n television Airing. For live TV airings, the appropriate work will be done to tune, record and start\n playback of the requested content.  For MediaFiles or file paths, this will simply playback the specified content.\n\nParameters:\nContent- the Airing, MediaFile or file path to being playback of\nReturns:\ntrue if the request was successful, a localized error message otherwise\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"},{"dataType":"long","varName":"PauseBufferSize"}],"name":"WatchLive","comment":"Instructs SageTV to begin playback of content streamed from the specified CaptureDeviceInput. The content\n may or may not be buffered to a file first depending upon the PauseBufferSize parameter as well as the\n capabilities of the capture hardware and the network configuration.  NOTE: This is NOT the same as jumping\n to live when playing back buffered TV content; to do that simply call Seek(Time())\n\nParameters:\nCaptureDeviceInput- the capture input to playback content directly from\nPauseBufferSize- the size in bytes of the buffer SageTV should use to buffer the content for playback, this will\n         also allow pausing of this stream upto the size of the PauseBuffer; use 0 to request no buffering\n         (although SageTV may still decide to use buffering if it deems it necessary)\nReturns:\ntrue if the request was successful, a localized error message otherwise\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"},{"dataType":"long","varName":"PauseBufferSize"},{"dataType":"java.lang.String","varName":"PhysicalChannel"}],"name":"WatchLive","comment":"Instructs SageTV to begin playback of content streamed from the specified CaptureDeviceInput. The content\n may or may not be buffered to a file first depending upon the PauseBufferSize parameter as well as the\n capabilities of the capture hardware and the network configuration.  The channel to view is also\n specified in this form of the call. NOTE: This is NOT the same as jumping\n to live when playing back buffered TV content; to do that simply call Seek(Time())\n\nParameters:\nCaptureDeviceInput- the capture input to playback content directly from\nPauseBufferSize- the size in bytes of the buffer SageTV should use to buffer the content for playback, this will\n         also allow pausing of this stream upto the size of the PauseBuffer; use 0 to request no buffering\n         (although SageTV may still decide to use buffering if it deems it necessary)\nPhysicalChannel- the physical channel number that should be tuned to before starting viewing\nReturns:\ntrue if the request was successful, a localized error message otherwise\nSince:\n6.6\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"}],"name":"LockTuner","comment":"Instructs SageTV to take control of the specified CaptureDeviceInput. The device may then be used\n for channel scanning. This will cause any prompts to occur that are a result of taking control of the device.\n When done using it; CloseAndWaitUntilClosed() should be called.\n\nParameters:\nCaptureDeviceInput- the capture input to control\nReturns:\ntrue if the request was successful, a localized error message otherwise\nSince:\n6.6\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.io.File","varName":"file"}],"name":"WatchLocalFile","comment":"Instructs SageTV to playback the specified file path that's local to this client\n\nParameters:\nfile- path to playback\nReturns:\ntrue if the request was successful, a localized error message otherwise\nSince:\n6.4\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"sage.Playlist","varName":"Playlist"}],"name":"StartPlaylist","comment":"Starts playback of the specified Playlist. The MediaPlayer will playback everything in the Playlist\n sequentially until it is done.\n\nParameters:\nPlaylist- the Playlist to being playback of\nReturns:\ntrue if the request was successful, a localized error message otherwise (failure will only occur due to parental control issues)\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"sage.Playlist","varName":"Playlist"},{"dataType":"int","varName":"StartIndex"}],"name":"StartPlaylistAt","comment":"Starts playback of the specified Playlist. The MediaPlayer will playback everything in the Playlist\n sequentially until it is done. Playback will begin at the item at the specified by the passed in index.\n\nParameters:\nPlaylist- the Playlist to being playback of\nStartIndex- the index in the playlist to start playing at (1-based index)\nReturns:\ntrue if the request was successful, a localized error message otherwise (failure will only occur due to parental control issues)\n\n\n\n","returnType":"java.lang.Object"},{"args":[],"name":"CloseAndWaitUntilClosed","comment":"Closes the file that is currently loaded by the MediaPlayer and waits for the MediaPlayer to\n completely free all of its resources before returning.\n\n\n\n\n","returnType":"void"},{"args":[],"name":"IsMuted","comment":"Returns true if the MediaPlayer is currently in a muted state. This will not affect the system volume.\n\nReturns:\ntrue if the MediaPlayer is muted, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"boolean","varName":"Muted"}],"name":"SetMute","comment":"Sets the mute state for the MediaPlayer. This does not affect the system volume.\n\nParameters:\nMuted- true if the MediaPlayer should be muted, false otherwise\n\n\n\n","returnType":"void"},{"args":[],"name":"GetCurrentMediaTitle","comment":"Returns the title of the content that is currently loaded by the MediaPlayer.\n\nReturns:\nthe title of the content that is currently loaded by the MediaPlayer\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"GetMediaTime","comment":"Gets the current playback time of the MediaPlayer. For DVD content this time will return a value appropriate for\n a current time display (starting at zero). For all other content types, this value will be the time in java.lang.System.currentTimeMillis() units\n and is relative to the start time of the Airing metadata which represents the currently loaded file. So for a current time display you\n should subtract the airing start time of the current media file from the returned value.\n\nReturns:\nthe current playback time of the MediaPlayer in milliseconds\n\n\n\n","returnType":"long"},{"args":[],"name":"GetRawMediaTime","comment":"Gets the current playback time of the MediaPlayer. This is the current playback time relative to the\n start of the current playing file. For multiple segment files; this will be relative to the start of the currently\n playing segment. This is intended to be used by plugin developers for linking events with the media time in the file.\n\nReturns:\nthe current playback time of the MediaPlayer in milliseconds\nSince:\n7.0\n\n\n\n","returnType":"long"},{"args":[],"name":"GetMediaDuration","comment":"Returns the duration of the currently loaded MediaFile in milliseconds.\n\nReturns:\nthe duration of the currently loaded MediaFile in milliseconds\n\n\n\n","returnType":"long"},{"args":[],"name":"GetCurrentMediaFile","comment":"Returns the MediaFile object that is currently loaded (or loading) by the MediaPlayer\n\nReturns:\nthe MediaFile object that is currently loaded (or loading) by the MediaPlayer\n\n\n\n","returnType":"sage.MediaFile"},{"args":[],"name":"HasMediaFile","comment":"Returns true if the MediaPlayer currently has a file that is loading or loaded.\n\nReturns:\ntrue if the MediaPlayer currently has a file that is loading or loaded, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[],"name":"DoesCurrentMediaFileHaveVideo","comment":"Returns true if the MediaPlayer has a file loading or loaded that has video content in it\n\nReturns:\ntrue if the MediaPlayer has a file loading or loaded that has video content in it, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[],"name":"IsCurrentMediaFileMusic","comment":"Returns true if the MediaPlayer has a file loading or loaded, and that file is a music file\n\nReturns:\ntrue if the MediaPlayer has a file loading or loaded, and that file is a music file\n\n\n\n","returnType":"boolean"},{"args":[],"name":"IsCurrentMediaFileDVD","comment":"Returns true if the MediaPlayer has a file loading or loaded, and that file is a DVD\n\nReturns:\ntrue if the MediaPlayer has a file loading or loaded, and that file is a DVD\n\n\n\n","returnType":"boolean"},{"args":[],"name":"IsCurrentMediaFileRecording","comment":"Returns true if the MediaPlayer has a file loading or loaded, and that file is currently being recorded\n\nReturns:\ntrue if the MediaPlayer has a file loading or loaded, and that file is currently being recorded\n\n\n\n","returnType":"boolean"},{"args":[],"name":"IsPlaying","comment":"Returns true if the MediaPlayer is currently playing back content (i.e. content is fully loaded and not in the paused state)\n\nReturns:\ntrue if the MediaPlayer is currently playing back content, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[],"name":"IsShowingDVDMenu","comment":"Returns true if the MediaPlayer currently has DVD content loaded and that content is showing a DVD menu that can have user interaction\n\nReturns:\ntrue if the MediaPlayer currently has DVD content loaded and that content is showing a DVD menu that can have user interaction, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[],"name":"GetCurrentPlaylist","comment":"Returns the current Playlist that is being played back by the MediaPlayer. Playlists can be played back\n using the callStartPlaylist()\n\n\nReturns:\nthe current Playlist that is being played back by the MediaPlayer, null otherwise\n\n\n\n","returnType":"sage.Playlist"},{"args":[],"name":"GetCurrentPlaylistIndex","comment":"Returns the 0-based index into the root Playlist that is currently being played back by the MediaPlayer. 0 is returned\n if no Playlist is currently being played back.\n\nReturns:\nthe 0-based index into the root Playlist that is currently being played back by the MediaPlayer. 0 is returned\n           if no Playlist is currently being played back.\n\n\n\n","returnType":"int"},{"args":[],"name":"GetAvailableSeekingStart","comment":"Gets the earliest time that the current media can be seeked to using theSeek()\ncall. This\n will be in absolute time.\n\nReturns:\nthe earliest time that the current media can be seeked to in milliseconds\n\n\n\n","returnType":"long"},{"args":[],"name":"GetAvailableSeekingEnd","comment":"Gets the latest time that the current media can be seeked to using theSeek()\ncall. This\n will be in absolute time.\n\nReturns:\nthe latest time that the current media can be seeked to in milliseconds\n\n\n\n","returnType":"long"},{"args":[{"dataType":"java.lang.String","varName":"ParentalLockCode"}],"name":"IsCorrectParentalLockCode","comment":"Returns true if the argument passed in matches the parental lock code in the system\n\nParameters:\nParentalLockCode- the code to test\nReturns:\ntrue if the specified ParentalLockCode matches the parental lock code SageTV is configured to use\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"boolean","varName":"OnTop"}],"name":"SetVideoAlwaysOnTop","comment":"Sets the video portion of SageTV to always be on top of other windows in the desktop (Windows only).\n\nParameters:\nOnTop- true if the video window of SageTV should be on top of all other windows in the system, false otherwise\n\n\n\n","returnType":"void"},{"args":[],"name":"DVDChapterNext","comment":"Informs the MediaPlayer to start playback of the next chapter in the current DVD content.\n\n\n\n\n","returnType":"void"},{"args":[],"name":"DVDChapterPrevious","comment":"Informs the MediaPlayer to start playback of the previous chapter in the current DVD content.\n\n\n\n\n","returnType":"void"},{"args":[{"dataType":"int","varName":"ChapterNumber"}],"name":"DVDChapterSet","comment":"Informs the MediaPlayer to start playback of the specified chapter in the current DVD content.\n\nParameters:\nChapterNumber- the chapter number to start playback of in the current DVD\n\n\n\n","returnType":"void"},{"args":[],"name":"DVDEnter","comment":"Performs the 'Enter' operation when using a menu system in DVD content.\n\n\n\n\n","returnType":"void"},{"args":[],"name":"DVDMenu","comment":"Performs the 'Menu' operation when playing back a DVD which should bring up the root menu of the DVD\n\n\n\n\n","returnType":"void"},{"args":[],"name":"DVDTitleMenu","comment":"Performs the 'Menu' operation when playing back a DVD which should bring up the title menu of the DVD\n\n\n\n\n","returnType":"void"},{"args":[],"name":"DVDReturn","comment":"Performs the 'Return' operation when playing back a DVD which should bring the user back to the last DVD menu they were at\n\n\n\n\n","returnType":"void"},{"args":[],"name":"DVDTitleNext","comment":"Informs the MediaPlayer to start playback of the next title in the current DVD content.\n\n\n\n\n","returnType":"void"},{"args":[],"name":"DVDTitlePrevious","comment":"Informs the MediaPlayer to start playback of the previous title in the current DVD content.\n\n\n\n\n","returnType":"void"},{"args":[],"name":"DVDSubtitleToggle","comment":"Toggles the state for subtitle display in the DVD content being played back.\n\n\n\n\n","returnType":"void"},{"args":[{"dataType":"int","varName":"SubtitleNum"}],"name":"DVDSubtitleChange","comment":"Sets the subtitle that should be displayed in the current DVD content. The names of the languages for the\n corresponding subtitles are obtained from a call toGetDVDAvailableSubpictures()\n.\n If no arguments are given to this function then the currently displayed subtitle will be changed to the next one\n\nParameters:\nSubtitleNum- the 0-based index into the list of subtitles that should be displayed\n\n\n\n","returnType":"void"},{"args":[{"dataType":"int","varName":"AudioNum"}],"name":"DVDAudioChange","comment":"Sets the audio language that should be used in the current DVD content. The names of the languages\n are obtained from a call toGetDVDAvailableLanguages()\n.\n If no arguments are given to this function then the current audio language will be changed to the next available language\n\nParameters:\nAudioNum- the 0-based index into the list of audio languages that should be used\n\n\n\n","returnType":"void"},{"args":[{"dataType":"int","varName":"AngleNum"}],"name":"DVDAngleChange","comment":"Sets the 'Angle' for playback of the current DVD content. The number of angels\n are obtained from a call toGetDVDNumberOfAngles()\n.\n If no arguments are given to this function then the current angle will be changed to the next available angle\n\nParameters:\nAngleNum- the 1-based index that indicates which angle should be used for playback\n\n\n\n","returnType":"void"},{"args":[],"name":"ReloadCurrentFile","comment":"Reloads the current file that is loaded by the MediaPlayer. This is useful when changing configuration options\n for the MediaPlayer and then showing playback with those changes.\n\n\n\n\n","returnType":"void"},{"args":[{"dataType":"int","varName":"Code"},{"dataType":"long","varName":"Param1"},{"dataType":"long","varName":"Param2"}],"name":"DirectPlaybackControl","comment":"Submits an explicit playback control request to the MediaPlayer if it supports it. (Only DVD-based media players support this call)\n\nParameters:\nCode- this is the value of the control command to be sent to the player, must be one of the following:\n        MENU = 201; Param1 should be 1 for title, 2 for root\n        TITLE_SET = 202; Param1 should be the title number\n        CHAPTER_SET = 205; Param1 should be the chapter number\n        CHAPTER_NEXT = 206;\n        CHAPTER_PREV = 207;\n        ACTIVATE_CURRENT = 208;\n        RETURN = 209;\n        BUTTON_NAV = 210; Param1 should be 1(up), 2(right), 3(down) or 4(left)\n        MOUSE_HOVER = 211; Param1 should be x and Param2 should be y\n        MOUSE_CLICK = 212; Param1 should be x and Param2 should be y\n        ANGLE_CHANGE = 213; Param1 should be the angle number (1-based)\n        SUBTITLE_CHANGE = 214; Param1 should be the subtitle number (0-based)\n        SUBTITLE_TOGGLE = 215;\n        AUDIO_CHANGE = 216; Param1 should be the audio number (0-based)\nParam1- the first parameter for the control command (see above)\nParam2- the second parameter for the control command (see above)\n\n\n\n","returnType":"void"},{"args":[],"name":"GetDVDCurrentTitle","comment":"Gets the current title number that is being played back for DVD content.\n\nReturns:\nthe current title number that is being played back for DVD content, 0 otherwise\n\n\n\n","returnType":"int"},{"args":[{"dataType":"int","varName":"TitleNum"}],"name":"GetBluRayTitleDescription","comment":"Returns a description of the specified title number if playing back a BluRay. This description will have\n the total unique duration of the specified title and an asterisk if it is considered to be the 'main' title.\n\nParameters:\nTitleNum- the title number (1-based) to retrieve a description of\nReturns:\na description of the specified title number if playing back a BluRay; the empty string otherwise\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"GetDVDNumberOfTitles","comment":"Gets the total number of titles in the current DVD content\n\nReturns:\nthe total number of titles in the current DVD content\n\n\n\n","returnType":"int"},{"args":[],"name":"GetDVDCurrentChapter","comment":"Gets the current chapter number that is being played back for DVD content.\n\nReturns:\nthe current chapter number that is being played back for DVD content\n\n\n\n","returnType":"int"},{"args":[],"name":"GetDVDNumberOfChapters","comment":"Gets the total number of chapters in the current title in the current DVD content\n\nReturns:\nthe total number of chapters in the current title in the current DVD content\n\n\n\n","returnType":"int"},{"args":[],"name":"GetDVDCurrentDomain","comment":"Gets the current 'domain' that the DVD playback is in.\n\nReturns:\nthe current 'domain' that the DVD playback is in, uses the following values:\n         1 = DVD initialization, 2 = disc menus, 3 = title menus, 4 = playback, 5 = stopped\n\n\n\n","returnType":"int"},{"args":[],"name":"GetDVDCurrentAngle","comment":"Gets the current angle number that is being played back for DVD content\n\nReturns:\nthe current angle number that is being played back for DVD content\n\n\n\n","returnType":"int"},{"args":[],"name":"GetDVDNumberOfAngles","comment":"Gets the total number of angles that are currently available to select from in the current DVD content\n\nReturns:\nthe total number of angles that are currently available to select from in the current DVD content\n\n\n\n","returnType":"int"},{"args":[],"name":"GetDVDCurrentLanguage","comment":"Gets the current audio playback language that is being used for the current DVD content\n\nReturns:\nthe current audio playback language that is being used for the current DVD content\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"GetDVDAvailableLanguages","comment":"Gets a list of all of the audio languages that are currently available in the current DVD content\n\nReturns:\na list of all of the audio languages that are currently available in the current DVD content\n\n\n\n","returnType":"java.lang.String[]"},{"args":[],"name":"GetDVDCurrentSubpicture","comment":"Gets the current subtitle that is being used for the current DVD content\n\nReturns:\nthe current subtitle that is being used for the current DVD content, null if subtitles are currently disabled\n\n\n\n","returnType":"java.lang.String[]"},{"args":[],"name":"GetDVDAvailableSubpictures","comment":"Gets a list of all of the subtitles that are currently available in the current DVD content\n\nReturns:\na list of all of the subtitles that are currently available in the current DVD content\n\n\n\n","returnType":"java.lang.String[]"},{"args":[],"name":"GetMediaPlayerClosedCaptionState","comment":"Gets the current state that MediaPlayer close captioning is set to use. This can be either a localized\n version of \"Captions Off\" or one of the strings: \"CC1\", \"CC2\", \"Text1\", \"Text2\"\n\nReturns:\nthe current state that MediaPlayer close captioning is set to use\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"CCType"}],"name":"SetMediaPlayerClosedCaptionState","comment":"Sets the current state that MediaPlayer close captioning should use. This can be one of the strings: \"CC1\", \"CC2\", \"Text1\", \"Text2\".\n If any other value is used then closed captioning will be turned off.\n\nParameters:\nCCType- the new state that MediaPlayer close captioning should use\n\n\n\n","returnType":"void"},{"args":[],"name":"IsMediaPlayerSignalLost","comment":"Returns true if the source the MediaPlayer is trying to playback from indicates a signal loss.\n This can happen when trying to watch digital TV stations.\n\nReturns:\ntrue if the MediaPlayer detects signal loss from the source it's playing back, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[],"name":"GetSubtitleDelay","comment":"Gets the delay in milliseconds that is applied to external subtitle files when they are used during playback (can be positive or negative)\n\nReturns:\nthe delay in milliseconds that is applied to external subtitle files when they are used during playback.\nSince:\n6.6\n\n\n\n","returnType":"long"},{"args":[{"dataType":"long","varName":"DelayMsec"}],"name":"SetSubtitleDelay","comment":"Sets the delay in milliseconds that is applied to external subtitle files when they are used during playback (can be positive or negative)\n\nParameters:\nDelayMsec- the delay in milliseconds that is applied to external subtitle files when they are used during playback\nSince:\n6.6\n\n\n\n","returnType":"void"},{"args":[],"name":"CanAdjustSubtitleTiming","comment":"Returns true if the subtitles for the currently loaded file can have their timing adjusted. This is true for subtitles\n that come from external files\n\nReturns:\ntrue if the subtitles for the currently loaded file can have their timing adjusted; false otherwise\nSince:\n6.6\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"int","varName":"SubCount"}],"name":"ApplyRelativeSubtitleAdjustment","comment":"Adjusts the timing for subtitle display by increasing/decreasing the delay so that the sub at the relative SubCount position\n would be currently displayed.\n\nParameters:\nSubCount- the relative position from the current sub of the sub that should be displayed now\nReturns:\nthe value in milliseconds of the current subtitle delay (same as return from GetSubtitleDelay())\nSince:\n6.6\n\n\n\n","returnType":"long"},{"args":[],"name":"GetVideoSnapshot","comment":"Returns an image which is a frame grab of the currently rendered video frame. This is currently only\n supported on Windows when using VMR9 with 3D acceleration\n\nReturns:\na java.awt.image.BufferedImage which holds the last rendered video frame, or null if the call cannot be completed\n\n\n\n","returnType":"java.awt.image.BufferedImage"}],"name":"MediaPlayerAPI"},"SystemMessageAPI":{"methods":[{"args":[],"name":"GetSystemAlertLevel","comment":"Gets the global alert level in the system.\n\nReturns:\na value from 0-3; with 0=No Alert, 1=Info Alert, 2=Warning Alert, 3=Error Alert\nSince:\n6.6\n\n\n\n","returnType":"int"},{"args":[],"name":"GetSystemMessages","comment":"Returns the list of SystemMessage objects currently in the queue.\n\nReturns:\nan array of SystemMessage objects currently in the queue\nSince:\n6.6\n\n\n\n","returnType":"sage.msg.SystemMessage[]"},{"args":[],"name":"ResetSystemAlertLevel","comment":"Resets the global alert level in the system back to zero.\n\nSince:\n6.6\n\n\n\n","returnType":"void"},{"args":[],"name":"DeleteAllSystemMessages","comment":"Deletes all the SystemMessages from the queue. This will not have any effect on the global alert level.\n\nSince:\n6.6\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.msg.SystemMessage","varName":"message"}],"name":"DeleteSystemMessage","comment":"Deletes the specified SystemMessage from the queue. This will not have any effect on the global alert level.\n\nParameters:\nmessage- the SystemMessage object to delete\nSince:\n6.6\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.msg.SystemMessage","varName":"message"}],"name":"GetSystemMessageString","comment":"Gets the 'message string' associated with this SystemMessage. This is the same result as converting the object to a String.\n\nParameters:\nmessage- the SystemMessage object to get the 'message string' for\nReturns:\nthe 'message string' for the specified SystemMessage\nSince:\n6.6\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.msg.SystemMessage","varName":"message"}],"name":"GetSystemMessageTime","comment":"Gets the time when this SystemMessage was first posted.\n\nParameters:\nmessage- the SystemMessage object to get the time of\nReturns:\nthe time for the specified SystemMessage\nSince:\n6.6\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.msg.SystemMessage","varName":"message"}],"name":"GetSystemMessageEndTime","comment":"Gets the time when this SystemMessage was last posted. For messages that did not repeat this will be the same as\n GetSystemMessageTime. For messages that repeated; this will be the time of the last repeating occurence.\n\nParameters:\nmessage- the SystemMessage object to get the end time of\nReturns:\nthe end time for the specified SystemMessage\nSince:\n6.6\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.msg.SystemMessage","varName":"message"}],"name":"GetSystemMessageRepeatCount","comment":"Gets the number of times this message was repeated. For a message that repeated once (i.e. it had 2 occurences), this\n method will return 2.\n\nParameters:\nmessage- the SystemMessage object to get the repeat count for\nReturns:\nthe repeat count for the specified SystemMessage\nSince:\n6.6\n\n\n\n","returnType":"int"},{"args":[{"dataType":"sage.msg.SystemMessage","varName":"message"}],"name":"GetSystemMessageTypeName","comment":"Returns a localized string which represents the type of SystemMessage that was specified.\n\nParameters:\nmessage- the SystemMessage object to get the type of\nReturns:\nthe type for the specified SystemMessage\nSince:\n6.6\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.msg.SystemMessage","varName":"message"}],"name":"GetSystemMessageTypeCode","comment":"Returns an integer which represents the type of SystemMessage that was specified.\n\nParameters:\nmessage- the SystemMessage object to get the type of\nReturns:\nthe type for the specified SystemMessage\nSince:\n6.6\n\n\n\n","returnType":"int"},{"args":[{"dataType":"sage.msg.SystemMessage","varName":"message"}],"name":"GetSystemMessageLevel","comment":"Returns the alert level for the SystemMessage that was specified.\n\nParameters:\nmessage- the SystemMessage object to get the alert level of\nReturns:\na value from 0-3; with 0=No Alert, 1=Info Alert, 2=Warning Alert, 3=Error Alert\nSince:\n6.6\n\n\n\n","returnType":"int"},{"args":[{"dataType":"sage.msg.SystemMessage","varName":"message"},{"dataType":"java.lang.String","varName":"VarName"}],"name":"GetSystemMessageVariable","comment":"Returns the SystemMessage variable property associated with the specified SystemMessage. Depending\n upon the type of message; different variables will be assigned that can be used to do further analysis/processing\n on the message or to guide the user through resolution steps.\n\nParameters:\nmessage- the SystemMessage object to lookup the variable in\nVarName- the name of the variable to lookup in this SystemMessage (string based values)\nReturns:\na String that corresponds to the requested variable or null if it does not exist\nSince:\n6.6\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"int","varName":"MessageCode"},{"dataType":"int","varName":"MessageLevel"},{"dataType":"java.lang.String","varName":"MessageString"},{"dataType":"java.util.Properties","varName":"MessageVariables"}],"name":"PostSystemMessage","comment":"Creates a new SystemMessage and posts it to the message queue.\n Predefined message codes of interest for posting messages are:SOFTWARE_UPDATE_MSG = 1202STORAGE_MONITOR_MSG = 1203GENERAL_MSG = 1204You may also use other user-defined message codes which should be greater than 9999. To give those messages a 'type name' which\n will be visible by the user; you can defined a message variable with the name 'typename' and then that will be displayed.\n\nParameters:\nMessageCode- the integer code that specifies the type of message\nMessageLevel- the integer code specifying the level of the message; 0=Status(does not raise global level),1=Info, 2=Warning, 3=Error\nMessageString- a localized message string that explains what the message is in detail\nMessageVariables- a java.util.Properties object which has name->value pairs that represent variables corresponding to the details of this message\nSince:\n6.6\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.Object","varName":"SystemMessage"}],"name":"IsSystemMessageObject","comment":"Returns true if the passed in argument is a SystemMessage object\n\nParameters:\nSystemMessage- the object to test to see if it is a SystemMessage object\nReturns:\ntrue if the passed in argument is a SystemMessage object, false otherwise\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.msg.SystemMessage","varName":"message"}],"name":"GetSystemMessageVariableNames","comment":"Returns the names of the variables associated with the specified SystemMessage. Depending\n upon the type of message; different variables will be assigned that can be used to do further analysis/processing\n on the message or to guide the user through resolution steps. The actual values can be retrieved with\n GetSystemMessageVariable.\n\nParameters:\nmessage- the SystemMessage object to get the variable names of\nReturns:\na String array with all the names of the variables for the specified SystemMessage\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String[]"}],"name":"SystemMessageAPI"},"AlbumAPI":{"methods":[{"args":[],"name":"GetAllMusicArtists","comment":"Returns all of the artists for the music files in the library\n\nReturns:\nan array of the artists for the music files in the library\n\n\n\n","returnType":"java.lang.String[]"},{"args":[],"name":"GetAllMusicGenres","comment":"Returns all of the genres for the music files in the library\n\nReturns:\nan array of the genres for the music files in the library\n\n\n\n","returnType":"java.lang.String[]"},{"args":[],"name":"GetAlbums","comment":"Returns all of the Album objects in the library. This list is derived from the music files in the library.\n\nReturns:\nan array of all of the Album objects in the library\n\n\n\n","returnType":"sage.Album[]"},{"args":[{"dataType":"java.lang.String","varName":"Artist"}],"name":"GetAllMusicForArtist","comment":"Gets all of the Airings (a 'meta' object referring to the music file in this case)\n that have an artist that matches the passed in artist\n\nParameters:\nArtist- the name of the artist\nReturns:\nan array of the Airings that correspond to music files by the specified artist\n\n\n\n","returnType":"sage.Airing[]"},{"args":[{"dataType":"java.lang.String","varName":"Genre"}],"name":"GetAllMusicForGenre","comment":"Gets all of the Airings (a 'meta' object referring to the music file in this case)\n that have a genre that matches the passed in genre\n\nParameters:\nGenre- the name of the genre\nReturns:\nan array of the Airings that correspond to music files by the specified genre\n\n\n\n","returnType":"sage.Airing[]"},{"args":[{"dataType":"sage.Album","varName":"Album"}],"name":"GetAlbumTracks","comment":"Gets all of the Airings (a 'meta' object referring to the music file in this case)\n that are on this Album in the library. The returned list is sorted by the track number of each song.\n\nParameters:\nAlbum- the Album object to get the tracks for\nReturns:\nan array of Airings which are the tracks on this Album\n\n\n\n","returnType":"sage.Airing[]"},{"args":[{"dataType":"sage.Album","varName":"Album"}],"name":"GetNumberOfTracks","comment":"Returns the number of tracks that are on this Album\n\nParameters:\nAlbum- the Album object\nReturns:\nthe number of tracks that are on the specified Album\n\n\n\n","returnType":"int"},{"args":[{"dataType":"sage.Album","varName":"Album"}],"name":"GetAlbumArtist","comment":"Returns the artist for this Album. If there's more than one artist it will return the\n localized string for the resource \"Various_Artists\". This defaults to \"Various\".\n\nParameters:\nAlbum- the Album object\nReturns:\nthe artist for the specified Album\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Album","varName":"Album"}],"name":"GetAlbumArt","comment":"Returns the album art for this Album.\n\nParameters:\nAlbum- the Album object\nReturns:\nthe album art for the specified Album, this can be fed into an Image Widget to display it\n\n\n\n","returnType":"sage.MetaImage"},{"args":[{"dataType":"sage.Album","varName":"Album"}],"name":"GetAlbumName","comment":"Returns the name/title for this Album\n\nParameters:\nAlbum- the Album object\nReturns:\nthe name/title of the specified Album\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Album","varName":"Album"}],"name":"HasAlbumArt","comment":"Returns true if there is album art for this Album\n\nParameters:\nAlbum- the Album object\nReturns:\ntrue if there is album art for this Album, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.Object","varName":"Album"}],"name":"IsAlbumObject","comment":"Returns true if the argument is an Album object\n\nParameters:\nAlbum- the Object to test\nReturns:\ntrue if the passed in object is an Album object, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Album","varName":"Album"}],"name":"GetAlbumGenre","comment":"Returns the genre for this Album\n\nParameters:\nAlbum- the Album object\nReturns:\nthe genre for the specified Album\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Album","varName":"Album"}],"name":"GetAlbumYear","comment":"Returns the year this Album was recorded in\n\nParameters:\nAlbum- the Album object\nReturns:\nthe year the specified album was recorded in\n\n\n\n","returnType":"java.lang.String"}],"name":"AlbumAPI"},"FavoriteAPI":{"methods":[{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"IsFirstRunsAndReRuns","comment":"Returns true if this Favorite is configured to record both first runs and reruns.\n\nParameters:\nFavorite- the Favorite object\nReturns:\ntrue if this Favorite is configured to record both first runs AND reruns, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"IsFirstRunsOnly","comment":"Returns true if this Favorite is configured to record first runs but not reruns.\n\nParameters:\nFavorite- the Favorite object\nReturns:\ntrue if this Favorite is configured to record first runs only, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"IsReRunsOnly","comment":"Returns true if this Favorite is configured to record reruns but not first runs.\n\nParameters:\nFavorite- the Favorite object\nReturns:\ntrue if this Favorite is configured to record reruns only, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"IsFirstRuns","comment":"Returns true if this Favorite is configured to record first runs (it may or may not record reruns)\n\nParameters:\nFavorite- the Favorite object\nReturns:\ntrue if this Favorite is configured to record first runs, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"IsReRuns","comment":"Returns true if this Favorite is configured to record reruns (it may or may not record first runs)\n\nParameters:\nFavorite- the Favorite object\nReturns:\ntrue if this Favorite is configured to record reruns, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"IsAutoDelete","comment":"Returns true if SageTV is allowed to automatically delete recordings of this\n Favorite when it needs more disk space. If this is false, then SageTV will never automatically\n delete files recorded for this Favorite; the user will have to delete the files themself.\n\nParameters:\nFavorite- the Favorite object\nReturns:\ntrue if this Favorite is configured for auto delete, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"IsDeleteAfterAutomaticConversion","comment":"If an automatic conversion quality is set for this Favorite; then this will return true if\n the original file will be deleted after that conversion is performed\n\nParameters:\nFavorite- the Favorite object\nReturns:\ntrue if this Favorite is configured to delete the original file after automatic conversion\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"GetKeepAtMost","comment":"Returns the maximum number of recordings that match this Favorite that should be kept on disk. If AutoDelete is\n set to true then SageTV will continue to record new airings of this Favorite as they air, and delete the oldest\n recording on disk if it hits the keep at most limit. If AutoDelete is false then SageTV will stop recording this Favorite\n once it has this many recordings on disk\n\nParameters:\nFavorite- the Favorite object\nReturns:\nthe maximum number of recordings SageTV should keep on disk of this Favorite, 0 if it is unlimited\n\n\n\n","returnType":"int"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"GetFavoriteDescription","comment":"Returns a String that describes this Favorite.\n\nParameters:\nFavorite- the Favorite object\nReturns:\na descriptive string for this Favorite\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"GetFavoriteTitle","comment":"Returns the title that an Airing must match to be included in this Favorite.\n\nParameters:\nFavorite- the Favorite object\nReturns:\nthe title that an Airing must match to be included in this Favorite, returns the empty string if the title isn't a field that needs to match\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"GetFavoriteCategory","comment":"Returns the category that an Airing must match to be included in this Favorite.\n\nParameters:\nFavorite- the Favorite object\nReturns:\nthe category that an Airing must match to be included in this Favorite, returns the empty string if category isn't a field that needs to match\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"GetFavoriteSubCategory","comment":"Returns the subcategory that an Airing must match to be included in this Favorite.\n\nParameters:\nFavorite- the Favorite object\nReturns:\nthe subcategory that an Airing must match to be included in this Favorite, returns the empty string if subcategory isn't a field that needs to match\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"GetFavoritePerson","comment":"Returns the person that an Airing must have to be included in this Favorite. The person may also be restricted by their role in the content.\n\nParameters:\nFavorite- the Favorite object\nReturns:\nthe person that an Airing must have to be included in this Favorite, returns the empty string if person isn't a field that needs to match\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"GetFavoriteRated","comment":"Returns the rating that an Airing must match to be included in this Favorite.\n\nParameters:\nFavorite- the Favorite object\nReturns:\nthe rating that an Airing must match to be included in this Favorite, returns the empty string if rating isn't a field that needs to match\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"GetFavoritePersonRole","comment":"Returns the role that an Airing must have the Favorite Person in to be included in this Favorite. This only applies if a person is set for this Favorite.\n\nParameters:\nFavorite- the Favorite object\nReturns:\nthe role that the favorite person for an Airing must have to be included in this Favorite, returns the empty string if role doesn't matter\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"GetFavoriteYear","comment":"Returns the year that an Airing must match to be included in this Favorite.\n\nParameters:\nFavorite- the Favorite object\nReturns:\nthe year that an Airing must match to be included in this Favorite, returns the empty string if year isn't a field that needs to match\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"GetFavoriteParentalRating","comment":"Returns the parental rating that an Airing must match to be included in this Favorite.\n\nParameters:\nFavorite- the Favorite object\nReturns:\nthe parental rating that an Airing must match to be included in this Favorite, returns the empty string if parental rating isn't a field that needs to match\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"GetFavoriteChannel","comment":"Returns the channel name (call sign) that an Airing must be on to be included in this Favorite.\n\nParameters:\nFavorite- the Favorite object\nReturns:\nthe channel name that an Airing must be on to be included in this Favorite, returns the empty string if channel doesn't matter; for mult-channel favorites this will be a semicolon or comma-delimited list of channel names\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"GetFavoriteKeyword","comment":"Returns the keyword string that an Airing must match to be included in this Favorite. This is case insensitive. Double quotes\n can be used to require word to be in a certain order. Otherwise; each individual word is searched for in the Airing's details and must\n match a whole word for the match to succeed.  The * character can be used to match 0 or more characters. The ? character can be used\n to match a single character. Regex is the matching language used for this so any other regex parsing characters besides * and ? can be used.\n All of the fields of the object are searched as part of this.\n\nParameters:\nFavorite- the Favorite object\nReturns:\nthe keyword that an Airing must match to be included in this Favorite, returns the empty string if keyword doesn't matter\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"GetFavoriteNetwork","comment":"Returns the network name that an Airing must be on to be included in this Favorite.\n\nParameters:\nFavorite- the Favorite object\nReturns:\nthe network name that an Airing must be on to be included in this Favorite, returns the empty string if network doesn't matter\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"GetFavoriteTimeslot","comment":"Returns the timeslot that an Airing must be in to be included in this Favorite. It just needs to overlap the timeslot.\n\nParameters:\nFavorite- the Favorite object\nReturns:\nthe timeslot that an Airing must be in to be included in this Favorite, returns the empty string if timeslot doesn't matter\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"GetStartPadding","comment":"Returns the amount of time any recording for this Favorite should start before the actual Airing begins.\n\nParameters:\nFavorite- the Favorite object\nReturns:\nthe amount of time any recording for this Favorite should start before the actual Airing begins, in milliseconds\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"GetStopPadding","comment":"Returns the amount of time any recording for this Favorite should stop after the actual Airing ends.\n\nParameters:\nFavorite- the Favorite object\nReturns:\nthe amount of time any recording for this Favorite should stop after the actual Airing ends, in milliseconds\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"GetFavoriteQuality","comment":"Gets the name of the recording quality that should be used when recording this Favorite.\n\nParameters:\nFavorite- the Favorite object\nReturns:\nthe name of the recording quality that should be used when recording this Favorite, the empty string if the default recording quality should be used\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"GetFavoriteAutomaticConversionFormat","comment":"Gets the name of the format that recordings of this Favorite will automatically be converted to when they have completed recording. It will return an empty\n string if automatic conversion is disabled for this Favorite\n\nParameters:\nFavorite- the Favorite object\nReturns:\nthe name of the transcode format that should be used when converting this Favorite, the empty string if no automatic conversion should be done\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"GetFavoriteAutomaticConversionDestination","comment":"Gets the directory that automatic conversions of this favorite should be saved to.\n Returns the empty string when using the same directory the recording is in.\n\nParameters:\nFavorite- the Favorite object\nReturns:\nthe destination directory for the automatic conversions of this Favorite; or null if its the same as the recording directory\nSince:\n7.0\n\n\n\n","returnType":"java.io.File"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"},{"dataType":"long","varName":"StartPadding"}],"name":"SetStartPadding","comment":"Sets the amount of time any recording for this Favorite should start before the actual Airing begins.\n\nParameters:\nFavorite- the Favorite object\nStartPadding- the amount of time any recording for this Favorite should start before the actual Airing begins, in milliseconds\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"},{"dataType":"long","varName":"StopPadding"}],"name":"SetStopPadding","comment":"Sets the amount of time any recording for this Favorite should stop after the actual Airing ends.\n\nParameters:\nFavorite- the Favorite object\nStopPadding- the amount of time any recording for this Favorite should stop after the actual Airing ends, in milliseconds\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"},{"dataType":"java.lang.String","varName":"Quality"}],"name":"SetFavoriteQuality","comment":"Sets the name of the recording quality that should be used when recording this Favorite.\n\nParameters:\nFavorite- the Favorite object\nQuality- the name of the recording quality that should be used when recording this Favorite, the empty string if the default recording quality should be used\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"},{"dataType":"java.lang.String","varName":"Format"}],"name":"SetFavoriteAutomaticConversionFormat","comment":"Sets the name of the format to transcode this Favorite to after a recording has been completed. Format names should come fromGetTranscodeFormats()\n.\n Use the empty string or null to disable automatic conversion for this Favorite.\n\nParameters:\nFavorite- the Favorite object\nFormat- the name of the transcode format to use when converting recordings of this Favorite; the empty string or null to disable automatic conversion\nSince:\n7.0\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"},{"dataType":"java.io.File","varName":"Folder"}],"name":"SetFavoriteAutomaticConversionDestination","comment":"Sets the directory that automatic conversions of this favorite should be saved to.\n Use null to use the same directory the recording is in.\n\nParameters:\nFavorite- the Favorite object\nFolder- the destination directory for the automatic conversions of this Favorite; null to use the same directory as the recording directory\nSince:\n7.0\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Favorite","varName":"HigherPriorityFavorite"},{"dataType":"sage.Favorite","varName":"LowerPriorityFavorite"}],"name":"CreateFavoritePriority","comment":"Establishes a priority of one Favorite over another. This will take undo any previous prioritization that it directly conflicts with.\n Favorites with a higher priority will be recorded over ones with a lower priority if there's a case where both cannot be recorded at once.\n\nParameters:\nHigherPriorityFavorite- the Favorite object that you wish to make a higher priority than the other specified Favorite object\nLowerPriorityFavorite- the Favorite object that you wish to make a lower priority than the other specified Favorite object\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Airing","varName":"ManualRecordAiring"},{"dataType":"sage.Airing","varName":"FavoriteAiring"}],"name":"ConfirmManualRecordOverFavoritePriority","comment":"Confirms that the user is aware that a manual recording they've selected creates a conflict with this favorite recording. This is purely\n for notifcation purposes.\n\nParameters:\nManualRecordAiring- the manual record Airing object to confirm the recording priority of\nFavoriteAiring- the Airing for the Favorite that won't be recorded due to the manual record\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"},{"dataType":"boolean","varName":"DontAutoDelete"}],"name":"SetDontAutodelete","comment":"Sets whether or not SageTV is allowed to automatically delete recordings of this\n Favorite when it needs more disk space. If this is true, then SageTV will never automatically\n delete files recorded for this Favorite; the user will have to delete the files themself.\n\nParameters:\nFavorite- the Favorite object\nDontAutoDelete- true if this Favorite is configured to NOT auto delete, false otherwise\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"},{"dataType":"boolean","varName":"DeleteAfterAutomaticConversion"}],"name":"SetDeleteAfterAutomaticConversion","comment":"Sets whether or not SageTV should delete the original file after doing an automatic conversion\n for this Favorite\n\nParameters:\nFavorite- the Favorite object\nDeleteAfterAutomaticConversion- true if this Favorite is configured to delete the source file after automatic conversion\nSince:\n7.0\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"},{"dataType":"int","varName":"NumberToKeep"}],"name":"SetKeepAtMost","comment":"Sets the maximum number of recordings that match this Favorite that should be kept on disk. If AutoDelete is\n set to true then SageTV will continue to record new airings of this Favorite as they air, and delete the oldest\n recording on disk if it hits the keep at most limit. If AutoDelete is false then SageTV will stop recording this Favorite\n once it has this many recordings on disk\n\nParameters:\nFavorite- the Favorite object\nNumberToKeep- the maximum number of recordings SageTV should keep on disk of this Favorite, 0 if it is unlimited\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"},{"dataType":"boolean","varName":"FirstRuns"},{"dataType":"boolean","varName":"ReRuns"}],"name":"SetRunStatus","comment":"Sets whether first runs, reruns or both types of airings should be recorded for this Favorite. If both arguments\n are false, SageTV will record both first runs and reruns.\n\nParameters:\nFavorite- the Favorite object\nFirstRuns- true if first runs should be recorded with this favorite, false otherwise\nReRuns- true if rerusn should be recorded with this Favorite, false otherwise\nReturns:\ntrue if the change was successful, false if the change would alter this Favorite to be identical to an existing Favorite or if the user doesn't have permissions to make this change\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"},{"dataType":"java.lang.String","varName":"Title"}],"name":"SetFavoriteTitle","comment":"Sets the title that an Airing must match to be included in this Favorite.\n\nParameters:\nFavorite- the Favorite object\nTitle- the title that an Airing must match to be included in this Favorite, use the empty string or null if the title isn't a field that needs to match\nReturns:\ntrue if the change was successful, false if the change would alter this Favorite to be identical to an existing Favorite or if the user doesn't have permissions to make this change\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"},{"dataType":"java.lang.String","varName":"Category"},{"dataType":"java.lang.String","varName":"SubCategory"}],"name":"SetFavoriteCategories","comment":"Sets the category and optionally the subcategory that an Airing must match to be included in this Favorite.\n\nParameters:\nFavorite- the Favorite object\nCategory- the category that an Airing must match to be included in this Favorite, use the empty string or null if the category isn't a field that needs to match\nSubCategory- the category that an Airing must match to be included in this Favorite, use the empty string the subcategory doesn't need to match\nReturns:\ntrue if the change was successful, false if the change would alter this Favorite to be identical to an existing Favorite or if the user doesn't have permissions to make this change\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"},{"dataType":"java.lang.String","varName":"Person"},{"dataType":"java.lang.String","varName":"Role"}],"name":"SetFavoritePerson","comment":"Sets a person (and optionally the role the person must appear in) that must be in an Airing for it to be included in this Favorite\n\nParameters:\nFavorite- the Favorite object\nPerson- the name of the person that needs to be included in an Airing for it to match this Favorite, use the empty string or null if person doesn't need to match\nRole- the name of the role the corresponding person needs to be in, or the emptry string or null if role doesn't matter\nReturns:\ntrue if the change was successful, false if the change would alter this Favorite to be identical to an existing Favorite or if the user doesn't have permissions to make this change\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"},{"dataType":"java.lang.String","varName":"Rated"}],"name":"SetFavoriteRated","comment":"Sets the rating that an Airing must match to be included in this Favorite.\n\nParameters:\nFavorite- the Favorite object\nRated- the rating that an Airing must match to be included in this Favorite, use the empty string or null if rating isn't a field that needs to match\nReturns:\ntrue if the change was successful, false if the change would alter this Favorite to be identical to an existing Favorite or if the user doesn't have permissions to make this change\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"},{"dataType":"java.lang.String","varName":"Year"}],"name":"SetFavoriteYear","comment":"Sets the year that an Airing must match to be included in this Favorite.\n\nParameters:\nFavorite- the Favorite object\nYear- the year that an Airing must match to be included in this Favorite, use the empty string or null if year isn't a field that needs to match\nReturns:\ntrue if the change was successful, false if the change would alter this Favorite to be identical to an existing Favorite or if the user doesn't have permissions to make this change\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"},{"dataType":"java.lang.String","varName":"ParentalRating"}],"name":"SetFavoriteParentalRating","comment":"Sets the parental rating that an Airing must match to be included in this Favorite.\n\nParameters:\nFavorite- the Favorite object\nParentalRating- the parental rating that an Airing must match to be included in this Favorite, use the empty string or null if parental rating isn't a field that needs to match\nReturns:\ntrue if the change was successful, false if the change would alter this Favorite to be identical to an existing Favorite or if the user doesn't have permissions to make this change\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"},{"dataType":"java.lang.String","varName":"Keyword"}],"name":"SetFavoriteKeyword","comment":"Sets the keyword string that an Airing must match to be included in this Favorite. This is case insensitive. Double quotes\n can be used to require word to be in a certain order. Otherwise; each individual word is searched for in the Airing's details and must\n match a whole word for the match to succeed.  The * character can be used to match 0 or more characters. The ? character can be used\n to match a single character. Regex is the matching language used for this so any other regex parsing characters besides * and ? can be used.\n All of the fields of the object are searched as part of this.\n\nParameters:\nFavorite- the Favorite object\nKeyword- the keyword that an Airing must match to be included in this Favorite, use the empty string or null if keyword doesn't matter\nReturns:\ntrue if the change was successful, false if the change would alter this Favorite to be identical to an existing Favorite or if the user doesn't have permissions to make this change\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"},{"dataType":"java.lang.Object","varName":"Channel"}],"name":"SetFavoriteChannel","comment":"Sets the channel name (call sign) that an Airing must be on to be included in this Favorite.\n\nParameters:\nFavorite- the Favorite object\nChannel- the channel name (String) or Channel object (Channel) that an Airing must be on to be included in this Favorite, use null or the empty string if channel doesn't matter; you may also use a semicolon or comma-delimited list of channel names for mult-channel favorites\nReturns:\ntrue if the change was successful, false if the change would alter this Favorite to be identical to an existing Favorite or if the user doesn't have permissions to make this change\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"},{"dataType":"java.lang.String","varName":"Network"}],"name":"SetFavoriteNetwork","comment":"Sets the network name that an Airing must be on to be included in this Favorite.\n\nParameters:\nFavorite- the Favorite object\nNetwork- the network name that an Airing must be on to be included in this Favorite, use null or the empty string if network doesn't matter\nReturns:\ntrue if the change was successful, false if the change would alter this Favorite to be identical to an existing Favorite or if the user doesn't have permissions to make this change\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"},{"dataType":"java.lang.String","varName":"Timeslot"}],"name":"SetFavoriteTimeslot","comment":"Sets the timeslot that an Airing must be in to be included in this Favorite. It just needs to overlap the timeslot.\n\nParameters:\nFavorite- the Favorite object\nTimeslot- the timeslot that an Airing must be in to be included in this Favorite, use null or the empty string if timeslot doesn't matter.\n         The timeslot should be in one of three formats: 1) Day Time, 2) Day, 3) Time. Where Day is a day of the week, and Time is an\n         hour of the day such as 3pm or 8:00 (if the user's locale uses am/pm then it'll be like 3pm, otherwise it'll use like 8:00).\n         Multiple timeslots are allowed and should be sent as a semicolon delimited list; an Airing only needs to overlap one of the timeslots to match the Favorite then.\n                   Multiple timeslots must also all be of the same type (i.e. all DayTime, all Day or all Time).\nReturns:\ntrue if the change was successful, false if the change would alter this Favorite to be identical to an existing Favorite or if the user doesn't have permissions to make this change\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Airing","varName":"Airing"}],"name":"GetFavoriteForAiring","comment":"Gets the Favorite that matches this Airing if one exists.\n\nParameters:\nAiring- the Airing object to get a matching Favorite for\nReturns:\na Favorite object that matches this Airing or null if there is no such Favorite\n\n\n\n","returnType":"sage.Favorite"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"},{"dataType":"sage.Airing","varName":"Airing"}],"name":"DoesFavoriteMatchAiring","comment":"Returns true if the specified Favorite object matches the specified Airing object.\n\nParameters:\nFavorite- the Favorite object to test\nAiring- the Airing object to test\nReturns:\ntrue if the specified Favorite matches the specified Airing, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.Object","varName":"Favorite"}],"name":"IsFavoriteObject","comment":"Returns true if the argument is a Favorite object, false otherwise\n\nParameters:\nFavorite- an object to test to see if its an instance of Favorite\nReturns:\ntrue if the argument is an instance of a Favorite object, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"},{"dataType":"java.lang.String","varName":"Title"},{"dataType":"boolean","varName":"FirstRuns"},{"dataType":"boolean","varName":"ReRuns"},{"dataType":"java.lang.String","varName":"Category"},{"dataType":"java.lang.String","varName":"SubCategory"},{"dataType":"java.lang.String","varName":"Person"},{"dataType":"java.lang.String","varName":"RoleForPerson"},{"dataType":"java.lang.String","varName":"Rated"},{"dataType":"java.lang.String","varName":"Year"},{"dataType":"java.lang.String","varName":"ParentalRating"},{"dataType":"java.lang.String","varName":"Network"},{"dataType":"java.lang.String","varName":"ChannelCallSign"},{"dataType":"java.lang.String","varName":"Timeslot"},{"dataType":"java.lang.String","varName":"Keyword"}],"name":"UpdateFavorite","comment":"Updates all of the fields of a Favorite that can be used to match. The rules for the arguments are specified in the\n individual methods that allow settting of the corresponding parameter.\n\nParameters:\nFavorite- the Favorite object to update\nTitle- the title that an Airing must match to be included in this Favorite, use the empty string or null if the title isn't a field that needs to match\nFirstRuns- true if this Favorite should match First Runs, false otherwise\nReRuns- true if this Favorite should match ReRuns, false otherwise\nCategory- the category that an Airing must match to be included in this Favorite, use the empty string or null if category isn't a field that needs to match\nSubCategory- the subcategory that an Airing must match to be included in this Favorite, use the empty string or null if subcategory isn't a field that needs to match\nPerson- the name of the person that needs to be included in an Airing for it to match this Favorite, use the empty string or null if person doesn't need to match\nRoleForPerson- the name of the role the corresponding person needs to be in, or the emptry string or null if role doesn't matter\nRated- the rating that an Airing must match to be included in this Favorite, use the empty string or null if rating isn't a field that needs to match\nYear- the year that an Airing must match to be included in this Favorite, use the empty string or null if year isn't a field that needs to match\nParentalRating- the parental rating that an Airing must match to be included in this Favorite, use the empty string or null if parental rating isn't a field that needs to match\nNetwork- the network name that an Airing must be on to be included in this Favorite, use null or the empty string if network doesn't matter\nChannelCallSign- the channel name that an Airing must be on to be included in this Favorite, use null or the empty string if channel doesn't matter; you may also use a semicolon or comma-delimited list of channel names for mult-channel favorites\nTimeslot- the timeslot that an Airing must be in to be included in this Favorite, use null or the empty string if timeslot doesn't matter.\n         The timeslot should be in one of three formats: 1) Day Time, 2) Day, 3) Time. Where Day is a day of the week, and Time is an\n         hour of the day such as 3pm or 8:00 (if the user's locale uses am/pm then it'll be like 3pm, otherwise it'll use like 8:00)\n         Multiple timeslots are allowed and should be sent as a semicolon delimited list; an Airing only needs to overlap one of the timeslots to match the Favorite then.\n                   Multiple timeslots must also all be of the same type (i.e. all DayTime, all Day or all Time).\nKeyword- the keyword that an Airing must match to be included in this Favorite, use the empty string or null if keyword doesn't matter\nReturns:\nthe updated Favorite object, or if the changes would make this Favorite the same as an existing Favorite, the other existing Favorite is returned, null is returned if there was no valid criteria specified in the arguments\n\n\n\n","returnType":"sage.Favorite"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"GetFavoriteAirings","comment":"Returns a list of all of the Airings in the database that match this Favorite.\n\nParameters:\nFavorite- the Favorite object\nReturns:\nthe list of Airings in the DB that match this Favorite\n\n\n\n","returnType":"sage.Airing[]"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"GetFavoriteID","comment":"Gets a unique ID for this Favorite which can be used withGetFavoriteForID()\nfor retrieving the object later.\n\nParameters:\nFavorite- the Favorite object\nReturns:\nthe unique ID for this Favorite\n\n\n\n","returnType":"int"},{"args":[{"dataType":"int","varName":"FavoriteID"}],"name":"GetFavoriteForID","comment":"Gets the Favorite object with the corresponding ID from the database. Use withGetFavoriteID()\n\n\nParameters:\nFavoriteID- the ID to look up in the DB for a Favorite object\nReturns:\nthe Favorite object with the specified ID if it exists, null otherwise\n\n\n\n","returnType":"sage.Favorite"},{"args":[],"name":"GetFavorites","comment":"Gets all of the Favorite objects from the database\n\nReturns:\nall of the Favorite objects in the database\n\n\n\n","returnType":"sage.Favorite[]"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"RemoveFavorite","comment":"Removes a Favorite object from the database. Airings matching this Favorite will not necesarilly be automatically recorded anymore (intelligent recording may still record them)\n\nParameters:\nFavorite- the Favorite object to remove\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"Title"},{"dataType":"boolean","varName":"FirstRuns"},{"dataType":"boolean","varName":"ReRuns"},{"dataType":"java.lang.String","varName":"Category"},{"dataType":"java.lang.String","varName":"SubCategory"},{"dataType":"java.lang.String","varName":"Person"},{"dataType":"java.lang.String","varName":"RoleForPerson"},{"dataType":"java.lang.String","varName":"Rated"},{"dataType":"java.lang.String","varName":"Year"},{"dataType":"java.lang.String","varName":"ParentalRating"},{"dataType":"java.lang.String","varName":"Network"},{"dataType":"java.lang.String","varName":"ChannelCallSign"},{"dataType":"java.lang.String","varName":"Timeslot"},{"dataType":"java.lang.String","varName":"Keyword"}],"name":"AddFavorite","comment":"Creates a new Favorite object in SageTV. Airings that match this Favorite will be recorded and saved into the SageTV Recordings.\n\nParameters:\nTitle- the title that an Airing must match to be included in this Favorite, use the empty string or null if the title isn't a field that needs to match\nFirstRuns- true if this Favorite should match First Runs, false otherwise\nReRuns- true if this Favorite should match ReRuns, false otherwise (if both FirstRuns and ReRuns are false, then it will match both)\nCategory- the category that an Airing must match to be included in this Favorite, use the empty string or null if category isn't a field that needs to match\nSubCategory- the subcategory that an Airing must match to be included in this Favorite, use the empty string or null if subcategory isn't a field that needs to match\nPerson- the name of the person that needs to be included in an Airing for it to match this Favorite, use the empty string or null if person doesn't need to match\nRoleForPerson- the name of the role the corresponding person needs to be in, or the emptry string or null if role doesn't matter\nRated- the rating that an Airing must match to be included in this Favorite, use the empty string or null if rating isn't a field that needs to match\nYear- the year that an Airing must match to be included in this Favorite, use the empty string or null if year isn't a field that needs to match\nParentalRating- the parental rating that an Airing must match to be included in this Favorite, use the empty string or null if parental rating isn't a field that needs to match\nNetwork- the network name that an Airing must be on to be included in this Favorite, use null or the empty string if network doesn't matter\nChannelCallSign- the channel name that an Airing must be on to be included in this Favorite, use null or the empty string if channel doesn't matter; you may also use a semicolon or comma-delimited list of channel names for multi-channel favorites\nTimeslot- the timeslot that an Airing must be in to be included in this Favorite, use null or the empty string if timeslot doesn't matter.\n         The timeslot should be in one of three formats: 1) Day Time, 2) Day, 3) Time. Where Day is a day of the week, and Time is an\n         hour of the day such as 3pm or 8:00 (if the user's locale uses am/pm then it'll be like 3pm, otherwise it'll use like 8:00)\n         Multiple timeslots are allowed and should be sent as a semicolon delimited list; an Airing only needs to overlap one of the timeslots to match the Favorite then.\n                   Multiple timeslots must also all be of the same type (i.e. all DayTime, all Day or all Time).\nKeyword- the keyword that an Airing must match to be included in this Favorite, use the empty string or null if keyword doesn't matter\nReturns:\nthe newly created Favorite object, null is returned if there was no valid criteria specified in the arguments\n\n\n\n","returnType":"sage.Favorite"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"},{"dataType":"java.lang.String","varName":"PropertyName"}],"name":"GetFavoriteProperty","comment":"Returns a property value for a specified Favorite. This must have been set using SetFavoriteProperty.\n Returns the empty string when the property is undefined.\n\nParameters:\nFavorite- the Favorite object\nPropertyName- the name of the property\nReturns:\nthe property value for the specified Favorite, or the empty string if it is not defined\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"},{"dataType":"java.lang.String","varName":"PropertyName"},{"dataType":"java.lang.String","varName":"PropertyValue"}],"name":"SetFavoriteProperty","comment":"Sets a property for this Favorite. This can be any name/value combination (but the name cannot be null). If the value is null;\n then the specified property will be removed from this Favorite. This only impacts the return values from GetFavoriteProperty and has no other side effects.\n\nParameters:\nFavorite- the Favorite object\nPropertyName- the name of the property\nPropertyValue- the value of the property\nSince:\n7.0\n\n\n\n","returnType":"void"},{"args":[{"dataType":"sage.Favorite","varName":"Favorite"}],"name":"GetFavoriteProperties","comment":"Returns a java.util.Properties object that has all of the user-set properties for this Favorite in it.\n\nParameters:\nFavorite- the Favorite object\nReturns:\na java.util.Properties object that has all of the user-set properties for this Favorite in it; this is a copy of the original one so it is safe to modify it\nSince:\n7.1\n\n\n\n","returnType":"java.util.Properties"}],"name":"FavoriteAPI"},"Global":{"methods":[{"args":[],"name":"Refresh","comment":"Re-evaluates and redraws all UI elements on the current menu\n\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"WidgetName"}],"name":"RefreshArea","comment":"Finds the Widget on the current menu who's name matches the argument and then re-evaluates and redraws all UI elements, and their children for this Widget\n\nParameters:\nWidgetName- the name that a UI component's Widget must match, if null or zero length, then this is the same as callingRefresh()\n\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"Name"},{"dataType":"java.lang.Object","varName":"Value"}],"name":"RefreshAreaForVariable","comment":"Searches all visible UI elements in the current menu finding any that have a variable with the specified name \n matching the specified value. For any elements it finds, it will re-evaluate and redraws its UI elements, and its children\n\nParameters:\nName- the name of the variable to match\nValue- the value of the variable to match on\nSince:\n6.6\n\n\n\n","returnType":"void"},{"args":[],"name":"Repaint","comment":"Redraws all UI elements on the current menu\n\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"WidgetName"}],"name":"RepaintArea","comment":"Finds the Widget on the current menu who's name matches the argument and then redraws all UI elements, and their children for this Widget\n\nParameters:\nWidgetName- the name that a UI component's Widget must match, if null or zero length, then this is the same as callingRepaint()\n\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"Name"},{"dataType":"java.lang.Object","varName":"Value"}],"name":"AddStaticContext","comment":"Sets the variable with the specified name to the specified value. This variable will \n exist for the lifetime of the current Menu. When the next Menu transition occurs, \n all values in the static context will be copied to the highest level context for the new Menu. \n The static context is then cleared. This is the way you can pass an Object from one menu to \n another, an example is showing the detailed info for an Airing by adding the Airing to the \n static context and then transitioning to a Menu that will display the details for that Airing.\n\nParameters:\nName- the name to use for this 'static context' variable\nValue- the value to set this 'static context' variable to\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.lang.String","varName":"Name"},{"dataType":"java.lang.Object","varName":"Value"}],"name":"AddGlobalContext","comment":"Sets the variable with the specified name to the specified value. This variable \n will exist for the lifetime of the SageTV application and is always in scope for all expression evaluation. This is a 'global variable'.\n\nParameters:\nName- the name to use for this 'global context' variable\nValue- the value to set this 'global context' variable to\n\n\n\n","returnType":"java.lang.Object"},{"args":[],"name":"AreThereUnresolvedConflicts","comment":"Returns whether or not there are unresolved scheduling conflicts\n\nReturns:\ntrue if there are unresolved scheduling conflicts, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[],"name":"IsAsleep","comment":"Returns true if SageTV is in the Sleep state.\n\nReturns:\ntrue if SageTV is in the Sleep state\n\n\n\n","returnType":"boolean"},{"args":[],"name":"GetTotalDiskspaceAvailable","comment":"Gets the total diskspace available for television recording by SageTV. This is the unused space in the video directories.\n\nReturns:\nthe total diskspace available for television recording by SageTV (in bytes)\n\n\n\n","returnType":"long"},{"args":[],"name":"GetTotalLibraryDuration","comment":"Returns the total duration of all of the content in the media library\n\nReturns:\nthe total duration of all of the content in the media library in milliseconds\n\n\n\n","returnType":"long"},{"args":[],"name":"GetTotalVideoDuration","comment":"Returns the total duration of all of the recorded television content\n\nReturns:\nthe total duration of all of the recorded television content in milliseconds\n\n\n\n","returnType":"long"},{"args":[],"name":"GetUsedLibraryDiskspace","comment":"Returns the total number of bytes on disk used by the content in the imported video, picturees and music libraries\n\nReturns:\nthe total number of bytes on disk used by the content in the imported video, picturees and music libraries\n\n\n\n","returnType":"long"},{"args":[],"name":"GetUsedVideoDiskspace","comment":"Returns the total number of bytes on disk used by recorded television content\n\nReturns:\nthe total number of bytes on disk used by recorded television content\n\n\n\n","returnType":"long"},{"args":[{"dataType":"sage.Airing","varName":"Airing1"},{"dataType":"sage.Airing","varName":"Airing2"}],"name":"AreAiringsSameShow","comment":"Returns true if two Airings represent the same Show. This means that they both are the same content (i.e. one is a repeat of the other)\n Just because two Airings use the same Show object (in terms of object reference) doesn't mean this call will return true.\n\nParameters:\nAiring1- one of the two Airing objects to compare\nAiring2- the other Airing object to compare\nReturns:\ntrue if two Airings represent the same Show, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[],"name":"GetLastEPGDownloadTime","comment":"Returns the last time that SageTV did an EPG update. The returned value uses the same units as java.lang.System.currentTimeMillis()\n\nReturns:\nthe last time that SageTV did an EPG update\n\n\n\n","returnType":"long"},{"args":[{"dataType":"java.lang.String","varName":"LogoName"}],"name":"GetLogo","comment":"Gets an Image object that represents the specified name. This is normally used for Channel Logos.\n\nParameters:\nLogoName- the name to use to lookup the logo image\nReturns:\nthe image object that corresponds to the specified name if one exists, the null image otherwise\n\n\n\n","returnType":"sage.MetaImage"},{"args":[],"name":"GetTimeUntilNextEPGDownload","comment":"The amount of time in milliseconds until SageTV will perform an EPG update again. Zero if no update is planned.\n\nReturns:\nthe amount of time in milliseconds until SageTV will perform an EPG update again. Zero if no update is planned\n\n\n\n","returnType":"long"},{"args":[],"name":"GetAllLineups","comment":"Returns the name of all the EPG lineups in the system\n\nReturns:\na list of all the names of the EPG lineups in the system\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"Lineup"}],"name":"IsChannelDownloadComplete","comment":"Returns true if the channel download has been completed on the specified lineup\n\nParameters:\nLineup- the name of the Lineup\nReturns:\ntrue if the channel download has been completed on the specified lineup, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[],"name":"GetLocalMarketsFromEPGServer","comment":"Gets a list of all the possible United States local broadcast markets from the EPG server\n\nReturns:\na list of all the possible United States local broadcast markets from the EPG server\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"ZipCode"}],"name":"GetLineupsForZipCodeFromEPGServer","comment":"Gets a list from the EPG server of all the possible EPG Lineups that are available in a given zip code\n\nParameters:\nZipCode- the zip code to search for EPG lineups in\nReturns:\na list from the EPG server of all the possible EPG lineups in the specified zip code\n\n\n\n","returnType":"java.lang.String[]"},{"args":[],"name":"GetCurrentlyRecordingMediaFiles","comment":"Returns a list of all of the files that SageTV is currently recording\n\nReturns:\na list of all of the files that SageTV is currently recording\n\n\n\n","returnType":"sage.MediaFile[]"},{"args":[],"name":"GetSuggestedIntelligentRecordings","comment":"Gets a list of all of the Airings that SageTV would record if Intelligent Recording was enabled.\n This does not include Manual Recordings or Favorites.\n\nReturns:\na list of all of the Airings that SageTV would record if Intelligent Recording was enabled.\nSince:\n4.1\n\n\n\n","returnType":"sage.Airing[]"},{"args":[],"name":"GetScheduledRecordings","comment":"Gets a list of all of the Airings that SageTV is planning to record in the future\n\nReturns:\na list of all of the Airings that SageTV is planning to record in the future\n\n\n\n","returnType":"sage.Airing[]"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDevice"}],"name":"GetScheduledRecordingsForDevice","comment":"Gets a list of all of the Airings that SageTV is planning to record in the future on the specified CaptureDevice\n\nParameters:\nCaptureDevice- the name of a CaptureDevice for SageTV to get the scheduled recordings for\nReturns:\na list of all of the Airings that SageTV is planning to record in the future on the specified CaptureDevice\n\n\n\n","returnType":"sage.Airing[]"},{"args":[{"dataType":"long","varName":"StartTime"},{"dataType":"long","varName":"StopTime"}],"name":"GetScheduledRecordingsForTime","comment":"Gets a list of all of the Airings that SageTV is planning on recording during the specified time span\n\nParameters:\nStartTime- the starting time to get all of the scheduled recordings for\nStopTime- the ending time to get all of the scheduled recordings for\nReturns:\na list of all of the Airings that SageTV is planning on recording during the specified start-stop time window\n\n\n\n","returnType":"sage.Airing[]"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDevice"},{"dataType":"long","varName":"StartTime"},{"dataType":"long","varName":"StopTime"}],"name":"GetScheduledRecordingsForDeviceForTime","comment":"Gets a list of all of the Airings that SageTV is planning on recording during the specified time span on a specified CaptureDevice\n\nParameters:\nCaptureDevice- the name of a CaptureDevice for SageTV to get the scheduled recordings for\nStartTime- the starting time to get all of the scheduled recordings for\nStopTime- the ending time to get all of the scheduled recordings for\nReturns:\na list of all of the Airings that SageTV is planning on recording during the specified start-stop time window on the specified CaptureDevice\n\n\n\n","returnType":"sage.Airing[]"},{"args":[{"dataType":"long","varName":"DurationToLookBack"}],"name":"GetRecentlyWatched","comment":"Gets a list of all of the Airings that have been watched within the specified amount of time\n\nParameters:\nDurationToLookBack- tha amount of time in milliseconds that should be searched for watched Airings\nReturns:\na list of all of the Airings that have been watched within the specified amount of time\n\n\n\n","returnType":"sage.Airing[]"},{"args":[{"dataType":"boolean","varName":"WaitUntilDone"}],"name":"RunLibraryImportScan","comment":"Tells SageTV to run a library import scan now. This will scan all of the library import directories for new content.\n\nParameters:\nWaitUntilDone- if this parameter is true then this call will not return until SageTV has finished the import scan, otherwise it returns immediately\n\n\n\n","returnType":"void"},{"args":[],"name":"Exit","comment":"Causes the SageTV application to terminate. If this is called from the non-primary UI session then it will terminate the UI session it is called from.\n\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"Command"}],"name":"SageCommand","comment":"Causes the corresponding Sage Command to be executed just like it would be if the user performed it. \n These are always done asynchronously with the exception of \"Back\" and \"Forward\" since those effect \n the current UI and may be used to override a menu transition.\n\nParameters:\nCommand- the name of the Sage Command to execute\n\n\n\n","returnType":"void"},{"args":[],"name":"RemoveUnusedLineups","comment":"Removes all of the lineups from SageTV's configuration that are no longer in use by a CaptureDevice\n\nReturns:\ntrue if any lineups were removed, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[],"name":"GetApplicationLaunchTime","comment":"Returns the time that the SageTV application was instantiated.\n\nReturns:\nthe time that the SageTV application was instantiated\n\n\n\n","returnType":"long"},{"args":[],"name":"GetFocusContext","comment":"Copies all variables from the currently focused UI element's variable context to the current context \n of the calling Action. Any variables that are in a common parent hierarchy are not copied as part of this.\n\nReturns:\ntrue if there was a focused element and it's context was copied, false if there was no focused element found\n\n\n\n","returnType":"boolean"},{"args":[],"name":"Fork","comment":"Spawns a new thread of execution that will be used for further processing of Widget chain. This is analagous to 'forking' a thread\n to continue execution of a widget chain in parallel to the current system execution.\n\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"TuningPlugin"},{"dataType":"int","varName":"TuningPluginPort"},{"dataType":"java.lang.String","varName":"RemoteName"},{"dataType":"java.lang.String","varName":"CommandName"},{"dataType":"int","varName":"RepeatFactor"}],"name":"TransmitCommandUsingInfraredTuningPlugin","comment":"Causes SageTV to instruct the specified tuning plugin to send a command\n\nParameters:\nTuningPlugin- the name of the tuning plugin that should send the command\nTuningPluginPort- the name of the port the specified tuning plugin is on\nRemoteName- the name of the 'Remote Control' that should be used to send the command\nCommandName- the name of the command to be sent\nRepeatFactor- the 'repeat factor' to use for sending the infrared command, 2 is the default\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"DebugString"}],"name":"DebugLog","comment":"Prints out a message to SageTV's debug log\n\nParameters:\nDebugString- the string to print out\n\n\n\n","returnType":"void"},{"args":[],"name":"CloseOptionsMenu","comment":"Closes the last OptionsMenu that was shown and continues execution of the Action \n chain that spawned that OptionsMenu at the sibling after this OptionsMenu. The \n feature of continuing execution can be used to prompt the user with a question \n through an OptionsMenu before continuing on execution of an Action chain.  \n An example is confirming something they just did before it actually gets done.\n\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"WidgetName"},{"dataType":"boolean","varName":"WaitForClose"}],"name":"CloseOptionsMenu","comment":"Closes the OptionsMenu who's Widget name (or themed Widget name) matches that of the argument and continues execution of the Action \n chain that spawned that OptionsMenu at the sibling after this OptionsMenu. The \n feature of continuing execution can be used to prompt the user with a question \n through an OptionsMenu before continuing on execution of an Action chain.\n An example is confirming something they just did before it actually gets done.\n If this OptionsMenu is not on top, then it cannot be closed until it becomes the one on top.\n\nParameters:\nWidgetName- the name of the Widget for the OptionsMenu or the themed OptionsMenu source for that Widget that should be closed\nWaitForClose- if true then this call will not return until the specified OptionsMenu target is closed\nReturns:\nreturns true if the target OptionsMenu is not open or if it was closed as a result of this call, will only return false if waitForClose is true and the target OptionsMenu is not on top\nSince:\n7.1\n\n\n\n","returnType":"boolean"},{"args":[],"name":"IsOptionsMenuOpen","comment":"Returns true if an options menu is currently open in the UI.\n\nReturns:\ntrue if an options menu is currently open in the UI, false otherwise\nSince:\n7.1\n\n\n\n","returnType":"boolean"},{"args":[],"name":"GetSageCommandNames","comment":"Gets the names of all of the SageTV commands that are available in the system\n\nReturns:\na list of the names of all of the SageTV commands that are available in the system\n\n\n\n","returnType":"java.util.Vector"},{"args":[{"dataType":"java.lang.String","varName":"Lineup"},{"dataType":"int","varName":"ServiceLevel"}],"name":"ApplyServiceLevelToLineup","comment":"Applies a service level to a given lineup. This is specific to the EPG data source that is being used.\n\nParameters:\nLineup- the name of the EPG lineup to modify\nServiceLevel- the service level to apply to the lineup\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"Name"},{"dataType":"java.lang.Object","varName":"Value"}],"name":"SetFocusForVariable","comment":"Searches all UI elements in the current menu until it finds one that has a variable with the specified name \n matching the specified value. Once it finds this UI element, it gives it the focus.  If scrolling of a table \n or panel is necessary to make it visible, that scrolling will occur.\n\nParameters:\nName- the name of the variable to match\nValue- the value of the variable to match on\nReturns:\ntrue if the focus was set\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"Name"},{"dataType":"java.lang.Object","varName":"Value"},{"dataType":"int","varName":"DisplayIndex"}],"name":"EnsureVisibilityForVariable","comment":"Searches the tables in the current menu for a cell that matches the passed in name/value pair; \n if found it will ensure that it is currently visible in the UI at the specified visual index of the table. \n The name should match the name of the TableComponent-Cell. For example if the TableComponent with a Cell \n subtype had a name of \"File\" and listed all of the MediaFiles; then calling \n EnsureVisibilityForVariable(\"File\", MyMediaFile, 1) would cause the table to scroll so that the second row \n showed the cell whose File value corresponded to MyMediaFile.  This does NOT change the focus, \n if you wish to scroll a table and shift the focus then use SetFocusForVariable\n\nParameters:\nName- the name of the variable to match on\nValue- the value of the variable to match\nDisplayIndex- 0-based value signifying which visually displayed row or column should show the corresonding cell\nReturns:\ntrue if there was a matching variable found\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"MatchName"},{"dataType":"java.lang.Object","varName":"MatchValue"},{"dataType":"java.lang.String","varName":"LookupName"}],"name":"GetVariableFromContext","comment":"Searches all UI elements in the current menu until it finds one that has a variable with the specified name \n matching the specified value. Once it finds this UI element, it then does a lookup of the other\n specified variable in that UI element's context and returns that value\n\nParameters:\nMatchName- the name of the variable to match\nMatchValue- the value of the variable to match on\nLookupName- the variable to lookup in the matching context\nReturns:\nthe value of the variable\nSince:\n7.0\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.lang.String","varName":"MatchName"},{"dataType":"java.lang.Object","varName":"MatchValue"}],"name":"GetVisibilityForVariable","comment":"Searches all UI elements in the current menu until it finds one that has a variable with the specified name \n matching the specified value. Once it finds this UI element, it will return true if that UI element is currently\n visible and false otherwise\n\nParameters:\nMatchName- the name of the variable to match\nMatchValue- the value of the variable to match on\nReturns:\ntrue if the found component is visible, false otherwise\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"MatchName"},{"dataType":"java.lang.Object","varName":"MatchValue"}],"name":"GetUIComponentForVariable","comment":"Searches all UI elements in the current menu until it finds one that has a variable with the specified name \n matching the specified value. It then returns on Object representing that UI component. The search method\n prefers visible components over hidden ones.\n\nParameters:\nMatchName- the name of the variable to match\nMatchValue- the value of the variable to match on\nReturns:\nthe UI component with the specified variable set\nSince:\n7.0\n\n\n\n","returnType":"java.lang.Object"},{"args":[],"name":"GetUIComponentContext","comment":"Returns the UI component that this execution originated from. For\n 'green' process chains; this will correspond to the UI component that received the event. For 'blue'\n UI chains; this will correspond to the UI component who's conditionality is being determined or who's data\n is being evaluated. This will be null if there is no UI context; such as for non-UI hooks and calls made from\n Java directly.\n\nReturns:\nthe UIComponent that corresponds to the UI context used for the current evaluation, null if there is no context\nSince:\n7.0\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.lang.Object","varName":"UIComponent"}],"name":"SetFocusToUIComponent","comment":"Sets focus in the specified UI component. The UIComponent must be focusable for this to succeed\n\nParameters:\nUIComponent- the specified UIComponent, can be retrieved usingGetUIComponentForVariable\nAPI call\nReturns:\ntrue if setting the focus in the specified component succeeded, false otherwise\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.Object","varName":"UIComponent"}],"name":"GetTableFocusedVisibleRow","comment":"Gets the row number that currently has focus in the specified table. The argument may be the table itself; or a component between\n the table and the focused component.\n\nParameters:\nUIComponent- the specified UIComponent, can be retrieved usingGetUIComponentForVariable\nAPI call\nReturns:\nthe row number (1-based) which is currently focused in the table, -1 is returned if the value can't be resolved\nSince:\n7.0\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.Object","varName":"UIComponent"}],"name":"GetTableFocusedVisibleColumn","comment":"Gets the column number that currently has focus in the specified table. The argument may be the table itself; or a component between\n the table and the focused component.\n\nParameters:\nUIComponent- the specified UIComponent, can be retrieved usingGetUIComponentForVariable\nAPI call\nReturns:\nthe column number (1-based) which is currently focused in the table, -1 is returned if the value can't be resolved\nSince:\n7.0\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.Object","varName":"UIComponent"}],"name":"GetTableFocusedVisiblePosition","comment":"Gets thevisibletable position that currently has focus in the specified table. The argument may be the table itself; or a component between\n the table and the focused component. This starts counting from the first component which is currently visible in the table.\n\nParameters:\nUIComponent- the specified UIComponent, can be retrieved usingGetUIComponentForVariable\nAPI call\nReturns:\nthe visible position (1-based) which is currently focused in the table, -1 is returned if the value can't be resolved\nSince:\n7.0\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.Object","varName":"UIComponent"}],"name":"GetTableFocusedPosition","comment":"Gets the table position that currently has focus in the specified table. The argument may be the table itself; or a component between\n the table and the focused component. This is the equivalent of the \"TableRow\" variable for the currently focused table cell; which is\n the cell's index in the data backing the table.\n\nParameters:\nUIComponent- the specified UIComponent, can be retrieved usingGetUIComponentForVariable\nAPI call\nReturns:\nthe position (1-based) which is currently focused in the table, -1 is returned if the value can't be resolved\nSince:\n7.0\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.Object","varName":"UIComponent"},{"dataType":"int","varName":"Offset"},{"dataType":"boolean","varName":"WrapIndex"}],"name":"GetDataFromTableFocusedOffset","comment":"Gets the data value for the table that is used for the cell at the specified position relative to what is currentlyfocusedfor the table. The UIComponent should either be the table itself; or it should have the desired table as an ancestor of it.\n Position values are zero-based; and may be negative. If WrapIndex is false then positions greater then the size of the table's data or\n less than zero will return null; otherwise they will be mod'd to return a value within the range of the data.\n\nParameters:\nUIComponent- the specified UIComponent, can be retrieved usingGetUIComponentForVariable\nAPI call\nOffset- the offset of the cell who's table data should be returned; relative to the current focused position (last focused if not currently focused)\nWrapIndex- true if offsets that fall outside of the size of the data should be wrapped so that they return a data value\nReturns:\nthe value of the table data at the specified offset\nSince:\n7.0\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.lang.Object","varName":"UIComponent"},{"dataType":"int","varName":"Offset"},{"dataType":"boolean","varName":"WrapIndex"}],"name":"GetDataFromTableVisiblePosition","comment":"Gets the data value for the table that is used for the cell at the specified position relative to what is currentlyvisiblefor the table. The UIComponent should either be the table itself; or it should have the desired table as an ancestor of it.\n Offset values are zero-based; and may be negative. If WrapIndex is false then positions greater then the size of the table's data or\n less than zero will return null; otherwise they will be mod'd to return a value within the range of the data.\n\nParameters:\nUIComponent- the specified UIComponent, can be retrieved usingGetUIComponentForVariable\nAPI call\nOffset- the offset of the cell who's table data should be returned; relative to the first visible position\nWrapIndex- true if offsets that fall outside of the size of the data should be wrapped so that they return a data value\nReturns:\nthe value of the table data at the specified offset\nSince:\n7.0\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.lang.Object","varName":"UIComponent"}],"name":"IsTableTransitionToNext","comment":"Returns true if the specified table argument (or the first table parent of the argument) is on the leading edge of a transition\n to a cell after the current one. It could be a page event, or a moving a single unit. Right and Down directionality is considered to be 'next'.\n This can be used to trigger effects that relate to navigation occurring in a table. This will only be true for a single rendering pass on the\n leading edge of the transition. Focus will be moved before this becomes true. If effect animations are disabled; this will always return false.\n\nParameters:\nUIComponent- the specified UIComponent, can be retrieved usingGetUIComponentForVariable\nAPI call\nReturns:\ntrue if the table is currently transitioning in the next direction\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.Object","varName":"UIComponent"}],"name":"IsTableTransitionToPrevious","comment":"Returns true if the specified table argument (or the first table parent of the argument) is on the leading edge of a transition\n to a cell before the current one. It could be a page event, or a moving a single unit. Left and Up directionality is considered to be 'previous'.\n This can be used to trigger effects that relate to navigation occurring in a table. This will only be true for a single rendering pass on the\n leading edge of the transition. Focus will be moved before this becomes true. If effect animations are disabled; this will always return false.\n\nParameters:\nUIComponent- the specified UIComponent, can be retrieved usingGetUIComponentForVariable\nAPI call\nReturns:\ntrue if the table is currently transitioning in the previous direction\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"MenuName"}],"name":"IsTransitioningToMenu","comment":"Returns true if the specified menu name matches the name of the menu widget that the UI is in the process\n of transitioning to. This will only be true during the processing of MenuUnloaded effects. If a null argument is given; then this is\n true in the case that any menu transition is about to occur. The name match is case-insensitive.\n\nParameters:\nMenuName- the name of the menu to test to see if we're transitioning to; null if it matches any menu name\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"MenuName"}],"name":"IsTransitioningFromMenu","comment":"Returns true if the specified menu name matches the name of the menu widget for the previously loaded menu. The name match is case-insensitive.\n UnlikeIsTransitioningToMenu, this is true even after the transition is complete. A null argument always returns false.\n\nParameters:\nMenuName- the name of the menu to test to see if it was the previously loaded menu\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.Object","varName":"UIComponent"}],"name":"GetTextForUIComponent","comment":"Gets the value displayed for the textual component of the specified UI object. If its not a Text component; then\n its children will be searched depth-first until one is found and then that will be used for the return value.\n\nParameters:\nUIComponent- the specified UIComponent, can be retrieved usingGetUIComponentForVariable\nAPI call\nReturns:\nthe text value displayed by the argument itself; or if its not a text component then the value displayed by the first text child of the component; null if neither condition is met\nSince:\n7.0\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.Object","varName":"UIComponent"}],"name":"GetUIComponentLastFocusedChild","comment":"If the specified component currently has a focused child; that child's UI object will\n be returned. If not, then the last focused child for this component will be returned.\n\nParameters:\nUIComponent- the specified UIComponent, can be retrieved usingGetUIComponentForVariable\nAPI call\nReturns:\nthe currently focused child UI object for the specified component if it exists; otherwise the last focused child UI object for the specified component\nSince:\n7.0\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.lang.Object","varName":"UIComponent"}],"name":"GetUIComponentPositionX","comment":"Returns the X position in pixels in the UI of the specified UI component. This will be a value relative to the overall UI; not its parent.\n\nParameters:\nUIComponent- the specified UIComponent, can be retrieved usingGetUIComponentForVariable\nAPI call\nReturns:\nthe X position in pixels relative to the overall UI of the specified component\nSince:\n7.0\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.Object","varName":"UIComponent"}],"name":"GetUIComponentPositionY","comment":"Returns the Y position in pixels in the UI of the specified UI component. This will be a value relative to the overall UI; not its parent.\n\nParameters:\nUIComponent- the specified UIComponent, can be retrieved usingGetUIComponentForVariable\nAPI call\nReturns:\nthe Y position in pixels relative to the overall UI of the specified component\nSince:\n7.0\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.Object","varName":"UIComponent"}],"name":"GetUIComponentWidth","comment":"Returns the width in pixels in the UI of the specified UI component.\n\nParameters:\nUIComponent- the specified UIComponent, can be retrieved usingGetUIComponentForVariable\nAPI call\nReturns:\nthe width in pixels of the specified component\nSince:\n7.0\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.Object","varName":"UIComponent"}],"name":"GetUIComponentHeight","comment":"Returns the height in pixels in the UI of the specified UI component.\n\nParameters:\nUIComponent- the specified UIComponent, can be retrieved usingGetUIComponentForVariable\nAPI call\nReturns:\nthe height in pixels of the specified component\nSince:\n7.0\n\n\n\n","returnType":"int"},{"args":[{"dataType":"java.lang.Object","varName":"UIComponent"},{"dataType":"java.lang.String","varName":"Command"},{"dataType":"int","varName":"RepeatCount"}],"name":"SendEventToUIComponent","comment":"Sends an event to a specific UI component for processing. Similar to using theSageCommand()\nAPI call, but this\n version is targeted at a specific component. Normal event processing of cursor navigation, selection, entry events will continue up the hierarchy from the target component if it\n does not consume it; it will stop at the menu level though and any menu-level default handling for the event will not occur (i.e. media player control, menu navigation, power, etc.).\n\nParameters:\nUIComponent- the UIComponent object to target the event at, can be retrieved usingGetUIComponentForVariable\nAPI call\nCommand- the name of the command to send\nRepeatCount- the number of times to send the command\nReturns:\ntrue if the event was consumed by the target component's hierarchy\nSince:\n7.0\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.lang.Object","varName":"UIComponent"},{"dataType":"java.lang.String","varName":"MatchName"},{"dataType":"java.lang.Object","varName":"MatchValue"}],"name":"GetChildUIComponentForVariable","comment":"Searches all child UI elements in of the specified UIComponent until it finds one that has a variable with the specified name \n matching the specified value. It then returns on Object representing that UI component\n\nParameters:\nUIComponent- the UI component who's children should be searched\nMatchName- the name of the variable to match\nMatchValue- the value of the variable to match on\nReturns:\nthe UI component with the specified variable set\nSince:\n7.0\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.lang.Object","varName":"UIComponent"},{"dataType":"java.lang.String","varName":"VarName"}],"name":"GetVariableFromUIComponent","comment":"Retrieves the variable with the specified name from the context of the passed in UIComponent.\n\nParameters:\nUIComponent- the UI component who's variable should be returned\nVarName- the name of the variable to lookup\nReturns:\nthe value of the variable\nSince:\n7.0\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.lang.Object","varName":"UIComponent"},{"dataType":"java.lang.String","varName":"VarName"},{"dataType":"java.lang.Object","varName":"VarValue"}],"name":"SetVariableForUIComponent","comment":"Sets the variable with the specified name in the context of the passed in UIComponent. This behaves the same way as\n if an assignment was done to that variable within the passed in UIComponent context within the Studio. This may result\n in setting the value at a higher level in the hierarchy if the variable is defined above the specified component.\n\nParameters:\nUIComponent- the UI component who's context should be used when setting the variable\nVarName- the name of the variable to set\nVarValue- the value to set the variable to\nSince:\n7.1\n\n\n\n","returnType":"void"},{"args":[],"name":"PassiveListen","comment":"Should only be used in the Action chain from a Listener Widget. Normally SageTV will stop processing Listeners \n for an event once the first one is reached. If you use PassiveListen() in the action chain for a \n Listener then SageTV will not stop processing at the current Listener.\n\n\n\n\n","returnType":"void"},{"args":[{"dataType":"boolean","varName":"OnlyUnresolved"}],"name":"GetAiringsThatWontBeRecorded","comment":"Returns all of the Airings that the user has requested to record that SageTV will not be recording. This would be due to\n scheduling conflicts.\n\nParameters:\nOnlyUnresolved- if true then only unresolved scheduling conflicts will be returned, if false then all conflicts will be returned\nReturns:\nthe list of Airings that will not be recorded due to scheduling conflicts\n\n\n\n","returnType":"java.util.Vector"},{"args":[],"name":"IsClient","comment":"Returns true if this is an instance of SageTV Client\n\nReturns:\ntrue if this is an instance of SageTV Client, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[],"name":"IsRemoteUI","comment":"Returns true if this UI is being remoted onto another device such as a media extender. This also returns\n true for Placeshifter clients.\n\nReturns:\ntrue if this UI is being remoted onto another device such as a media extender, false otherwise\nSince:\n4.1\n\n\n\n","returnType":"boolean"},{"args":[],"name":"IsDesktopUI","comment":"Returns true if this UI is being run in a desktop environment. It may or may not be remoted. This is\n intended to distinguish Placeshifter clients from Media Extenders since both return true for IsRemoteUI().\n\nReturns:\ntrue if this UI is being run in a desktop environment, false otherwise\nSince:\n4.1.10\n\n\n\n","returnType":"boolean"},{"args":[],"name":"IsServerUI","comment":"Returns true if this UI is being run on the same system as the SageTV Server it's connected to.\n Also returns true for standalone SageTV applications. This indicates the UI should have the ability\n to configure all 'server' based options. For SageTVClient, you must be connected to the loopback address\n for this to return true.\n\nReturns:\ntrue if this is the main UI for a SageTV Server\nSince:\n5.0.5\n\n\n\n","returnType":"boolean"},{"args":[],"name":"GetConnectedClients","comment":"Returns a list of all the clients that are currently connected to this server.\n\nReturns:\na list of all the clients that are currently connected to this server.\n\n\n\n","returnType":"java.lang.String[]"},{"args":[],"name":"GetUIContextNames","comment":"Returns a list of the names of the different UI contexts that are available. One will be the local context\n which is the UI for the SageTV app (which doesn't exist in service mode). The other contexts can be UIs that\n are for remote devices such as media extenders. This context name can then be passed back in using\n the sage.SageTV.apiUI(String uiContextName, String methodName, Object[] args) call in order to execute an API call\n from Java within a specific UI context.  For media extenders, these names generally correspond to the MAC address\n of the media extender.\n\nReturns:\na list of the UI context names available\nSince:\n4.1\n\n\n\n","returnType":"java.lang.String[]"},{"args":[],"name":"GetUIContextName","comment":"Returns the name of the UI context that makes the API call. SeeGetUIContextNames()\nfor more information.\n\nReturns:\nthe UI context name that made this API call, null if there is no UI context\nSince:\n5.1\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"GetRemoteClientVersion","comment":"Returns the version string for this connected remote client\n\nReturns:\nthe version string for this connected remote client, or the empty string if it's undefined or not a remote client\nSince:\n6.4\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"GetRemoteUIType","comment":"Returns the type of client that is connected on this remote interface\n\nReturns:\nthe type of client that is connected on this remote interface; this can be one of \"SD Media Extender\", \"HD Media Extender\", \"HD Media Player\", \"Placeshifter\" or \"Local\"\nSince:\n6.4\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"sage.Channel","varName":"Channel"},{"dataType":"long","varName":"StartTime"},{"dataType":"long","varName":"StopTime"},{"dataType":"java.lang.String","varName":"Recurrence"}],"name":"CreateTimedRecording","comment":"Creates a new time based recording for SageTV.\n\nParameters:\nChannel- the Channel object that this recording should be performed on\nStartTime- the time the recording should begin\nStopTime- the time the recording should end\nRecurrence- the name of the recurrence to use; this can be either Once, Daily, Weekly or Continuous (Continuous as of V6.6)\n               (or a localized version of one of those); OR it can be a combination of any of the following strings to indicate specified \n                days: Su, Mo, Tu, We, Th, Fr, Sa (for example, MoTuWe to do Mondays, Tuesdays and Wednesdays)\nReturns:\ntrue if the creation of the timed recording succeeded, otherwise a localized error string is returned\n\n\n\n","returnType":"java.lang.Object"},{"args":[],"name":"IsFullScreen","comment":"Returns whether or not SageTV is in full screen mode\n\nReturns:\ntrue if SageTV is in full screen mode, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"boolean","varName":"FullScreen"}],"name":"SetFullScreen","comment":"Sets SageTV to be in full or non-full screen mode\n\nParameters:\nFullScreen- true if SageTV should be put into full screen mode, false if it should be put into windowed mode\n\n\n\n","returnType":"void"},{"args":[],"name":"GetServerAddress","comment":"Gets the hostname of the SageTV server if this is a client, otherwise it returns the name of the host SageTV is running on\n\nReturns:\nthe hostname of the SageTV server if this is a client, otherwise it returns the name of the host SageTV is running on\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"GetOS","comment":"Gets the name of the operating system that is being used.\n\nReturns:\nthe name of the operating system that is being used\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"IsWindowsOS","comment":"Returns true if SageTV is currently running on a Windows operating system.\n\nReturns:\ntrue if SageTV is currently running on a Windows operating system, false otherwise\n\n\n\n","returnType":"boolean"},{"args":[],"name":"IsLinuxOS","comment":"Returns true if SageTV is currently running on a Linux operating system.\n\nReturns:\ntrue if SageTV is currently running on a Linux operating system, false otherwise\nSince:\n6.0.20\n\n\n\n","returnType":"boolean"},{"args":[],"name":"IsMacOS","comment":"Returns true if SageTV is currently running on a Macintosh operating system.\n\nReturns:\ntrue if SageTV is currently running on a Macintosh operating system, false otherwise\nSince:\n6.0.20\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"sage.Playlist","varName":"BurnList"}],"name":"DVDBurnTheBurnList","comment":"Instructs the DVD burning engine inside SageTV to start prepping the specified Playlist to be burned to a DVD, and then perform the actual burn.\n NOTE: Currently this is only supported on the Linux operating system\n\nParameters:\nBurnList- the Playlist of all of the video files to burn to the DVD\nReturns:\ntrue if the burn process was successfully started, otherwise a localized error message string is returned\n\n\n\n","returnType":"java.lang.Object"},{"args":[],"name":"DVDCancelBurn","comment":"Cancels a previous request that was made to perform DVD burning.\n\n\n\n\n","returnType":"void"},{"args":[],"name":"DVDGetCurrentBurnStatus","comment":"Gets the current status of a previously invoked DVD burning process.\n\nReturns:\ntrue if the DVD burning process is completed and was a success, \"Error\" if it completed and was a failure, \n          otherwise a localized status message indicating progress is returned\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"sage.Playlist","varName":"BurnList"}],"name":"CDBurnTheBurnList","comment":"Instructs the CD burning engine inside SageTV to start prepping the specified Playlist to be burned to a CD, and then perform the actual burn.\n NOTE: Currently this is only supported on the Linux operating system\n\nParameters:\nBurnList- the Playlist of all of the music files to burn to the CD\nReturns:\ntrue if the burn process was successfully started, otherwise a localized error message string is returned\n\n\n\n","returnType":"java.lang.Object"},{"args":[],"name":"CDCancelBurn","comment":"Cancels a previous request that was made to perform CD burning.\n\n\n\n\n","returnType":"void"},{"args":[],"name":"CDGetCurrentBurnStatus","comment":"Gets the current status of a previously invoked CD burning process.\n\nReturns:\ntrue if the CD burning process is completed and was a success, \"Error\" if it completed and was a failure, \n          otherwise a localized status message indicating progress is returned\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.io.File","varName":"LibraryDir"},{"dataType":"java.lang.String","varName":"BitrateKbps"}],"name":"CDRipToLibrary","comment":"Instructs the CD ripping engine to rip the contents of a CD and encode it in MP3 format and then store it in the music library.\n NOTE: This is currently only supported on the Linux operating system\n\nParameters:\nLibraryDir- the directory that the ripped files should be stored in, if the space on this disk is managed by SageTV it will make room for the files that are to be ripped\nBitrateKbps- the bitrate to use for the audio encoding in kilobits per second\nReturns:\ntrue if the ripping process was successfully started, otherwise a localized error message string is returned\n\n\n\n","returnType":"java.lang.Object"},{"args":[],"name":"CDCancelRip","comment":"Cancels a previous request that was made to perform CD ripping\n\n\n\n\n","returnType":"void"},{"args":[],"name":"CDGetCurrentRipStatus","comment":"Gets the current status of a previously invoked CD ripping process.\n\nReturns:\ntrue if the CD ripping process is completed and was a success, \"Error\" if it completed and was a failure, \n          otherwise a localized status message indicating progress is returned\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.lang.String","varName":"Filename"},{"dataType":"java.lang.String","varName":"SourceDirectory"},{"dataType":"java.io.File","varName":"DestDirectory"}],"name":"StartFileCopy","comment":"Instructs the file transfer engine to copy the specified file(s) from the source directory to the destination directory.\n If there is no filename specified then the contents of the directory are copied recursively. If the destination directory\n is within the path of SageTV managed diskspace then the appropriate free space will be cleared on the disk in order for the file copy to succeed.\n This also works for uploading files from a SageTV client to a SageTV server.\n\nParameters:\nFilename- the name of the file in the SourceDirectory to copy, or null if the whole directory should be copied\nSourceDirectory- the source directory for the file copy (smb:// paths are OK)\nDestDirectory- the destination directory for the file copy\nReturns:\ntrue if the copy process was successfully started, false if the file copy is unable to be performed\n\n\n\n","returnType":"java.lang.Object"},{"args":[],"name":"CancelFileCopy","comment":"Cancels a previous request that was made to perform a file copy\n\n\n\n\n","returnType":"void"},{"args":[],"name":"GetFileCopyStatus","comment":"Gets the current status of a previously invoked file copy process.\n\nReturns:\ntrue if the file copy process is completed and was a success, \"Error\" will be the prefix if it was a failure, \n          otherwise a localized status message indicating progress is returned\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.lang.String","varName":"ServerAddress"},{"dataType":"java.lang.String","varName":"SourceFile"},{"dataType":"java.io.File","varName":"DestFile"}],"name":"StartFileDownload","comment":"Instructs the file transfer engine to download the specified file from the server to the local destination file. You may also\n download from remote http:// or ftp:// addresses; in that case just specify the URL in the ServerAddress argument and leave sourceFile as null.\n When downloading from http or ftp addresses, the target will be the server's filesystem for remote clients; otherwise it is the local filesystem.\n When smb:// URLs are specified; they will be access from the server's network for remote clients, otherwise the source will be from the local network.\n smb:// URLs target download will be the local filesystem. Only one download process is allowed per-UI using the 'FileDownload' API calls. If you wish\n to handle multiple downloads; then use the 'BackgroundFileDownload' API calls.\n\nParameters:\nServerAddress- the address of the SageTV server to download from, or null if you're using SageTVClient and you want to download from the server you're connected to, or a valid smb, http or ftp URL\nSourceFile- the file path on the server you want to download\nDestFile- the destination file for the file download\nReturns:\ntrue if the copy process was successfully started, false if the file doesn't exist on the server or it couldn't be contacted\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"ServerAddress"},{"dataType":"java.lang.String","varName":"SourceFile"},{"dataType":"java.io.File","varName":"DestFile"},{"dataType":"java.util.Properties","varName":"RequestProperties"}],"name":"StartBackgroundFileDownload","comment":"Instructs the file transfer engine to download the specified file from the server to the local destination file. You may also\n download from remote http:// or ftp:// addresses; in that case just specify the URL in the ServerAddress argument and leave sourceFile as null.\n When downloading from http or ftp addresses, the target will be the server's filesystem for remote clients; otherwise it is the local filesystem.\n When smb:// URLs are specified; they will be access from the server's network for remote clients, otherwise the source will be from the local network.\n smb:// URLs target download will be the local filesystem. This call is different then the regular StartFileDownload API call because it allows for multiple\n downloads to occur at the same time. The 'key' for the downloads are the DestFile objects.\n\nParameters:\nServerAddress- the address of the SageTV server to download from, or null if you're using SageTVClient and you want to download from the server you're connected to, or a valid smb, http or ftp URL\nSourceFile- the file path on the server you want to download\nDestFile- the destination file for the file download\nRequestProperties- a Properties object that specifies the request properties to use in an HTTP download request, can be null\nReturns:\ntrue if the copy process was successfully started, false if the file doesn't exist on the server or it couldn't be contacted\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.lang.String","varName":"ServerAddress"},{"dataType":"java.lang.String","varName":"SourceFile"},{"dataType":"java.io.File","varName":"DestFile"}],"name":"StartCircularFileDownload","comment":"Instructs the file transfer engine to download the specified file from the server to the local destination file. You may also\n download from remote http:// or ftp:// addresses; in that case just specify the URL in the ServerAddress argument and leave sourceFile as null.\n When downloading from http or ftp addresses, the target will be the server's filesystem for remote clients; otherwise it is the local filesystem.\n When smb:// URLs are specified; they will be access from the server's network for remote clients, otherwise the source will be from the local network.\n smb:// URLs target download will be the local filesystem.\n The 'Circular' version of this API call will write to a temporary circular file; this is designed for systems with limited storage capacity.\n This version of the API call may not be used by SageTVClient (if it is; then it will internally switch to the non-circular file method)\n\nParameters:\nServerAddress- the address of the SageTV server to download from, or null if you're using SageTVClient and you want to download from the server you're connected to, or a valid smb, http or ftp URL\nSourceFile- the file path on the server you want to download\nDestFile- the destination file for the file download\nReturns:\ntrue if the copy process was successfully started, false if the file doesn't exist on the server or it couldn't be contacted\nSince:\n6.4\n\n\n\n","returnType":"boolean"},{"args":[],"name":"CancelFileDownload","comment":"Cancels a previous request that was made to perform a file download\n\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.io.File","varName":"DestFile"}],"name":"CancelBackgroundFileDownload","comment":"Cancels a previous request that was made to perform a background file download.\n\nParameters:\nDestFile- the destination file specified in the original download request\nSince:\n7.0\n\n\n\n","returnType":"void"},{"args":[],"name":"GetFileDownloadStatus","comment":"Gets the current status of a previously invoked file download process.\n\nReturns:\ntrue if the file download process is completed and was a success, \"Error\" will be the prefix if it was a failure, \n          otherwise a localized status message indicating progress is returned\n\n\n\n","returnType":"java.lang.Object"},{"args":[{"dataType":"java.io.File","varName":"DestFile"}],"name":"GetBackgroundFileDownloadStatus","comment":"Gets the current status of a previously invoked file background download process.\n\nParameters:\nDestFile- the destination file specified in the original download request\nReturns:\ntrue if the file download process is completed and was a success, \"Error\" will be the prefix if it was a failure, \n          otherwise a localized status message indicating progress is returned\nSince:\n7.0\n\n\n\n","returnType":"java.lang.Object"},{"args":[],"name":"GetFileDownloadStreamTime","comment":"Gets the current stream time of a previously invoked file download process. This is only valid\n for when the file being downloaded is an FLV, MP3, MP4 or Quicktime file\n\nReturns:\nthe stream time in milliseconds of the current download; or zero if it doesn't know\nSince:\n6.3\n\n\n\n","returnType":"long"},{"args":[],"name":"IsFileDownloadProgressivePlay","comment":"Returns whether or not the current file being downloaded can be played back while being downloaded. This is only valid\n for when the file being downloaded is an FLV, MP3, MP4 or Quicktime file. It will always be true for MP3 & FLV files; \n and for MP4/Quicktime files it'll be true if the sample section is before the movie data in the file. If this is true\n and the download stream time is greater than zero; then it's OK to start progressive playback of downloaded media.\n\nReturns:\ntrue if the current file being downloaded can potentially be played back while being downloaded, false if it definitely cannot be\nSince:\n6.3\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.io.File","varName":"DestFile"}],"name":"GetBackgroundFileDownloadStreamTime","comment":"Gets the current stream time of a previously invoked file download process. This is only valid\n for when the file being downloaded is an FLV, MP3, MP4 or Quicktime file\n\nParameters:\nDestFile- the destination file specified in the original download request\nReturns:\nthe stream time in milliseconds of the current download; or zero if it doesn't know or the download is completed\nSince:\n7.0\n\n\n\n","returnType":"long"},{"args":[{"dataType":"java.io.File","varName":"DestFile"}],"name":"IsBackgroundFileDownloadProgressivePlay","comment":"Returns whether or not the current file being downloaded can be played back while being downloaded. This is only valid\n for when the file being downloaded is an FLV, MP3, MP4 or Quicktime file. It will always be true for MP3 & FLV files; \n and for MP4/Quicktime files it'll be true if the sample section is before the movie data in the file. If this is true\n and the download stream time is greater than zero; then it's OK to start progressive playback of downloaded media.\n\nParameters:\nDestFile- the destination file specified in the original download request\nReturns:\ntrue if the current file being downloaded can potentially be played back while being downloaded, false if it definitely cannot be or is an invalid or completed download\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[{"dataType":"java.io.File","varName":"DestFile"}],"name":"GetBackgroundFileDownloadTotalSize","comment":"Gets the total size of the specified background download target. This may not always be known in cases\n where the server does not indicate the specific length of the file.\n\nParameters:\nDestFile- the destination file specified in the original download request\nReturns:\nthe size in bytes of the remote file being downloaded; zero if the download specified is complete or invalid\nSince:\n7.0\n\n\n\n","returnType":"long"},{"args":[{"dataType":"boolean","varName":"EnableEncryption"}],"name":"SetRemoteEventEncryptionEnabled","comment":"This is used to enable/disable encryption on the event channel for the SageTV MiniClient. The MiniClient is used\n for the media extenders and for placeshifting. When using a non-local MiniClient connection, or if local MiniClient\n connections are configured to require authentication; the event channel between the two will start off in an encrypted\n mode so that a password can be exchanged.  This API call can then be used with a false argument to disable encryption\n of the event channel in order to increase performance. It can also be used to re-enable encryption at a later time if\n sensitive information is going to be transmitted again.\n\nParameters:\nEnableEncryption- true if the MiniClient event channel should start encrypting events, false if it should stop\nReturns:\ntrue if the MiniClient supports encryption and the operation should succeed, the connection will terminate if it fails\nSince:\n4.1.7\n\n\n\n","returnType":"boolean"},{"args":[],"name":"CachePlaceshifterLogin","comment":"This is used to store an authentication block on the current client that it can use in the future to automatically\n connect to this server w/out having to login. The channel must be encrypted when this call is made. See the API call\n SetRemoteEventEncryptionEnabled for more details on that.\n\nSince:\n6.6\n\n\n\n","returnType":"void"},{"args":[],"name":"CanCachePlaceshifterLogin","comment":"This indicates whether the server and the client both support caching of placeshifter logins.\n\nReturns:\ntrue if both the server and client support caching of placeshifter login information\nSince:\n6.6\n\n\n\n","returnType":"boolean"},{"args":[],"name":"ReloadSystemHooks","comment":"This is a Windows only API call which tells SageTV to unload and then reload any system hooks it has installed.\n This allows reconfiguration of parameters in the UI and then realization of those changes on the fly.\n\nSince:\n4.1.13\n\n\n\n","returnType":"void"},{"args":[],"name":"UpdateLocatorServer","comment":"This API call can be used to tell SageTV to do an update with the Locator server right now.\n It's useful for when you change external network configuration stuff like ports or IPs.\n\nSince:\n4.1.13\n\n\n\n","returnType":"void"},{"args":[],"name":"GetFullUIWidth","comment":"Returns the width in pixels of the user interface for the calling SageTV UI context.\n\nReturns:\nthe width in pixels of the user interface for the calling SageTV UI context\nSince:\n5.1\n\n\n\n","returnType":"int"},{"args":[],"name":"GetFullUIHeight","comment":"Returns the height in pixels of the user interface for the calling SageTV UI context.\n\nReturns:\nthe height in pixels of the user interface for the calling SageTV UI context\nSince:\n5.1\n\n\n\n","returnType":"int"},{"args":[],"name":"GetDisplayResolutionWidth","comment":"Returns the width in pixels of the current display resolution set\n\nReturns:\nthe width in pixels of the current display resolution set\nSince:\n5.1\n\n\n\n","returnType":"int"},{"args":[],"name":"GetDisplayResolutionHeight","comment":"Returns the height in pixels of the current display resolution set\n\nReturns:\nthe height in pixels of the current display resolution set\nSince:\n5.1\n\n\n\n","returnType":"int"},{"args":[],"name":"GetDisplayResolution","comment":"Returns a string describing the current display resolution set\n\nReturns:\na string describing the current display resolution set\nSince:\n6.3\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"GetDisplayResolutionOptions","comment":"Returns a list of the possible display resolutions. This is currently only used\n on media extender devices that have adjustable output resolution\n\nReturns:\nan array of the display resolution names that can be used, null if this change is not supported\nSince:\n6.0\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"Resolution"}],"name":"GetDisplayResolutionDetails","comment":"Returns the detailed format description for the specific resolution returned from GetDisplayResolutionOptions()\n NOTE: This API call is only valid on embedded platforms.\n\nReturns:\na the detailed format description for a specific Resolution\nSince:\n6.4\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"GetPreferredDisplayResolutions","comment":"Returns a list of the preferred display resolutions. This is currently only used\n on media extender devices that have adjustable output resolution. This information is obtained from the HDMI/DVI connector\n\nReturns:\na list of the preferred display resolutions\nSince:\n6.3\n\n\n\n","returnType":"java.lang.String[]"},{"args":[{"dataType":"java.lang.String","varName":"Resolution"}],"name":"SetDisplayResolution","comment":"Sets the current output display resolution. This is currently only used\n on media extender devices that have adjustable output resolution.\n\nParameters:\nResolution- this must be a value fromGetDisplayResolutionOptions()\nand should be the new desired output resolution\nSince:\n6.0\n\n\n\n","returnType":"void"},{"args":[{"dataType":"long","varName":"Timeout"}],"name":"DiscoverSageTVServers","comment":"Returns a list of the SageTV servers on the network. Each item will be \"name;IP address\"\n\nParameters:\nTimeout- the timeout for the discovery process in milliseconds\nReturns:\nan array of the SageTV servers on the network. Each item will be \"name;IP address\"\nSince:\n6.3\n\n\n\n","returnType":"java.lang.String[]"},{"args":[],"name":"IsEmbeddedSystem","comment":"Returns true if running on an 'embedded' platform. This will be true for the standalone environment on products like the HD300\n and false otherwise. Used for making STVs that have different options based on whether they're on a PC vs. embedded system.\n\nReturns:\ntrue if running on an embedded system, false otherwise\nSince:\n7.0\n\n\n\n","returnType":"boolean"},{"args":[],"name":"IsEmbeddedServer","comment":"Returns true if running on an 'embedded' platform in standalone mode or running as a SageTV Client that is connected to a server running on an embedded platform. \n This will be true for the standalone environment on products like the HD300\n and false otherwise. Used for making STVs that have different options based on whether they're on a PC vs. embedded system.\n\nReturns:\ntrue if running against an embedded server, false otherwise\nSince:\n7.1\n\n\n\n","returnType":"boolean"},{"args":[],"name":"IsPVR","comment":"Returns true if running on a system or connected to a server that has PVR functionality. Used for making STVs that have different options based on whether\n or not PVR functionality is available. Even if no capture devices are configured and the system is PVR capable, this will still return true.\n\nReturns:\ntrue if PVR is available, false otherwise\nSince:\n7.1\n\n\n\n","returnType":"boolean"},{"args":[],"name":"GetHotplugStorageMap","comment":"Returns a map of name->file for any hotplug storage devies on the system. The\n names are user-presentable and the path is the java.io.File root which corresponds to the root of that device.\n NOTE: This is only valid on embedded platforms.\n\nReturns:\na Map of name->file for hotplugged storage devices\nSince:\n6.4\n\n\n\n","returnType":"java.util.Map"},{"args":[],"name":"IsDoingLibraryImportScan","comment":"Returns true if the server is currently scanning the import directories for new files\n\nReturns:\ntrue if the server is currently scanning the import directories for new files\nSince:\n6.6\n\n\n\n","returnType":"boolean"},{"args":[],"name":"PrepareForFirmwareLoad","comment":"Prepares the device for a firmware download & flash. This internally will stop the library importing process,\n empty all of the database tables, clear the UI caches, and then force a complete garbage collection.\n NOTE: This is only valid on embedded platforms.\n\nSince:\n7.0\n\n\n\n","returnType":"void"},{"args":[],"name":"GetEmbeddedPanel","comment":"Gets a java.awt.Panel which can be used for embedding Java UI elements directly into SageTV\n\nReturns:\na java.awt.Panel object which can be sized, made visible and have children added to it\n\n\n\n","returnType":"java.awt.Panel"},{"args":[{"dataType":"float","varName":"x"},{"dataType":"float","varName":"y"},{"dataType":"float","varName":"width"},{"dataType":"float","varName":"height"}],"name":"SetEmbeddedPanelBounds","comment":"Sets the bounding region to be used for the embedded panel. These are floating point numbers relative to the total size of the UI.\n\nParameters:\nx- the relative X position (0.0-1.0)\ny- the relative Y position (0.0-1.0)\nwidth- the relative width (0.0-1.0)\nheight- the relative height (0.0-1.0)\nSince:\n6.4\n\n\n\n","returnType":"void"},{"args":[],"name":"GetAvailableUpdate","comment":"Implemented on Linux only\n\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"AvailableUpdate"}],"name":"DeployAvailableUpdate","comment":"Implemented on Linux only\n\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"Languages"}],"name":"GetLineupsForTvtv","comment":"The single lineup for tvtv.\n\nParameters:\nLanguages- language, this parameter is currently ignored.\nReturns:\nthe standard tvtv provider id, { \"601\" }\n\n\n\n","returnType":"java.lang.String[]"},{"args":[],"name":"TvtvGetHost","comment":"User selected host/language.\n\nReturns:\nthe tvtv host,lang; default is \"www.tvtv.de,de\"\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"TvtvGetHostList","comment":"Valid host/language list from www.tvtv.de, for SageTV.\n User should select one.\n\nReturns:\nall valid host/language\n\n\n\n","returnType":"java.lang.String[]"},{"args":[],"name":"TvtvCreateNewAccount","comment":"Deprecated. \n\nLaunch default browser to tvtvHost.\n User can create an account, and then proceed to activate a Trial.\n\n\n\n\n","returnType":"void"},{"args":[],"name":"TvtvGetUser","comment":"Returns:\nusername\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"Username"},{"dataType":"java.lang.String","varName":"Password"},{"dataType":"java.lang.String","varName":"Host"}],"name":"TvtvConfigureUser","comment":"Establish user configuration.\n\nParameters:\nUsername- (as used during TvtvCreateNewAccount)\nPassword- (stored in encrypted form)\nHost- (one of TvtvGetHostList)\n\n\n\n","returnType":"void"},{"args":[],"name":"TvtvGetAccountStatus","comment":"Returns:\naccount status:\n   OK\n   INVALID:USER (invalid username or password)\n   INVALID:TVTV (an unknown TvTv error)\n   ERROR (communication error, network error)\n\n\n\n","returnType":"java.lang.String"},{"args":[],"name":"TvtvGetAccountStatusMessage","comment":"Returns:\na message about account status\n\n\n\n","returnType":"java.lang.String"},{"args":[{"dataType":"java.lang.String","varName":"serial"}],"name":"TvtvMessage","comment":"Gather TvTv user messages.\n\nParameters:\nserial- null (to access the first message) OR serial value from last invocation\nReturns:\nString[] { serial, date, subject, message }\n\n\n\n","returnType":"java.lang.String[]"},{"args":[],"name":"TvtvLogoLink","comment":"Launch a browser in response to user click on TvTv logo.\n\n\n\n\n","returnType":"void"},{"args":[],"name":"TvtvCreateSpecificAccount","comment":"TvtvCreateSpecificAccount.\n\nSince:\n4.1\n\n\n\n","returnType":"void"},{"args":[],"name":"TvtvActivateTrial","comment":"Deprecated. \n\nActivate TvTv trial, if available, for the current user configuration.\n\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"}],"name":"TvtvDownloadStations","comment":"Begin downloading stations.\n\nParameters:\nCaptureDeviceInput-\n\n\n\n","returnType":"void"},{"args":[{"dataType":"java.lang.String","varName":"CaptureDeviceInput"},{"dataType":"java.lang.String","varName":"Username"},{"dataType":"java.lang.String","varName":"Password"}],"name":"TvtvConfigureInput","comment":"Deprecated. Use TvtvConfigureUser\n\n\n\n\n","returnType":"boolean"}],"name":"Global"}}