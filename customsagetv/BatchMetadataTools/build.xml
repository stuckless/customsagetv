<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="package" name="MovieMetadataUpdater" xmlns:ivy="antlib:org.apache.ivy.ant">
	<property environment="env" />
	<property name="sage.home" value="${env.SAGE_HOME}" />
	<property name="target" value="1.5" />
	<property name="source" value="1.5" />

	<property name="libs" value="lib" />
	<property name="targetDir" value="target" />
	<property name="name" value="metadata-updater" />
	<property name="version" value="4.0-beta15" />
	<property name="jarname" value="${name}.jar" />
	<property name="launcher" value="MetadataTool" />
	<property name="mainClass" value="org.jdna.metadataupdater.MetadataUpdater" />

	<!-- BEGIN IVY DEPENDENDCY MANAGER -->
	<property name="ivy.install.version" value="2.0.0-beta1" />
	<condition property="ivy.home" value="${env.IVY_HOME}">
		<isset property="env.IVY_HOME" />
	</condition>
	<property name="ivy.home" value="${user.home}/.ant" />
	<property name="ivy.jar.dir" value="${ivy.home}/lib" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

	<target name="download-ivy" unless="offline">
		<mkdir dir="${ivy.jar.dir}" />
		<!-- download Ivy from web site so that it can be used even without any special installation -->
		<get src="http://www.apache.org/dist/ant/ivy/${ivy.install.version}/ivy.jar" dest="${ivy.jar.file}" usetimestamp="true" />
	</target>

	<target name="init-ivy" depends="download-ivy">
		<!-- try to load ivy here from ivy home, in case the user has not already dropped
              it into ant's lib dir (note that the latter copy will always take precedence).
              We will not fail as long as local lib dir exists (it may be empty) and
              ivy is in at least one of ant's lib dir or the local lib dir. -->
		<path id="ivy.lib.path">
			<fileset dir="${ivy.jar.dir}" includes="*.jar" />
		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" />
	</target>

	<target name="resolve" description="retrieve dependencies with ivy">
		<!-- Pull these dependencies from the SageHome/JARs folder -->
		<copy todir="lib" file="${sage.home}/JARs/Sage.jar" failonerror="false" />
		<copy todir="lib" file="${sage.home}/JARs/phoenix.jar" failonerror="false" />
		<copy todir="lib" file="${sage.home}/JARs/sagex.api.jar" failonerror="false" />
		<copy todir="lib" file="${sage.home}/JARs/nielm_sageimdb.jar" failonerror="false" />
		<copy todir="lib" file="${sage.home}/JARs/nielm_sageutls.jar" failonerror="false" />

		<!-- This will simply update the phoenix and sagex.api from dev environment, if you have one -->
		<copy todir="lib" file="../Phoenix/target/phoenix.jar" failonerror="false" />
		<copy todir="lib" file="../SageAPI/target/sagex.api.jar" failonerror="false" />
		<ivy:retrieve />
	</target>

	<!-- END IVY DEPENDENDCY MANAGER -->

	<target name="init" depends="clean,init-ivy,resolve">
		<delete dir="bin" failonerror="false" />
		<delete dir="${targetDir}" failonerror="false" />
		<mkdir dir="${targetDir}" />
		<mkdir dir="bin" />
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="src" excludes="**/*.launch, **/*.java" />
		</copy>
	</target>

	<target name="all" depends="package" />
	<target name="package" depends="package-tool" />

	<target name="package-gwt">
		<delete dir="bin/gwt" />
		<mkdir dir="bin/gwt" />

		<copy toDir="bin/gwt/src" failonerror="true">
			<fileset dir="src" includes="org/jdna/media/metadata/PersistenceOptions.java,org/jdna/media/metadata/SearchQuery.java,org/jdna/metadataupdater/Version.java,org/jdna/media/metadata/MetadataID.java,org/jdna/media/metadata/MetadataKey.java,org/jdna/media/IMediaFolder.java,org/jdna/media/metadata/ICastMember.java,org/jdna/media/metadata/IMediaMetadata.java,org/jdna/media/metadata/IMediaArt.java,org/jdna/media/metadata/IProviderInfo.java,org/jdna/media/metadata/IMediaMetadataPersistence.java,org/jdna/media/metadata/IMediaMetadataProvider.java,org/jdna/media/metadata/IMediaSearchResult.java,org/jdna/media/IMediaResource.java,org/jdna/media/IMediaResourceFilter.java,org/jdna/media/IMediaStackModel.java,org/jdna/media/IMediaFile.java,org/jdna/media/IMediaResourceVisitor.java,org/jdna/media/IPath.java">
				<exclude name="**/impl/**" />
			</fileset>
		</copy>

		<copy file="gwt/bmt.gwt.xml" todir="bin/gwt/" />
	</target>

	<target name="update-bmtweb-for-testing">
		<copy todir="../BMTWeb/war/testing/">
			<fileset dir="resources/STVs/" />
		</copy>
		<copy todir="../BMTWeb/war/testing/">
			<fileset dir="../Phoenix/src/main/STVs/"/>
		</copy>
	</target>

	<target name="package-war">
		<mkdir dir="${targetDir}" />
		<mkdir dir="${targetDir}/sage" />
		<mkdir dir="${targetDir}/sage/jetty" />
		<mkdir dir="${targetDir}/sage/jetty/webapps" />
		<mkdir dir="${targetDir}/sage/jetty/contexts" />
		<war destfile="${targetDir}/sage/jetty/webapps/bmt.war">
			<fileset dir="../BMTWeb/war/" excludes="**/*.log*,log4j.properties,**/cache/**,**/scrapers/**,**/testing/**,**/STVs/**" />
		</war>
		<copy file="../BMTWeb/jetty/bmt.xml" todir="${targetDir}/sage/jetty/contexts" />

		<!-- copy the metadata -->
		<mkdir dir="${targetDir}/sage/" />
		<copy todir="${targetDir}/sage/">
			<fileset dir="resources" includes="STVs/**"/>
		</copy>

	</target>

	<target name="package-tool" depends="init,copyJars,package-gwt,makeJar,makeLaunch,package-war">
		<mkdir dir="${targetDir}/sage" />
		<mkdir dir="${targetDir}/sage/JARs" />
		<mkdir dir="${targetDir}/sage/STVs/SageTV3/" />
		<mkdir dir="${targetDir}/sage/STVs/Phoenix/vfs/" />

		<copy toDir="${targetDir}/sage/scrapers">
			<fileset dir="scrapers">
			</fileset>
		</copy>

		<!-- deploy the vfs as a plugin -->
		<copy toDir="${targetDir}/sage/STVs/Phoenix/vfs/" failonerror="true">
			<fileset dir="../Phoenix/src/main/STVs/Phoenix/vfs/">
			</fileset>
		</copy>

		<copy toDir="${targetDir}/sage">
			<fileset dir="resources/props" />
		</copy>

		<copy toDir="${targetDir}/sage">
			<fileset dir="docs">
			</fileset>
		</copy>

		<zip destfile="${targetDir}/${name}-${version}.zip" basedir="${targetDir}/sage" />
	</target>

	<target name="copyJars">
		<copydir dest="${targetDir}/sage/JARs" src="${libs}" excludes="Sage*.jar,nielm*.jar,junit*.jar,easymock*.jar" />
		<move file="${targetDir}/sage/JARs/commons-codec-1.3.jar" tofile="${targetDir}/sage/JARs/commons-codec.jar" />
		<move file="${targetDir}/sage/JARs/commons-dbutils-1.3.jar" tofile="${targetDir}/sage/JARs/commons-dbutils.jar" />
		<move file="${targetDir}/sage/JARs/commons-io-1.4.jar" tofile="${targetDir}/sage/JARs/commons-io.jar" />
		<move file="${targetDir}/sage/JARs/commons-lang-2.4.jar" tofile="${targetDir}/sage/JARs/commons-lang.jar" />
		<move file="${targetDir}/sage/JARs/log4j-1.2.15.jar" tofile="${targetDir}/sage/JARs/log4j.jar" />
		<move file="${targetDir}/sage/JARs/lucene-core-2.4.1.jar" tofile="${targetDir}/sage/JARs/lucene-core.jar" />
		<move file="${targetDir}/sage/JARs/h2-1.2.128.jar" tofile="${targetDir}/sage/JARs/h2.jar" />
		<move file="${targetDir}/sage/JARs/htmlparser-1.6.jar" tofile="${targetDir}/sage/JARs/htmlparser.jar" />
	</target>

	<target name="buildVersion">
		<echo file="src/org/jdna/metadataupdater/Version.java">
			package org.jdna.metadataupdater;

			public class Version {
			    public static final String VERSION = "${version}";
			}
		</echo>
	</target>

	<path id="ApplicationClasspath">
		<pathelement location="bin" />
		<fileset dir="${libs}" includes="*.jar" />
	</path>

	<target name="build" depends="buildVersion">
		<javac debug="true" source="${source}" target="${target}" classpathref="ApplicationClasspath" srcdir="src" destdir="bin">
		</javac>
	</target>

	<target name="makeJar" depends="build">
		<jar destfile="${targetDir}/sage/JARs/${jarname}">
			<fileset dir="bin" />
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Specification-Title" value="Metadata Tools" />
				<attribute name="Specification-Version" value="${version}  ${TODAY}" />
				<attribute name="Specification-Vendor" value="Sean Stuckless" />
				<attribute name="Implementation-Title" value="Metadata Tools" />
				<attribute name="Implementation-Version" value="${version}" />
				<attribute name="Implementation-Vendor" value="Sean Stuckless" />
			</manifest>
		</jar>
	</target>

	<target name="makeLaunch">
		<!-- build the classpath for the entries that we want -->
		<path id="project.classpath">
			<fileset dir="${targetDir}/sage/JARs" includes="*.jar">
			</fileset>
		</path>

		<!-- Convert project class path to string property -->
		<pathconvert property="mf.classpath" pathsep=" ">
			<path refid="project.classpath" />
			<chainedmapper>
				<flattenmapper />
				<regexpmapper from="(.*)" to="JARs/\1" />
			</chainedmapper>
		</pathconvert>

		<jar destfile="${targetDir}/sage/${launcher}.jar" whenempty="create">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Specification-Title" value="Batch Metadata Tools" />
				<attribute name="Specification-Version" value="${version}" />
				<attribute name="Specification-Vendor" value="jdna.org" />
				<attribute name="Implementation-Title" value="Batch Metadata Tools" />
				<attribute name="Implementation-Version" value="${version}" />
				<attribute name="Implementation-Vendor" value="jdna.org" />
				<attribute name="Main-Class" value="${mainClass}" />
				<attribute name="Class-Path" value="${mf.classpath}" />
			</manifest>
		</jar>
	</target>

	<target name="clean">
		<delete dir="${targetDir}" />
	</target>

	<target name="generate-constants">
		<xslt style="src/org/jdna/media/metadata/MetadataKey.xsl" in="src/org/jdna/media/metadata/MetadataKey.xml" out="src/org/jdna/media/metadata/MetadataKey.java">
		</xslt>
	</target>
</project>
