#summary Http Services for SageTV

Before you begin, ensure that you have installed the latest sages-api jar on the SageTV server.

If you have configured the server correctly, then you can test if you have basic access, by going to the following url

 http://server:8080/sagex/api

This should return back a Help page showing the current usage for the api services.

The results from the api services can be either xml, json, jsonp, or nielm's xml format.  The default is simply xml.  If you want to use another format, then use encoder= arg.

=Url Format=
 /sagex/api&command=SAGE_COMMAND&1=arg1&2=arg2...&start=#&size=#&context=SAGE_UI_CONTEXT&encoder=xml|json|nielm&jsoncallback=functionName

 * *command*	SageTV Command (can also use c= as a short form)
 * *start*	If the return type is an array, start at this element (0 is the first element)
 * *size*	If the return type is an array, return this # of elements
 * *context*	SageTV UI Context (only needed for UI Commands)
 * *encoder*	Which encoder to use for encoding the results. xml is default.
 * *jsoncallback*	(json only) The callback function name if you want to return the result as a JSONP string rather than a normal JSON string

==Special Url Values==
If a url arg, ie, 1,2,3, contains any of the following prefixes, *mediafile, ariing, playlist, channel, show*, then the argument will be converted to a Sage Object.

ie, you can use mediafile:323241 to mean that the argument is a reference to *mediafile* object with id of 323241.  If you are using *playlist* then you specify the playlistname, ie, *playlist:My+Playlist*

=Examples=
Return the media files from 10-29
 /sagex/api?c=GetMediaFiles&start=10&size=20

Return All TV Media File
 /sagex/api?c=GetMediaFiles&1=T

Return The first 50 MediaFiles using Nielm's Xml Encoder
 /sagex/api?c=GetMediaFiles&1=T&encoder=nielm

Return the Sorted TV Media Files, using an Evaluated Expression
 /sagex/api?c=EvaluateExpression&1=Sort(GetMediaFiles("T"),false,"Intelligent")


=Media Handler=
In addition to the api handler, there are a number of media handlers for fetching the media file, poster, background, banner and thumbnail.

You can get a help page for the media handler using
 /sagex/media

==Media Handler Format==
 /sagex/media/COMMAND/MEDIA_ID
 * COMMAND - one of thumbnail, mediafile, poster, banner, background
 * MEDIA_ID - MediaFile ID

The alternate format is 
 /sagex/media/COMMAND?mediafile=MEDIAFILE_ID

==Phoenix APIs=
If you have 1.26 or later of the Phoenix APIs installed, then you can user poster, banner, or background.  These will not work without the phoenix apis.

Also, if you have Phoenix APIs instaled, you can dynamically apply any image tranformation by passing it in as a *transform* arg.

ie,
 /sagex/media/poster?mediafile=2313223&transform=[{name:scale, height:100},{name:reflection}]

This will fetch the poster for the mediafile and scale the poster to 100px height, and then apply a reflection to the poster.